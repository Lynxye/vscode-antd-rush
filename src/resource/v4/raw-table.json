{
  "zh": {
    "Alert": [
      "| 参数          | 说明                                                 | 类型                      | 默认值                               |\n| ----------- | -------------------------------------------------- | ----------------------- | --------------------------------- |\n| afterClose  | 关闭动画结束后触发的回调函数                                     | () => void              | -                                 |\n| banner      | 是否用作顶部公告                                           | boolean                 | false                             |\n| closable    | 默认不显示关闭按钮                                          | boolean                 | 无                                 |\n| closeText   | 自定义关闭按钮                                            | string\\|ReactNode       | 无                                 |\n| description | 警告提示的辅助性文字介绍                                       | string\\|ReactNode       | 无                                 |\n| icon        | 自定义图标，`showIcon` 为 `true` 时有效                      | ReactNode               | -                                 |\n| message     | 警告提示内容                                             | string\\|ReactNode       | 无                                 |\n| showIcon    | 是否显示辅助图标                                           | boolean                 | false，`banner` 模式下默认值为 true       |\n| type        | 指定警告提示的样式，有四种选择 `success`、`info`、`warning`、`error` | string                  | `info`，`banner` 模式下默认值为 `warning` |\n| onClose     | 关闭时触发的回调函数                                         | (e: MouseEvent) => void | 无                                 |"
    ],
    "Affix": [
      "| 成员           | 说明                                         | 类型                | 默认值          |\n| ------------ | ------------------------------------------ | ----------------- | ------------ |\n| offsetBottom | 距离窗口底部达到指定偏移量后触发                           | number            | -            |\n| offsetTop    | 距离窗口顶部达到指定偏移量后触发                           | number            | -            |\n| target       | 设置 `Affix` 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 | () => HTMLElement | () => window |\n| onChange     | 固定状态改变时触发的回调函数                             | Function(affixed) | -            |"
    ],
    "Anchor": [
      "| 成员               | 说明                                                                  | 类型                                  | 默认值          | 版本  |\n| ---------------- | ------------------------------------------------------------------- | ----------------------------------- | ------------ | --- |\n| affix            | 固定模式                                                                | boolean                             | true         |     |\n| bounds           | 锚点区域边界                                                              | number                              | 5(px)        |     |\n| getContainer     | 指定滚动的容器                                                             | () => HTMLElement                   | () => window |     |\n| offsetBottom     | 距离窗口底部达到指定偏移量后触发                                                    | number                              |              |     |\n| offsetTop        | 距离窗口顶部达到指定偏移量后触发                                                    | number                              |              |     |\n| showInkInFixed   | 固定模式是否显示小圆点                                                         | boolean                             | false        |     |\n| onClick          | `click` 事件的 handler                                                 | Function(e: Event, link: Object)    | -            |     |\n| getCurrentAnchor | 自定义高亮的锚点                                                            | () => string                        | -            |     |\n| targetOffset     | 锚点滚动偏移量，默认与 offsetTop 相同，[例子](#components-anchor-demo-targetOffset) | number                              | `offsetTop`  |     |\n| onChange         | 监听锚点链接改变                                                            | (currentActiveLink: string) => void |              |     |"
    ],
    "AutoComplete": [
      "| 参数                       | 说明                                                                                               | 类型                                                                                              | 默认值                 | 版本  |\n| ------------------------ | ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------- | ------------------- | --- |\n| allowClear               | 支持清除, 单选模式有效                                                                                     | boolean                                                                                         | false               |     |\n| autoFocus                | 自动获取焦点                                                                                           | boolean                                                                                         | false               |     |\n| backfill                 | 使用键盘选择选项的时候把选中项回填到输入框中                                                                           | boolean                                                                                         | false               |     |\n| children (自定义输入框)        | 自定义输入框                                                                                           | HTMLInputElement <br /><br /> HTMLTextAreaElement <br /><br /> `React.ReactElement<InputProps>` | `<Input />`         |     |\n| children (自动完成的数据源)      | 自动完成的数据源                                                                                         | `React.ReactElement<OptionProps>` <br /><br /> `Array<React.ReactElement<OptionProps>>`         | -                   |     |\n| defaultActiveFirstOption | 是否默认高亮第一个选项。                                                                                     | boolean                                                                                         | true                |     |\n| defaultValue             | 指定默认选中的条目                                                                                        | string                                                                                          | 无                   |     |\n| disabled                 | 是否禁用                                                                                             | boolean                                                                                         | false               |     |\n| filterOption             | 是否根据输入项进行筛选。当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。 | boolean or function(inputValue, option)                                                         | true                |     |\n| getPopupContainer        | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codesandbox.io/s/4j168r7jw0)   | Function(triggerNode)                                                                           | () => document.body |     |\n| placeholder              | 输入框提示                                                                                            | string                                                                                          | -                   |     |\n| value                    | 指定当前选中的条目                                                                                        | string                                                                                          | 无                   |     |\n| onBlur                   | 失去焦点时的回调                                                                                         | function()                                                                                      | -                   |     |\n| onChange                 | 选中 option，或 input 的 value 变化时，调用此函数                                                              | function(value)                                                                                 | 无                   |     |\n| onFocus                  | 获得焦点时的回调                                                                                         | function()                                                                                      | -                   |     |\n| onSearch                 | 搜索补全项的时候调用                                                                                       | function(value)                                                                                 | 无                   |     |\n| onSelect                 | 被选中时调用，参数为选中项的 value 值                                                                           | function(value, option)                                                                         | 无                   |     |\n| defaultOpen              | 是否默认展开下拉菜单                                                                                       | boolean                                                                                         | -                   |     |\n| open                     | 是否展开下拉菜单                                                                                         | boolean                                                                                         | -                   |     |\n| onDropdownVisibleChange  | 展开下拉菜单的回调                                                                                        | function(open)                                                                                  | -                   |     |"
    ],
    "Avatar": [
      "| 参数      | 说明                                      | 类型                                        | 默认值       | 版本  |\n| ------- | --------------------------------------- | ----------------------------------------- | --------- | --- |\n| icon    | 设置头像的自定义图标                              | ReactNode                                 | -         |     |\n| shape   | 指定头像的形状                                 | `circle` \\| `square`                      | `circle`  |     |\n| size    | 设置头像的大小                                 | number \\| `large` \\| `small` \\| `default` | `default` |     |\n| src     | 图片类头像的资源地址                              | string                                    | -         |     |\n| srcSet  | 设置图片类头像响应式资源地址                          | string                                    | -         |     |\n| alt     | 图像无法显示时的替代文本                            | string                                    | -         |     |\n| onError | 图片加载失败的事件，返回 false 会关闭组件默认的 fallback 行为 | () => boolean                             | -         |     |"
    ],
    "Anchor.Link": [
      "| 成员     | 说明               | 类型                | 默认值 | 版本  |\n| ------ | ---------------- | ----------------- | --- | --- |\n| href   | 锚点链接             | string            |     |     |\n| title  | 文字内容             | string\\|ReactNode |     |     |\n| target | 该属性指定在何处显示链接的资源。 | string            |     |     |"
    ],
    "BackTop": [
      "| 参数               | 说明                                | 类型       | 默认值          | 版本  |\n| ---------------- | --------------------------------- | -------- | ------------ | --- |\n| target           | 设置需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 | Function | () => window |     |\n| visibilityHeight | 滚动高度达到此参数值才出现 `BackTop`           | number   | 400          |     |\n| onClick          | 点击按钮的回调函数                         | Function | -            |     |"
    ],
    "Badge": [
      "| 参数            | 说明                                                      | 类型                                                             | 默认值     | 版本  |\n| ------------- | ------------------------------------------------------- | -------------------------------------------------------------- | ------- | --- |\n| color         | 自定义小圆点的颜色                                               | string                                                         | -       |     |\n| count         | 展示的数字，大于 overflowCount 时显示为 `${overflowCount}+`，为 0 时隐藏 | ReactNode                                                      |         |     |\n| dot           | 不展示数字，只有一个小红点                                           | boolean                                                        | false   |     |\n| offset        | 设置状态点的位置偏移，格式为 `[x, y]`                                 | `[number, number]`                                             | -       |     |\n| overflowCount | 展示封顶的数字值                                                | number                                                         | 99      |     |\n| showZero      | 当数值为 0 时，是否展示 Badge                                     | boolean                                                        | false   |     |\n| status        | 设置 Badge 为状态点                                           | `success` \\| `processing` \\| `default` \\| `error` \\| `warning` | ''      |     |\n| text          | 在设置了 `status` 的前提下有效，设置状态点的文本                           | string                                                         | ''      |     |\n| title         | 设置鼠标放在状态点上时显示的文字                                        | string                                                         | `count` |     |"
    ],
    "Breadcrumb": [
      "| 参数         | 说明                          | 类型                                          | 默认值 | 版本  |\n| ---------- | --------------------------- | ------------------------------------------- | --- | --- |\n| itemRender | 自定义链接函数，和 react-router 配置使用 | (route, params, routes, paths) => ReactNode | -   |     |\n| params     | 路由的参数                       | object                                      | -   |     |\n| routes     | router 的路由栈信息               | [routes\\[\\]](#routes)                       | -   |     |\n| separator  | 分隔符自定义                      | string\\|ReactNode                           | '/' |     |"
    ],
    "Breadcrumb.Separator": [
      "| 参数       | 说明      | 类型                | 默认值 | 版本  |\n| -------- | ------- | ----------------- | --- | --- |\n| children | 要显示的分隔符 | string\\|ReactNode | '/' |     |"
    ],
    "Calendar": [
      "| 参数                  | 说明                      | 类型                                                                               | 默认值                                                                                                     | 版本  |\n| ------------------- | ----------------------- | -------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- | --- |\n| dateCellRender      | 自定义渲染日期单元格，返回内容会被追加到单元格 | function(date: moment): ReactNode                                                | 无                                                                                                       |     |\n| dateFullCellRender  | 自定义渲染日期单元格，返回内容覆盖单元格    | function(date: moment): ReactNode                                                | 无                                                                                                       |     |\n| defaultValue        | 默认展示的日期                 | [moment](http://momentjs.com/)                                                   | 默认日期                                                                                                    |     |\n| disabledDate        | 不可选择的日期                 | (currentDate: moment) => boolean                                                 | 无                                                                                                       |     |\n| fullscreen          | 是否全屏显示                  | boolean                                                                          | true                                                                                                    |     |\n| locale              | 国际化配置                   | object                                                                           | [默认配置](https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json) |     |\n| mode                | 初始模式，`month/year`       | string                                                                           | month                                                                                                   |     |\n| monthCellRender     | 自定义渲染月单元格，返回内容会被追加到单元格  | function(date: moment): ReactNode                                                | 无                                                                                                       |     |\n| monthFullCellRender | 自定义渲染月单元格，返回内容覆盖单元格     | function(date: moment): ReactNode                                                | 无                                                                                                       |     |\n| validRange          | 设置可以显示的日期               | \\[[moment](http://momentjs.com/), [moment](http://momentjs.com/)]                | 无                                                                                                       |     |\n| value               | 展示日期                    | [moment](http://momentjs.com/)                                                   | 当前日期                                                                                                    |     |\n| onPanelChange       | 日期面板变化回调                | function(date: moment, mode: string)                                             | 无                                                                                                       |     |\n| onSelect            | 点击选择日期回调                | function(date: moment）                                                           | 无                                                                                                       |     |\n| onChange            | 日期变化回调                  | function(date: moment）                                                           | 无                                                                                                       |     |\n| headerRender        | 自定义头部内容                 | function(object:{value: moment, type: string, onChange: f(), onTypeChange: f()}) | 无                                                                                                       |     |"
    ],
    "Button": [
      "| 属性       | 说明                                                                                                                    | 类型                             | 默认值      | 版本  |\n| -------- | --------------------------------------------------------------------------------------------------------------------- | ------------------------------ | -------- | --- |\n| disabled | 按钮失效状态                                                                                                                | boolean                        | `false`  |     |\n| ghost    | 幽灵属性，使按钮背景透明                                                                                                          | boolean                        | false    |     |\n| href     | 点击跳转的地址，指定此属性 button 的行为和 a 链接一致                                                                                      | string                         | -        |     |\n| htmlType | 设置 `button` 原生的 `type` 值，可选值请参考 [HTML 标准](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type) | string                         | `button` |     |\n| icon     | 设置按钮的图标组件                                                                                                             | ReactNode                      | -        |     |\n| loading  | 设置按钮载入状态                                                                                                              | boolean \\| { delay: number }   | `false`  |     |\n| shape    | 设置按钮形状，可选值为 `circle`、 `round` 或者不设                                                                                    | string                         | -        |     |\n| size     | 设置按钮大小                                                                                                                | `large` \\| `middle` \\| `small` | 无        |     |\n| target   | 相当于 a 链接的 target 属性，href 存在时生效                                                                                        | string                         | -        |     |\n| type     | 设置按钮类型，可选值为 `primary` `dashed` `link` 或者不设                                                                            | string                         | -        |     |\n| onClick  | 点击按钮时的回调                                                                                                              | (event) => void                | -        |     |\n| block    | 将按钮宽度调整为其父宽度的选项                                                                                                       | boolean                        | `false`  |     |\n| danger   | 设置危险按钮                                                                                                                | boolean                        | `false`  |     |"
    ],
    "Breadcrumb.Item": [
      "| 参数            | 说明           | 类型                                     | 默认值 | 版本  |\n| ------------- | ------------ | -------------------------------------- | --- | --- |\n| href          | 链接的目的地       | string                                 | -   |     |\n| overlay       | 下拉菜单的内容      | [Menu](/components/menu) \\| () => Menu | -   |     |\n| onClick       | 单击事件         | (e:MouseEvent)=>void                   | -   |     |\n| dropdownProps | 弹出下拉菜单的自定义配置 | [Dropdown](/components/dropdown)       | -   |     |"
    ],
    "Card": [
      "| 参数                  | 说明                                                  | 类型                                      | 默认值       | 版本  |\n| ------------------- | --------------------------------------------------- | --------------------------------------- | --------- | --- |\n| actions             | 卡片操作组，位置在卡片底部                                       | Array&lt;ReactNode>                     | -         |     |\n| activeTabKey        | 当前激活页签的 key                                         | string                                  | -         |     |\n| headStyle           | 自定义标题区域样式                                           | object                                  | -         |     |\n| bodyStyle           | 内容区域自定义样式                                           | object                                  | -         |     |\n| bordered            | 是否有边框                                               | boolean                                 | true      |     |\n| cover               | 卡片封面                                                | ReactNode                               | -         |     |\n| defaultActiveTabKey | 初始化选中页签的 key，如果没有设置 activeTabKey                    | string                                  | 第一个页签     |     |\n| extra               | 卡片右上角的操作区域                                          | string\\|ReactNode                       | -         |     |\n| hoverable           | 鼠标移过时可浮起                                            | boolean                                 | false     |     |\n| loading             | 当卡片内容还在加载中时，可以用 loading 展示一个占位                      | boolean                                 | false     |     |\n| tabList             | 页签标题列表                                              | Array&lt;{key: string, tab: ReactNode}> | -         |     |\n| tabBarExtraContent  | tab bar 上额外的元素                                      | React.ReactNode                         | 无         |     |\n| size                | card 的尺寸                                            | `default` \\| `small`                    | `default` |     |\n| title               | 卡片标题                                                | string\\|ReactNode                       | -         |     |\n| type                | 卡片类型，可设置为 `inner` 或 不设置                             | string                                  | -         |     |\n| onTabChange         | 页签切换的回调                                             | (key) => void                           | -         |     |\n| tabProps            | [Tabs](https://ant.design/components/tabs-cn/#Tabs) | -                                       | -         |     |"
    ],
    "Card.Meta": [
      "| 参数          | 说明        | 类型        | 默认值 | 版本  |\n| ----------- | --------- | --------- | --- | --- |\n| avatar      | 头像/图标     | ReactNode | -   |     |\n| className   | 容器类名      | string    | -   |     |\n| description | 描述内容      | ReactNode | -   |     |\n| style       | 定义容器类名的样式 | object    | -   |     |\n| title       | 标题内容      | ReactNode | -   |     |"
    ],
    "Carousel": [
      "| 参数           | 说明                                            | 类型                               | 默认值     | 版本  |     |\n| ------------ | --------------------------------------------- | -------------------------------- | ------- | --- | --- |\n| afterChange  | 切换面板的回调                                       | function(current)                | 无       |     |     |\n| autoplay     | 是否自动切换                                        | boolean                          | false   |     |     |\n| beforeChange | 切换面板的回调                                       | function(from, to)               | 无       |     |     |\n| dotPosition  | 面板指示点位置，可选 `top` `bottom` `left` `right`      | string                           | bottom  |     |     |\n| dots         | 是否显示面板指示点，如果为 `object` 则同时可以指定 `dotsClass` 或者 | boolean \\| { className?:string } | true    |     |     |\n| easing       | 动画效果                                          | string                           | linear  |     |     |\n| effect       | 动画效果函数，可取 scrollx, fade                       | string                           | scrollx |     |     |"
    ],
    "Card.Grid": [
      "| 参数        | 说明          | 类型      | 默认值  | 版本  |\n| --------- | ----------- | ------- | ---- | --- |\n| className | 网格容器类名      | string  | -    |     |\n| hoverable | 鼠标移过时可浮起    | boolean | true |     |\n| style     | 定义网格容器类名的样式 | object  | -    |     |"
    ],
    "Cascader": [
      "| 参数                   | 说明                                                                                                           | 类型                                      | 默认值                                                        | 版本  |\n| -------------------- | ------------------------------------------------------------------------------------------------------------ | --------------------------------------- | ---------------------------------------------------------- | --- |\n| allowClear           | 是否支持清除                                                                                                       | boolean                                 | true                                                       |     |\n| autoFocus            | 自动获取焦点                                                                                                       | boolean                                 | false                                                      |     |\n| bordered             | 是否有边框                                                                                                        | boolean                                 | true                                                       |     |\n| changeOnSelect       | 当此项为 true 时，点选每级菜单选项值都会发生变化，具体见上面的演示                                                                         | boolean                                 | false                                                      |     |\n| className            | 自定义类名                                                                                                        | string                                  | -                                                          |     |\n| defaultValue         | 默认的选中项                                                                                                       | string\\[]                               | \\[]                                                        |     |\n| disabled             | 禁用                                                                                                           | boolean                                 | false                                                      |     |\n| displayRender        | 选择后展示的渲染函数                                                                                                   | `(label, selectedOptions) => ReactNode` | `label => label.join(' / ')`                               |     |\n| expandTrigger        | 次级菜单的展开方式，可选 'click' 和 'hover'                                                                               | string                                  | 'click'                                                    |     |\n| fieldNames           | 自定义 options 中 label name children 的字段                                                                        | object                                  | `{ label: 'label', value: 'value', children: 'children' }` |     |\n| getPopupContainer    | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codepen.io/afc163/pen/zEjNOy?editors=0010) | Function(triggerNode)                   | () => document.body                                        |     |\n| loadData             | 用于动态加载选项，无法与 `showSearch` 一起使用                                                                               | `(selectedOptions) => void`             | -                                                          |     |\n| notFoundContent      | 当下拉列表为空时显示的内容                                                                                                | string                                  | 'Not Found'                                                |     |\n| options              | 可选项数据源                                                                                                       | [Option](#Option)\\[]                    | -                                                          |     |\n| placeholder          | 输入框占位文本                                                                                                      | string                                  | '请选择'                                                      |     |\n| popupClassName       | 自定义浮层类名                                                                                                      | string                                  | -                                                          |     |\n| popupPlacement       | 浮层预设位置：`bottomLeft` `bottomRight` `topLeft` `topRight`                                                       | Enum                                    | `bottomLeft`                                               |     |\n| popupVisible         | 控制浮层显隐                                                                                                       | boolean                                 | -                                                          |     |\n| showSearch           | 在选择框中显示搜索框                                                                                                   | boolean                                 | false                                                      |     |\n| size                 | 输入框大小                                                                                                        | `large` \\| `middle` \\| `small`          | 无                                                          |     |\n| style                | 自定义样式                                                                                                        | string                                  | -                                                          |     |\n| suffixIcon           | 自定义的选择框后缀图标                                                                                                  | ReactNode                               | -                                                          |     |\n| value                | 指定选中项                                                                                                        | string\\[]                               | -                                                          |     |\n| onChange             | 选择完成后的回调                                                                                                     | `(value, selectedOptions) => void`      | -                                                          |     |\n| onPopupVisibleChange | 显示/隐藏浮层的回调                                                                                                   | `(value) => void`                       | -                                                          |     |"
    ],
    "Checkbox.Group": [
      "| 参数           | 说明                                                     | 类型                     | 默认值   | 版本  |\n| ------------ | ------------------------------------------------------ | ---------------------- | ----- | --- |\n| defaultValue | 默认选中的选项                                                | string\\[]              | \\[]   |     |\n| disabled     | 整组失效                                                   | boolean                | false |     |\n| name         | CheckboxGroup 下所有 `input[type=\"checkbox\"]` 的 `name` 属性 | string                 | -     |     |\n| options      | 指定可选项                                                  | string\\[] \\| Option\\[] | \\[]   |     |\n| value        | 指定选中的选项                                                | string\\[]              | \\[]   |     |\n| onChange     | 变化时回调函数                                                | Function(checkedValue) | -     |     |"
    ],
    "Collapse": [
      "| 参数                   | 说明               | 类型                                    | 默认值                      | 版本  |\n| -------------------- | ---------------- | ------------------------------------- | ------------------------ | --- |\n| activeKey            | 当前激活 tab 面板的 key | string\\[]\\|string\\| number\\[]\\|number | 默认无，accordion 模式下默认第一个元素 |     |\n| defaultActiveKey     | 初始化选中面板的 key     | string\\[]\\|string\\| number\\[]\\|number | 无                        |     |\n| bordered             | 带边框风格的折叠面板       | boolean                               | `true`                   |     |\n| accordion            | 手风琴模式            | boolean                               | `false`                  |     |\n| onChange             | 切换面板的回调          | Function                              | 无                        |     |\n| expandIcon           | 自定义切换图标          | (panelProps) => ReactNode             | -                        |     |\n| expandIconPosition   | 设置图标位置           | `left` \\| `right`                     | -                        |     |\n| destroyInactivePanel | 销毁折叠隐藏的面板        | boolean                               | `false`                  |     |"
    ],
    "Checkbox": [
      "| 参数             | 说明                          | 类型                | 默认值   | 版本  |\n| -------------- | --------------------------- | ----------------- | ----- | --- |\n| autoFocus      | 自动获取焦点                      | boolean           | false |     |\n| checked        | 指定当前是否选中                    | boolean           | false |     |\n| defaultChecked | 初始是否选中                      | boolean           | false |     |\n| disabled       | 失效状态                        | boolean           | false |     |\n| indeterminate  | 设置 indeterminate 状态，只负责样式控制 | boolean           | false |     |\n| onChange       | 变化时回调函数                     | Function(e:Event) | -     |     |"
    ],
    "Collapse.Panel": [
      "| 参数          | 说明                    | 类型                | 默认值    | 版本  |\n| ----------- | --------------------- | ----------------- | ------ | --- |\n| disabled    | 禁用后的面板展开与否将无法通过用户交互改变 | boolean           | false  |     |\n| forceRender | 被隐藏时是否渲染 DOM 结构       | boolean           | false  |     |\n| header      | 面板头内容                 | string\\|ReactNode | 无      |     |\n| key         | 对应 activeKey          | string\\|number    | 无      |     |\n| showArrow   | 是否展示当前面板上的箭头          | boolean           | `true` |     |\n| extra       | 自定义渲染每个面板右上角的内容       | ReactNode         | -      |     |"
    ],
    "Comment": [
      "| 参数       | 说明                                     | 类型                | 默认值 | 版本  |\n| -------- | -------------------------------------- | ----------------- | --- | --- |\n| actions  | 在评论内容下面呈现的操作项列表                        | Array<ReactNode>  | -   |     |\n| author   | 要显示为注释作者的元素                            | string\\|ReactNode | -   |     |\n| avatar   | 要显示为评论头像的元素 - 通常是 antd `Avatar` 或者 src | string\\|ReactNode | -   |     |\n| children | 嵌套注释应作为注释的子项提供                         | ReactNode         | -   |     |\n| content  | 评论的主要内容                                | string\\|ReactNode | -   |     |\n| datetime | 展示时间描述                                 | string\\|ReactNode | -   |     |"
    ],
    "Descriptions": [
      "| 参数       | 说明                                                                      | 类型                               | 默认值          | 版本  |\n| -------- | ----------------------------------------------------------------------- | -------------------------------- | ------------ | --- |\n| title    | 描述列表的标题，显示在最顶部                                                          | ReactNode                        | -            |     |\n| bordered | 是否展示边框                                                                  | boolean                          | false        |     |\n| column   | 一行的 `DescriptionItems` 数量，可以写成像素值或支持响应式的对象写法 `{ xs: 8, sm: 16, md: 24}` | number                           | 3            |     |\n| size     | 设置列表的大小。可以设置为 `middle` 、`small`, 或不填（只有设置 `bordered={true}` 生效）         | `default` \\| `middle` \\| `small` | false        |     |\n| layout   | 描述布局                                                                    | `horizontal` \\| `vertical`       | `horizontal` |     |\n| colon    | 配置 `Descriptions.Item` 的 `colon` 的默认值                                   | boolean                          | true         |     |"
    ],
    "Drawer": [
      "| 参数                 | 说明                                                      | 类型                                                       | 默认值     |\n| ------------------ | ------------------------------------------------------- | -------------------------------------------------------- | ------- |\n| closable           | 是否显示右上角的关闭按钮                                            | boolean                                                  | true    |\n| destroyOnClose     | 关闭时销毁 Drawer 里的子元素                                      | boolean                                                  | false   |\n| forceRender        | 预渲染 Drawer 内元素                                          | boolean                                                  | false   |\n| getContainer       | 指定 Drawer 挂载的 HTML 节点, false 为挂载在当前 dom                 | HTMLElement \\| `() => HTMLElement` \\| Selectors \\| false | 'body'  |\n| maskClosable       | 点击蒙层是否允许关闭                                              | boolean                                                  | true    |\n| mask               | 是否展示遮罩                                                  | boolean                                                  | true    |\n| maskStyle          | 遮罩样式                                                    | object                                                   | {}      |\n| style              | 可用于设置 Drawer 最外层容器的样式，和 `drawerStyle` 的区别是作用节点包括 `mask` | object                                                   | -       |\n| drawerStyle        | 用于设置 Drawer 弹出层的样式                                      | object                                                   | -       |\n| headerStyle        | 用于设置 Drawer 头部的样式                                       | object                                                   | -       |\n| bodyStyle          | 可用于设置 Drawer 内容部分的样式                                    | object                                                   | -       |\n| title              | 标题                                                      | string \\| ReactNode                                      | -       |\n| visible            | Drawer 是否可见                                             | boolean                                                  | -       |\n| width              | 宽度                                                      | string \\| number                                         | 256     |\n| height             | 高度, 在 `placement` 为 `top` 或 `bottom` 时使用                | string \\| number                                         | 256     |\n| className          | 对话框外层容器的类名                                              | string                                                   | -       |\n| zIndex             | 设置 Drawer 的 `z-index`                                   | number                                                   | 1000    |\n| placement          | 抽屉的方向                                                   | `top` \\| `right` \\| `bottom` \\| `left`                   | `right` |\n| onClose            | 点击遮罩层或右上角叉或取消按钮的回调                                      | function(e)                                              | -       |\n| afterVisibleChange | 切换抽屉时动画结束后的回调                                           | function(visible)                                        | -       |\n| keyboard           | 是否支持键盘 esc 关闭                                           | boolean                                                  | true    |\n| footer             | 抽屉的页脚                                                   | ReactNode                                                | -       |\n| footerStyle        | 抽屉页脚部件的样式                                               | CSSProperties                                            | -       |"
    ],
    "Descriptions.Item": [
      "| 参数    | 说明     | 类型        | 默认值 | 版本  |\n| ----- | ------ | --------- | --- | --- |\n| label | 内容的描述  | ReactNode | -   |     |\n| span  | 包含列的数量 | number    | 1   |     |"
    ],
    "Divider": [
      "| 参数          | 说明       | 类型                            | 默认值          | 版本  |\n| ----------- | -------- | ----------------------------- | ------------ | --- |\n| className   | 分割线样式类   | string                        | -            |     |\n| dashed      | 是否虚线     | boolean                       | false        |     |\n| orientation | 分割线标题的位置 | `left` \\| `right` \\| `center` | `center`     |     |\n| style       | 分割线样式对象  | object                        | -            |     |\n| type        | 水平还是垂直类型 | `horizontal` \\| `vertical`    | `horizontal` |     |"
    ],
    "Empty": [
      "| 参数          | 说明                          | 类型                  | 默认值                             | 版本  |\n| ----------- | --------------------------- | ------------------- | ------------------------------- | --- |\n| description | 自定义描述内容                     | string \\| ReactNode | -                               |     |\n| imageStyle  | 图片样式                        | CSSProperties       | -                               |     |\n| image       | 设置显示图片，为 string 时表示自定义图片地址。 | string \\| ReactNode | `Empty.PRESENTED_IMAGE_DEFAULT` |     |"
    ],
    "Dropdown.Button": [
      "| 参数              | 说明                                                                                | 类型                                        | 默认值          | 版本  |\n| --------------- | --------------------------------------------------------------------------------- | ----------------------------------------- | ------------ | --- |\n| disabled        | 菜单是否禁用                                                                            | boolean                                   | -            |     |\n| icon            | 右侧的 icon                                                                          | ReactNode                                 | -            |     |\n| overlay         | 菜单                                                                                | [Menu](/components/menu/)                 | -            |     |\n| placement       | 菜单弹出位置：`bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight` | String                                    | `bottomLeft` |     |\n| size            | 按钮大小，和 [Button](/components/button/) 一致                                           | string                                    | `default`    |     |\n| trigger         | 触发下拉的行为                                                                           | Array&lt;`click`\\|`hover`\\|`contextMenu`> | `['hover']`  |     |\n| type            | 按钮类型，和 [Button](/components/button/) 一致                                           | string                                    | `default`    |     |\n| visible         | 菜单是否显示                                                                            | boolean                                   | -            |     |\n| onClick         | 点击左侧按钮的回调，和 [Button](/components/button/) 一致                                      | Function                                  | -            |     |\n| onVisibleChange | 菜单显示状态改变时调用，参数为 visible                                                           | Function                                  | -            |     |\n| buttonsRender   | 自定义左右两个按钮                                                                         | `([buttons: ReactNode[]]) => ReactNode`   | -            |     |"
    ],
    "Dropdown": [
      "| 参数                | 说明                                                                                                           | 类型                                        | 默认值                   | 版本  |\n| ----------------- | ------------------------------------------------------------------------------------------------------------ | ----------------------------------------- | --------------------- | --- |\n| disabled          | 菜单是否禁用                                                                                                       | boolean                                   | -                     |     |\n| getPopupContainer | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codepen.io/afc163/pen/zEjNOy?editors=0010) | Function(triggerNode)                     | `() => document.body` |     |\n| overlay           | 菜单                                                                                                           | [Menu](/components/menu) \\| () => Menu    | -                     |     |\n| overlayClassName  | 下拉根元素的类名称                                                                                                    | string                                    | -                     |     |\n| overlayStyle      | 下拉根元素的样式                                                                                                     | object                                    | -                     |     |\n| placement         | 菜单弹出位置：`bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight`                            | String                                    | `bottomLeft`          |     |\n| trigger           | 触发下拉的行为, 移动端不支持 hover                                                                                        | Array&lt;`click`\\|`hover`\\|`contextMenu`> | `['hover']`           |     |\n| visible           | 菜单是否显示                                                                                                       | boolean                                   | -                     |     |\n| onVisibleChange   | 菜单显示状态改变时调用，参数为 visible                                                                                      | Function(visible)                         | -                     |     |"
    ],
    "Col": [
      "| 成员     | 说明                                | 类型               | 默认值 | 版本  |\n| ------ | --------------------------------- | ---------------- | --- | --- |\n| flex   | flex 布局属性                         | string \\| number | -   |     |\n| offset | 栅格左侧的间隔格数，间隔内不可以有栅格               | number           | 0   |     |\n| order  | 栅格顺序                              | number           | 0   |     |\n| pull   | 栅格向左移动格数                          | number           | 0   |     |\n| push   | 栅格向右移动格数                          | number           | 0   |     |\n| span   | 栅格占位格数，为 0 时相当于 `display: none`   | number           | -   |     |\n| xs     | `<576px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number\\|object   | -   |     |\n| sm     | `≥576px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number\\|object   | -   |     |\n| md     | `≥768px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number\\|object   | -   |     |\n| lg     | `≥992px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number\\|object   | -   |     |\n| xl     | `≥1200px` 响应式栅格，可为栅格数或一个包含其他属性的对象 | number\\|object   | -   |     |\n| xxl    | `≥1600px` 响应式栅格，可为栅格数或一个包含其他属性的对象 | number\\|object   | -   |     |"
    ],
    "Row": [
      "| 成员      | 说明                                                                                     | 类型                                                                | 默认值     | 版本  |\n| ------- | -------------------------------------------------------------------------------------- | ----------------------------------------------------------------- | ------- | --- |\n| align   | 垂直对齐方式                                                                                 | `top` \\| `middle` \\| `bottom`                                     | `top`   |     |\n| gutter  | 栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 `{ xs: 8, sm: 16, md: 24}`。或者使用数组形式同时设置 `[水平间距, 垂直间距]`。 | number/object/array                                               | 0       |     |\n| justify | 水平排列方式                                                                                 | `start` \\| `end` \\| `center` \\| `space-around` \\| `space-between` | `start` |     |"
    ],
    "Input": [
      "| 参数           | 说明                                                                                                                                                          | 类型                             | 默认值    |\n| ------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ------ |\n| addonAfter   | 带标签的 input，设置后置标签                                                                                                                                           | string\\|ReactNode              |        |\n| addonBefore  | 带标签的 input，设置前置标签                                                                                                                                           | string\\|ReactNode              |        |\n| defaultValue | 输入框默认内容                                                                                                                                                     | string                         |        |\n| disabled     | 是否禁用状态，默认为 false                                                                                                                                            | boolean                        | false  |\n| id           | 输入框的 id                                                                                                                                                     | string                         |        |\n| maxLength    | 最大长度                                                                                                                                                        | number                         |        |\n| prefix       | 带有前缀图标的 input                                                                                                                                               | string\\|ReactNode              |        |\n| size         | 控件大小。注：标准表单内的输入框大小限制为 `large`。                                                                                                                              | `large` \\| `middle` \\| `small` | 无      |\n| suffix       | 带有后缀图标的 input                                                                                                                                               | string\\|ReactNode              |        |\n| type         | 声明 input 类型，同原生 input 标签的 type 属性，见：[MDN](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input#属性)(请直接使用 `Input.TextArea` 代替 `type=\"textarea\"`)。 | string                         | `text` |\n| value        | 输入框内容                                                                                                                                                       | string                         |        |\n| onChange     | 输入框内容变化时的回调                                                                                                                                                 | function(e)                    |        |\n| onPressEnter | 按下回车的回调                                                                                                                                                     | function(e)                    |        |\n| allowClear   | 可以点击清除图标删除内容                                                                                                                                                | boolean                        |        |"
    ],
    "Input.TextArea": [
      "| 参数           | 说明                  | 类型                                        | 默认值             |       |\n| ------------ | ------------------- | ----------------------------------------- | --------------- | ----- |\n| autoSize     | 自适应内容高度，可设置为 \\`true | false` 或对象：`{ minRows: 2, maxRows: 6 }\\`。 | boolean\\|object | false |\n| defaultValue | 输入框默认内容             | string                                    |                 |       |\n| value        | 输入框内容               | string                                    |                 |       |\n| onPressEnter | 按下回车的回调             | function(e)                               |                 |       |\n| allowClear   | 可以点击清除图标删除内容        | boolean                                   |                 |       |\n| onResize     | resize 回调           | function({ width, height })               |                 |       |"
    ],
    "Icon": [
      "| 参数           | 说明                              | 类型              | 默认值   | 版本  |\n| ------------ | ------------------------------- | --------------- | ----- | --- |\n| className    | 设置图标的样式名                        | `string`        | -     |     |\n| style        | 设置图标的样式，例如 `fontSize` 和 `color` | CSSProperties   | -     |     |\n| spin         | 是否有旋转动画                         | boolean         | false |     |\n| rotate       | 图标旋转角度（IE9 无效）                  | number          | -     |     |\n| twoToneColor | 仅适用双色图标。设置双色图标的主要颜色             | string (十六进制颜色) | -     |     |"
    ],
    "Input.Search": [
      "| 参数          | 说明                                     | 类型                     | 默认值   |\n| ----------- | -------------------------------------- | ---------------------- | ----- |\n| enterButton | 是否有确认按钮，可设为按钮文字。该属性会与 `addonAfter` 冲突。 | boolean\\|ReactNode     | false |\n| onSearch    | 点击搜索或按下回车键时的回调                         | function(value, event) |       |\n| loading     | 搜索 loading                             | boolean                |       |"
    ],
    "Input.Group": [
      "| 参数      | 说明                                                          | 类型      | 默认值       |\n| ------- | ----------------------------------------------------------- | ------- | --------- |\n| compact | 是否用紧凑模式                                                     | boolean | false     |\n| size    | `Input.Group` 中所有的 `Input` 的大小，可选 `large` `default` `small` | string  | `default` |"
    ],
    "List": [
      "| 参数         | 说明                                              | 类型                                                                                                                         | 默认值               | 版本  |\n| ---------- | ----------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | ----------------- | --- |\n| bordered   | 是否展示边框                                          | boolean                                                                                                                    | false             |     |\n| footer     | 列表底部                                            | string\\|ReactNode                                                                                                          | -                 |     |\n| grid       | 列表栅格配置                                          | [object](#List-grid-props)                                                                                                 | -                 |     |\n| header     | 列表头部                                            | string\\|ReactNode                                                                                                          | -                 |     |\n| itemLayout | 设置 `List.Item` 布局, 设置成 `vertical` 则竖直样式显示, 默认横排 | string                                                                                                                     | -                 |     |\n| loading    | 当卡片内容还在加载中时，可以用 `loading` 展示一个占位                | boolean\\|[object](https://ant.design/components/spin-cn/#API) ([更多](https://github.com/ant-design/ant-design/issues/8659)) | false             |     |\n| loadMore   | 加载更多                                            | string\\|ReactNode                                                                                                          | -                 |     |\n| locale     | 默认文案设置，目前包括空数据文案                                | object                                                                                                                     | emptyText: '暂无数据' |     |\n| pagination | 对应的 `pagination` 配置, 设置 `false` 不显示             | boolean\\|object                                                                                                            | false             |     |\n| size       | list 的尺寸                                        | `default` \\| `large` \\| `small`                                                                                            | `default`         |     |\n| split      | 是否展示分割线                                         | boolean                                                                                                                    | true              |     |\n| dataSource | 列表数据源                                           | any\\[]                                                                                                                     | -                 |     |\n| renderItem | 当使用 dataSource 时，可以用 `renderItem` 自定义渲染列表项      | `item => ReactNode`                                                                                                        | -                 |     |"
    ],
    "Input.Password": [
      "| 参数               | 说明       | 类型      | 默认值  |\n| ---------------- | -------- | ------- | ---- |\n| visibilityToggle | 是否显示切换按钮 | boolean | true |"
    ],
    "Layout": [
      "| 参数        | 说明                                   | 类型      | 默认值 |\n| --------- | ------------------------------------ | ------- | --- |\n| className | 容器 className                         | string  | -   |\n| hasSider  | 表示子元素里有 Sider，一般不用指定。可用于服务端渲染时避免样式闪动 | boolean | -   |\n| style     | 指定样式                                 | object  | -   |"
    ],
    "InputNumber": [
      "| 成员               | 说明                                       | 类型                                        | 默认值       |\n| ---------------- | ---------------------------------------- | ----------------------------------------- | --------- |\n| autoFocus        | 自动获取焦点                                   | boolean                                   | false     |\n| defaultValue     | 初始值                                      | number                                    |           |\n| disabled         | 禁用                                       | boolean                                   | false     |\n| formatter        | 指定输入框展示值的格式                              | function(value: number \\| string): string |           |\n| max              | 最大值                                      | number                                    | Infinity  |\n| min              | 最小值                                      | number                                    | -Infinity |\n| parser           | 指定从 formatter 里转换回数字的方式，和 formatter 搭配使用 | function( string): number                 |           |\n| precision        | 数值精度                                     | number                                    |           |\n| decimalSeparator | 小数点                                      | string                                    |           |\n| size             | 输入框大小                                    | `large` \\| `middle` \\| `small`            | 无         |\n| step             | 每次改变步数，可以为小数                             | number\\|string                            | 1         |\n| value            | 当前值                                      | number                                    |           |\n| onChange         | 变化回调                                     | Function(value: number \\| string)         |           |\n| onPressEnter     | 按下回车的回调                                  | function(e)                               |           |"
    ],
    "Layout.Sider": [
      "| 参数                    | 说明                                          | 类型                                            | 默认值    |\n| --------------------- | ------------------------------------------- | --------------------------------------------- | ------ |\n| breakpoint            | 触发响应式布局的[断点](/components/grid-cn/#Col)      | `xs` \\| `sm` \\| `md` \\| `lg` \\| `xl` \\| `xxl` | -      |\n| className             | 容器 className                                | string                                        | -      |\n| collapsed             | 当前收起状态                                      | boolean                                       | -      |\n| collapsedWidth        | 收缩宽度，设置为 0 会出现特殊 trigger                    | number                                        | 80     |\n| collapsible           | 是否可收起                                       | boolean                                       | false  |\n| defaultCollapsed      | 是否默认收起                                      | boolean                                       | false  |\n| reverseArrow          | 翻转折叠提示箭头的方向，当 Sider 在右边时可以使用                | boolean                                       | false  |\n| style                 | 指定样式                                        | object                                        | -      |\n| theme                 | 主题颜色                                        | `light` \\| `dark`                             | `dark` |\n| trigger               | 自定义 trigger，设置为 null 时隐藏 trigger            | string\\|ReactNode                             | -      |\n| width                 | 宽度                                          | number\\|string                                | 200    |\n| onCollapse            | 展开-收起时的回调函数，有点击 trigger 以及响应式反馈两种方式可以触发     | (collapsed, type) => {}                       | -      |\n| onBreakpoint          | 触发响应式布局[断点](/components/grid#API)时的回调       | (broken) => {}                                | -      |\n| zeroWidthTriggerStyle | 指定当 `collapsedWidth` 为 0 时出现的特殊 trigger 的样式 | object                                        | -      |"
    ],
    "List.Item.Meta": [
      "| 参数          | 说明        | 类型                | 默认值 | 版本  |\n| ----------- | --------- | ----------------- | --- | --- |\n| avatar      | 列表元素的图标   | ReactNode         | -   |     |\n| description | 列表元素的描述内容 | string\\|ReactNode | -   |     |\n| title       | 列表元素的标题   | string\\|ReactNode | -   |     |"
    ],
    "List.Item": [
      "| 参数      | 说明                                                                         | 类型                  | 默认值 | 版本  |\n| ------- | -------------------------------------------------------------------------- | ------------------- | --- | --- |\n| actions | 列表操作组，根据 `itemLayout` 的不同, 位置在卡片底部或者最右侧                                    | Array&lt;ReactNode> | -   |     |\n| extra   | 额外内容, 通常用在 `itemLayout` 为 `vertical` 的情况下, 展示右侧内容; `horizontal` 展示在列表元素最右侧 | string\\|ReactNode   | -   |     |"
    ],
    "Menu": [
      "| 参数                  | 说明                       | 类型                                                       | 默认值        | 版本  |\n| ------------------- | ------------------------ | -------------------------------------------------------- | ---------- | --- |\n| defaultOpenKeys     | 初始展开的 SubMenu 菜单项 key 数组 | string\\[]                                                |            |     |\n| defaultSelectedKeys | 初始选中的菜单项 key 数组          | string\\[]                                                |            |     |\n| forceSubMenuRender  | 在子菜单展示之前就渲染进 DOM         | boolean                                                  | false      |     |\n| inlineCollapsed     | inline 时菜单是否收起状态         | boolean                                                  | -          |     |\n| inlineIndent        | inline 模式的菜单缩进宽度         | number                                                   | 24         |     |\n| mode                | 菜单类型，现在支持垂直、水平、和内嵌模式三种   | `vertical` \\| `horizontal` \\| `inline`                   | `vertical` |     |\n| multiple            | 是否允许多选                   | boolean                                                  | false      |     |\n| openKeys            | 当前展开的 SubMenu 菜单项 key 数组 | string\\[]                                                |            |     |\n| selectable          | 是否允许选中                   | boolean                                                  | true       |     |\n| selectedKeys        | 当前选中的菜单项 key 数组          | string\\[]                                                |            |     |\n| style               | 根节点样式                    | object                                                   |            |     |\n| subMenuCloseDelay   | 用户鼠标离开子菜单后关闭延时，单位：秒      | number                                                   | 0.1        |     |\n| subMenuOpenDelay    | 用户鼠标进入子菜单后开启延时，单位：秒      | number                                                   | 0          |     |\n| theme               | 主题颜色                     | `light` \\| `dark`                                        | `light`    |     |\n| onClick             | 点击 MenuItem 调用此函数        | function({ item, key, keyPath, domEvent })               | -          |     |\n| onDeselect          | 取消选中时调用，仅在 multiple 生效   | function({ item, key, keyPath, selectedKeys, domEvent }) | -          |     |\n| onOpenChange        | SubMenu 展开/关闭的回调         | function(openKeys: string\\[])                            | noop       |     |\n| onSelect            | 被选中时调用                   | function({ item, key, keyPath, selectedKeys, domEvent }) | 无          |     |\n| overflowedIndicator | 自定义 Menu 折叠时的图标          | ReactNode                                                | -          |     |"
    ],
    "Menu.Item": [
      "| 参数       | 说明           | 类型      | 默认值   | 版本  |\n| -------- | ------------ | ------- | ----- | --- |\n| disabled | 是否禁用         | boolean | false |     |\n| key      | item 的唯一标志   | string  |       |     |\n| title    | 设置收缩时展示的悬浮标题 | string  |       |     |"
    ],
    "Menu.SubMenu": [
      "| 参数             | 说明      | 类型                          | 默认值   | 版本  |\n| -------------- | ------- | --------------------------- | ----- | --- |\n| popupClassName | 子菜单样式   | string                      |       |     |\n| children       | 子菜单的菜单项 | Array&lt;MenuItem\\|SubMenu> |       |     |\n| disabled       | 是否禁用    | boolean                     | false |     |\n| key            | 唯一标志    | string                      |       |     |\n| title          | 子菜单项值   | string\\|ReactNode           |       |     |\n| onTitleClick   | 点击子菜单标题 | function({ key, domEvent }) |       |     |"
    ],
    "Menu.ItemGroup": [
      "| 参数       | 说明     | 类型                | 默认值 | 版本  |\n| -------- | ------ | ----------------- | --- | --- |\n| children | 分组的菜单项 | MenuItem\\[]       |     |     |\n| title    | 分组标题   | string\\|ReactNode |     |     |"
    ],
    "PageHeader": [
      "| 参数         | 说明                                     | 类型                                                                                              | 默认值                  | 版本  |\n| ---------- | -------------------------------------- | ----------------------------------------------------------------------------------------------- | -------------------- | --- |\n| title      | 自定义标题文字                                | ReactNode                                                                                       | -                    |     |\n| subTitle   | 自定义的二级标题文字                             | ReactNode                                                                                       | -                    |     |\n| ghost      | pageHeader 的类型，将会改变背景颜色                | boolean                                                                                         | true                 |     |\n| avatar     | 标题栏旁的头像                                | [avatar props](/components/avatar/)                                                             | -                    |     |\n| backIcon   | 自定义 back icon ，如果为 false 不渲染 back icon | ReactNode \\| boolean                                                                            | `<ArrowLeft />`      |     |\n| tags       | title 旁的 tag 列表                        | [Tag](https://ant.design/components/tag-cn/)\\[] \\| [Tag](https://ant.design/components/tag-cn/) | -                    |     |\n| extra      | 操作区，位于 title 行的行尾                      | ReactNode                                                                                       | -                    |     |\n| breadcrumb | 面包屑的配置                                 | [breadcrumb](https://ant.design/components/breadcrumb-cn/)                                      | -                    |     |\n| footer     | PageHeader 的页脚，一般用于渲染 TabBar           | ReactNode                                                                                       | -                    |     |\n| onBack     | 返回按钮的点击事件                              | `()=>void`                                                                                      | `()=>history.back()` |     |"
    ],
    "Modal": [
      "| 参数                | 说明                                     | 类型                                                       | 默认值           |\n| ----------------- | -------------------------------------- | -------------------------------------------------------- | ------------- |\n| afterClose        | Modal 完全关闭后的回调                         | function                                                 | -             |\n| bodyStyle         | Modal body 样式                          | object                                                   | {}            |\n| cancelText        | 取消按钮文字                                 | string\\|ReactNode                                        | 取消            |\n| centered          | 垂直居中展示 Modal                           | Boolean                                                  | `false`       |\n| closable          | 是否显示右上角的关闭按钮                           | boolean                                                  | true          |\n| closeIcon         | 自定义关闭图标                                | ReactNode                                                | -             |\n| confirmLoading    | 确定按钮 loading                           | boolean                                                  | -             |\n| destroyOnClose    | 关闭时销毁 Modal 里的子元素                      | boolean                                                  | false         |\n| footer            | 底部内容，当不需要默认底部按钮时，可以设为 `footer={null}`  | string\\|ReactNode                                        | 确定取消按钮        |\n| forceRender       | 强制渲染 Modal                             | boolean                                                  | false         |\n| getContainer      | 指定 Modal 挂载的 HTML 节点, false 为挂载在当前 dom | HTMLElement \\| `() => HTMLElement` \\| Selectors \\| false | document.body |\n| keyboard          | 是否支持键盘 esc 关闭                          | boolean                                                  | true          |\n| mask              | 是否展示遮罩                                 | Boolean                                                  | true          |\n| maskClosable      | 点击蒙层是否允许关闭                             | boolean                                                  | true          |\n| maskStyle         | 遮罩样式                                   | object                                                   | {}            |\n| okText            | 确认按钮文字                                 | string\\|ReactNode                                        | 确定            |\n| okType            | 确认按钮类型                                 | string                                                   | primary       |\n| okButtonProps     | ok 按钮 props                            | [ButtonProps](/components/button)                        | -             |\n| cancelButtonProps | cancel 按钮 props                        | [ButtonProps](/components/button)                        | -             |\n| style             | 可用于设置浮层的样式，调整浮层位置等                     | object                                                   | -             |\n| title             | 标题                                     | string\\|ReactNode                                        | -             |\n| visible           | 对话框是否可见                                | boolean                                                  | -             |\n| width             | 宽度                                     | string\\|number                                           | 520           |\n| wrapClassName     | 对话框外层容器的类名                             | string                                                   | -             |\n| zIndex            | 设置 Modal 的 `z-index`                   | Number                                                   | 1000          |\n| onCancel          | 点击遮罩层或右上角叉或取消按钮的回调                     | function(e)                                              | -             |\n| onOk              | 点击确定回调                                 | function(e)                                              | -             |"
    ],
    "Mentions": [
      "| 参数                | 说明               | 类型                                                       | 默认值         |\n| ----------------- | ---------------- | -------------------------------------------------------- | ----------- |\n| autoFocus         | 自动获得焦点           | boolean                                                  | `false`     |\n| defaultValue      | 默认值              | string                                                   |             |\n| filterOption      | 自定义过滤逻辑          | false \\| (input: string, option: OptionProps) => boolean |             |\n| notFoundContent   | 当下拉列表为空时显示的内容    | ReactNode                                                | 'Not Found' |\n| placement         | 弹出层展示位置          | `top` \\| `bottom`                                        | `bottom`    |\n| prefix            | 设置触发关键字          | string \\| string\\[]                                      | '@'         |\n| split             | 设置选中项前后分隔符       | string                                                   | ' '         |\n| validateSearch    | 自定义触发验证逻辑        | (text: string, props: MentionsProps) => void             |             |\n| value             | 设置值              | string                                                   |             |\n| onChange          | 值改变时触发           | (text: string) => void                                   |             |\n| onSelect          | 选择选项时触发          | (option: OptionProps, prefix: string) => void            |             |\n| onSearch          | 搜索时触发            | (text: string, prefix: string) => void                   |             |\n| onFocus           | 获得焦点时触发          | () => void                                               |             |\n| onBlur            | 失去焦点时触发          | () => void                                               |             |\n| getPopupContainer | 指定建议框挂载的 HTML 节点 | () => HTMLElement                                        |             |"
    ],
    "Pagination": [
      "| 参数               | 说明                                                | 类型                                                                           | 默认值                        | 版本  |\n| ---------------- | ------------------------------------------------- | ---------------------------------------------------------------------------- | -------------------------- | --- |\n| current          | 当前页数                                              | number                                                                       | -                          |     |\n| defaultCurrent   | 默认的当前页数                                           | number                                                                       | 1                          |     |\n| defaultPageSize  | 默认的每页条数                                           | number                                                                       | 10                         |     |\n| disabled         | 禁用分页                                              | boolean                                                                      | -                          |     |\n| hideOnSinglePage | 只有一页时是否隐藏分页器                                      | boolean                                                                      | false                      |     |\n| itemRender       | 用于自定义页码的结构，可用于优化 SEO                              | (page, type: 'page' \\| 'prev' \\| 'next', originalElement) => React.ReactNode | -                          |     |\n| pageSize         | 每页条数                                              | number                                                                       | -                          |     |\n| pageSizeOptions  | 指定每页可以显示多少条                                       | string\\[]                                                                    | \\['10', '20', '50', '100'] |     |\n| showLessItems    | 是否显示较少页面内容                                        | boolean                                                                      | false                      |     |\n| showQuickJumper  | 是否可以快速跳转至某页                                       | boolean \\| `{ goButton: ReactNode }`                                         | false                      |     |\n| showSizeChanger  | 是否展示 `pageSize` 切换器，当 `total` 大于 `50` 时默认为 `true` | boolean                                                                      | -                          |     |\n| showTitle        | 是否显示原生 tooltip 页码提示                               | boolean                                                                      | true                       |     |\n| showTotal        | 用于显示数据总量和当前数据顺序                                   | Function(total, range)                                                       | -                          |     |\n| simple           | 当添加该属性时，显示为简单分页                                   | boolean                                                                      | -                          |     |\n| size             | 当为「small」时，是小尺寸分页                                 | 'default' \\| 'small'                                                         | \"\"                         |     |\n| responsive       | 当 size 未指定时，根据屏幕宽度自动调整尺寸                          | boolean                                                                      | -                          |     |\n| total            | 数据总数                                              | number                                                                       | 0                          |     |\n| onChange         | 页码改变的回调，参数是改变后的页码及每页条数                            | Function(page, pageSize)                                                     | noop                       |     |\n| onShowSizeChange | pageSize 变化的回调                                    | Function(current, size)                                                      | noop                       |     |"
    ],
    "Popconfirm": [
      "| 参数         | 说明                         | 类型                                 | 默认值                     |\n| ---------- | -------------------------- | ---------------------------------- | ----------------------- |\n| cancelText | 取消按钮文字                     | string                             | 取消                      |\n| okText     | 确认按钮文字                     | string                             | 确定                      |\n| okType     | 确认按钮类型                     | string                             | primary                 |\n| title      | 确认框的描述                     | string\\|ReactNode\\|() => ReactNode | -                       |\n| onCancel   | 点击取消的回调                    | function(e)                        | -                       |\n| onConfirm  | 点击确认的回调                    | function(e)                        | -                       |\n| icon       | 自定义弹出气泡 Icon 图标            | ReactNode                          | `<ExclamationCircle />` |\n| disabled   | 点击 Popconfirm 子元素是否弹出气泡确认框 | boolean                            | false                   |"
    ],
    "Radio": [
      "| 参数             | 说明                   | 类型      | 默认值   |\n| -------------- | -------------------- | ------- | ----- |\n| autoFocus      | 自动获取焦点               | boolean | false |\n| checked        | 指定当前是否选中             | boolean | false |\n| defaultChecked | 初始是否选中               | boolean | false |\n| disabled       | 禁用 Radio             | boolean | false |\n| value          | 根据 value 进行比较，判断是否选中 | any     |       |"
    ],
    "Progress": [
      "| 属性             | 说明                                                     | 类型                                | 默认值                        |\n| -------------- | ------------------------------------------------------ | --------------------------------- | -------------------------- |\n| type           | 类型，可选 `line` `circle` `dashboard`                      | string                            | `line`                     |\n| format         | 内容的模板函数                                                | function(percent, successPercent) | `percent => percent + '%'` |\n| percent        | 百分比                                                    | number                            | 0                          |\n| showInfo       | 是否显示进度数值或状态图标                                          | boolean                           | true                       |\n| status         | 状态，可选：`success` `exception` `normal` `active`(仅限 line) | string                            | -                          |\n| strokeLinecap  | -                                                      | `round` \\| `square`               | `round`                    |\n| strokeColor    | 进度条的色彩                                                 | string                            | -                          |\n| successPercent | 已完成的分段百分比                                              | number                            | 0                          |\n| trailColor     | 未完成的分段的颜色                                              | string                            | -                          |"
    ],
    "Popover": [
      "| 参数      | 说明   | 类型                                 | 默认值 | 版本  |\n| ------- | ---- | ---------------------------------- | --- | --- |\n| content | 卡片内容 | string\\|ReactNode\\|() => ReactNode | 无   |     |\n| title   | 卡片标题 | string\\|ReactNode\\|() => ReactNode | 无   |     |"
    ],
    "Radio.Group": [
      "| 参数           | 说明                                               | 类型                                                                        | 默认值       |\n| ------------ | ------------------------------------------------ | ------------------------------------------------------------------------- | --------- |\n| defaultValue | 默认选中的值                                           | any                                                                       |           |\n| disabled     | 禁选所有子单选器                                         | boolean                                                                   | false     |\n| name         | RadioGroup 下所有 `input[type=\"radio\"]` 的 `name` 属性 | string                                                                    |           |\n| options      | 以配置形式设置子元素                                       | string\\[] \\| Array&lt;{ label: string value: string disabled?: boolean }> |           |\n| size         | 大小，只对按钮样式生效                                      | `large` \\| `middle` \\| `small`                                            | 无         |\n| value        | 用于设置当前选中的值                                       | any                                                                       |           |\n| onChange     | 选项变化时的回调函数                                       | Function(e:Event)                                                         |           |\n| buttonStyle  | RadioButton 的风格样式，目前有描边和填色两种风格                   | `outline` \\| `solid`                                                      | `outline` |"
    ],
    "Rate": [
      "| 属性            | 说明           | 类型                      | 默认值                    |\n| ------------- | ------------ | ----------------------- | ---------------------- |\n| allowClear    | 是否允许再次点击后清除  | boolean                 | true                   |\n| allowHalf     | 是否允许半选       | boolean                 | false                  |\n| autoFocus     | 自动获取焦点       | boolean                 | false                  |\n| character     | 自定义字符        | ReactNode               | `<Icon type=\"star\" />` |\n| className     | 自定义样式类名      | string                  |                        |\n| count         | star 总数      | number                  | 5                      |\n| defaultValue  | 默认值          | number                  | 0                      |\n| disabled      | 只读，无法进行交互    | boolean                 | false                  |\n| style         | 自定义样式对象      | object                  |                        |\n| tooltips      | 自定义每项的提示信息   | string\\[]               |                        |\n| value         | 当前数，受控值      | number                  |                        |\n| onBlur        | 失去焦点时的回调     | Function()              |                        |\n| onChange      | 选择时的回调       | Function(value: number) |                        |\n| onFocus       | 获取焦点时的回调     | Function()              |                        |\n| onHoverChange | 鼠标经过时数值变化的回调 | Function(value: number) |                        |\n| onKeyDown     | 按键回调         | Function(event)         |                        |"
    ],
    "Result": [
      "| 参数       | 说明            | 类型                                                                     | 默认值    |\n| -------- | ------------- | ---------------------------------------------------------------------- | ------ |\n| title    | title 文字      | ReactNode                                                              | -      |\n| subTitle | subTitle 文字   | ReactNode                                                              | -      |\n| status   | 结果的状态,决定图标和颜色 | `success` \\| `error` \\| `info` \\| `warning` \\| `404` \\| `403` \\| `500` | `info` |\n| icon     | 自定义 icon      | ReactNode                                                              | -      |\n| extra    | 操作区           | ReactNode                                                              | -      |"
    ],
    "Select.Option": [
      "| 参数        | 说明                          | 类型             | 默认值   | 版本  |\n| --------- | --------------------------- | -------------- | ----- | --- |\n| disabled  | 是否禁用                        | boolean        | false |     |\n| title     | 选中该 Option 后，Select 的 title | string         | -     |     |\n| value     | 默认根据此属性值进行筛选                | string\\|number | -     |     |\n| className | Option 器类名                  | string         | -     |     |"
    ],
    "Select.OptGroup": [
      "| 参数    | 说明  | 类型                    | 默认值 | 版本  |\n| ----- | --- | --------------------- | --- | --- |\n| key   |     | string                | -   |     |\n| label | 组名  | string\\|React.Element | 无   |     |"
    ],
    "Select": [
      "| 参数                       | 说明                                                                                                           | 类型                                                                          | 默认值                                | 版本    |\n| ------------------------ | ------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------- | ---------------------------------- | ----- |\n| allowClear               | 支持清除                                                                                                         | boolean                                                                     | false                              |       |\n| autoClearSearchValue     | 是否在选中项后清空搜索框，只在 `mode` 为 `multiple` 或 `tags` 时有效。                                                            | boolean                                                                     | true                               |       |\n| autoFocus                | 默认获取焦点                                                                                                       | boolean                                                                     | false                              |       |\n| defaultActiveFirstOption | 是否默认高亮第一个选项。                                                                                                 | boolean                                                                     | true                               |       |\n| defaultValue             | 指定默认选中的条目                                                                                                    | string\\|string\\[]<br />number\\|number\\[]<br />LabeledValue\\|LabeledValue\\[] | -                                  |       |\n| disabled                 | 是否禁用                                                                                                         | boolean                                                                     | false                              |       |\n| dropdownClassName        | 下拉菜单的 className 属性                                                                                           | string                                                                      | -                                  |       |\n| dropdownMatchSelectWidth | 下拉菜单和选择器同宽。默认将设置 `min-width`。`false` 时会关闭虚拟滚动                                                                | boolean \\| number                                                           | true                               |       |\n| dropdownRender           | 自定义下拉框内容                                                                                                     | (menuNode: ReactNode, props) => ReactNode                                   | -                                  |       |\n| dropdownStyle            | 下拉菜单的 style 属性                                                                                               | object                                                                      | -                                  |       |\n| filterOption             | 是否根据输入项进行筛选。当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。             | boolean or function(inputValue, option)                                     | true                               |       |\n| firstActiveValue         | 默认高亮的选项                                                                                                      | string\\|string\\[]                                                           | -                                  |       |\n| getPopupContainer        | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codesandbox.io/s/4j168r7jw0)               | Function(triggerNode)                                                       | () => document.body                |       |\n| labelInValue             | 是否把每个选项的 label 包装到 value 中，会把 Select 的 value 类型从 `string` 变为 `{key: string, label: ReactNode}` 的格式           | boolean                                                                     | false                              |       |\n| maxTagCount              | 最多显示多少个 tag                                                                                                  | number                                                                      | -                                  |       |\n| maxTagTextLength         | 最大显示的 tag 文本长度                                                                                               | number                                                                      | -                                  |       |\n| maxTagPlaceholder        | 隐藏 tag 时显示的内容                                                                                                | ReactNode/function(omittedValues)                                           | -                                  |       |\n| tagRender                | 自定义 tag 内容 render                                                                                            | (props) => ReactNode                                                        | -                                  |       |\n| mode                     | 设置 Select 的模式为多选或标签                                                                                          | `multiple` \\| `tags`                                                        | -                                  |       |\n| notFoundContent          | 当下拉列表为空时显示的内容                                                                                                | string                                                                      | 'Not Found'                        |       |\n| optionFilterProp         | 搜索时过滤对应的 option 属性，如设置为 children 表示对内嵌内容进行搜索。[示例](https://codesandbox.io/s/antd-reproduction-template-tk678) | string                                                                      | value                              |       |\n| optionLabelProp          | 回填到选择框的 Option 的属性值，默认是 Option 的子元素。比如在子元素需要高亮效果时，此值可以设为 `value`。                                            | string                                                                      | `children` （combobox 模式下为 `value`） |       |\n| placeholder              | 选择框默认文字                                                                                                      | string                                                                      | -                                  |       |\n| showArrow                | 是否显示下拉小箭头                                                                                                    | boolean                                                                     | true                               |       |\n| showSearch               | 使单选模式可搜索                                                                                                     | boolean                                                                     | false                              |       |\n| size                     | 选择框大小                                                                                                        | `large` \\| `middle` \\| `small`                                              | 无                                  |       |\n| suffixIcon               | 自定义的选择框后缀图标                                                                                                  | ReactNode                                                                   | -                                  |       |\n| removeIcon               | 自定义的多选框清除图标                                                                                                  | ReactNode                                                                   | -                                  |       |\n| clearIcon                | 自定义的多选框清空图标                                                                                                  | ReactNode                                                                   | -                                  |       |\n| menuItemSelectedIcon     | 自定义多选时当前选中的条目图标                                                                                              | ReactNode                                                                   | -                                  |       |\n| tokenSeparators          | 在 tags 和 multiple 模式下自动分词的分隔符                                                                                | string\\[]                                                                   |                                    |       |\n| value                    | 指定当前选中的条目                                                                                                    | string\\|string\\[]<br />number\\|number\\[]<br />LabeledValue\\|LabeledValue\\[] | -                                  |       |\n| virtual                  | 设置 `false` 时关闭虚拟滚动                                                                                           | boolean                                                                     | true                               | 4.1.0 |\n| onBlur                   | 失去焦点时回调                                                                                                      | function                                                                    | -                                  |       |\n| onChange                 | 选中 option，或 input 的 value 变化（combobox 模式下）时，调用此函数                                                            | function(value, option:Option/Array&lt;Option>)                             | -                                  |       |\n| onDeselect               | 取消选中时调用，参数为选中项的 value (或 key) 值，仅在 multiple 或 tags 模式下生效                                                     | function(string\\|number\\|LabeledValue)                                      | -                                  |       |\n| onFocus                  | 获得焦点时回调                                                                                                      | function                                                                    | -                                  |       |\n| onInputKeyDown           | 按键按下时回调                                                                                                      | function                                                                    | -                                  |       |\n| onMouseEnter             | 鼠标移入时回调                                                                                                      | function                                                                    | -                                  |       |\n| onMouseLeave             | 鼠标移出时回调                                                                                                      | function                                                                    | -                                  |       |\n| onPopupScroll            | 下拉列表滚动时的回调                                                                                                   | function                                                                    | -                                  |       |\n| onSearch                 | 文本框值变化时回调                                                                                                    | function(value: string)                                                     |                                    |       |\n| onSelect                 | 被选中时调用，参数为选中项的 value (或 key) 值                                                                               | function(string\\|number\\|LabeledValue, option:Option)                       | -                                  |       |\n| defaultOpen              | 是否默认展开下拉菜单                                                                                                   | boolean                                                                     | -                                  |       |\n| open                     | 是否展开下拉菜单                                                                                                     | boolean                                                                     | -                                  |       |\n| onDropdownVisibleChange  | 展开下拉菜单的回调                                                                                                    | function(open)                                                              | -                                  |       |\n| loading                  | 加载中状态                                                                                                        | Boolean                                                                     | false                              |       |\n| bordered                 | 是否有边框                                                                                                        | Boolean                                                                     | true                               |       |"
    ],
    "Skeleton": [
      "| 属性        | 说明                          | 类型                                                           | 默认值   |\n| --------- | --------------------------- | ------------------------------------------------------------ | ----- |\n| active    | 是否展示动画效果                    | boolean                                                      | false |\n| avatar    | 是否显示头像占位图                   | boolean \\| [SkeletonAvatarProps](#SkeletonAvatarProps)       | false |\n| loading   | 为 `true` 时，显示占位图。反之则直接展示子组件 | boolean                                                      | -     |\n| paragraph | 是否显示段落占位图                   | boolean \\| [SkeletonParagraphProps](#SkeletonParagraphProps) | true  |\n| title     | 是否显示标题占位图                   | boolean \\| [SkeletonTitleProps](#SkeletonTitleProps)         | true  |"
    ],
    "Slider": [
      "| 参数                       | 说明                                                                                                   | 类型                | 默认值                                                                                      | 版本  |\n| ------------------------ | ---------------------------------------------------------------------------------------------------- | ----------------- | ---------------------------------------------------------------------------------------- | --- |\n| allowClear               | 支持清除, 单选模式有效                                                                                         | boolean           | false                                                                                    |     |\n| defaultValue             | 设置初始取值。当 `range` 为 `false` 时，使用 `number`，否则用 `[number, number]`                                      | number\\|number\\[] | 0 or \\[0, 0]                                                                             |     |\n| disabled                 | 值为 `true` 时，滑块为禁用状态                                                                                  | boolean           | false                                                                                    |     |\n| dots                     | 是否只能拖拽到刻度上                                                                                           | boolean           | false                                                                                    |     |\n| included                 | `marks` 不为空对象时有效，值为 true 时表示值为包含关系，false 表示并列                                                        | boolean           | true                                                                                     |     |\n| marks                    | 刻度标记，key 的类型必须为 `number` 且取值在闭区间 \\[min, max] 内，每个标签可以单独设置样式                                          | object            | { number: string\\|ReactNode } or { number: { style: object, label: string\\|ReactNode } } |     |\n| max                      | 最大值                                                                                                  | number            | 100                                                                                      |     |\n| min                      | 最小值                                                                                                  | number            | 0                                                                                        |     |\n| range                    | 双滑块模式                                                                                                | boolean           | false                                                                                    |     |\n| reverse                  | 反向坐标轴                                                                                                | boolean           | false                                                                                    |     |\n| step                     | 步长，取值必须大于 0，并且可被 (max - min) 整除。当 `marks` 不为空对象时，可以设置 `step` 为 `null`，此时 Slider 的可选值仅有 marks 标出来的部分。 | number\\|null      | 1                                                                                        |     |\n| tipFormatter             | Slider 会把当前值传给 `tipFormatter`，并在 Tooltip 中显示 `tipFormatter` 的返回值，若为 null，则隐藏 Tooltip。                | Function\\|null    | IDENTITY                                                                                 |     |\n| value                    | 设置当前取值。当 `range` 为 `false` 时，使用 `number`，否则用 `[number, number]`                                      | number\\|number\\[] |                                                                                          |     |\n| vertical                 | 值为 `true` 时，Slider 为垂直方向                                                                             | Boolean           | false                                                                                    |     |\n| onAfterChange            | 与 `onmouseup` 触发时机一致，把当前值作为参数传入。                                                                     | Function(value)   | NOOP                                                                                     |     |\n| onChange                 | 当 Slider 的值发生改变时，会触发 onChange 事件，并把改变后的值作为参数传入。                                                      | Function(value)   | NOOP                                                                                     |     |\n| tooltipPlacement         | 设置 Tooltip 展示位置。参考 [`Tooltip`](/components/tooltip/)。                                                | string            |                                                                                          |     |\n| tooltipVisible           | 值为`true`时，Tooltip 将会始终显示；否则始终不显示，哪怕在拖拽及移入时。                                                          | Boolean           |                                                                                          |     |\n| getTooltipPopupContainer | Tooltip 渲染父节点，默认渲染到 body 上。                                                                          | Function          | () => document.body                                                                      |     |"
    ],
    "Spin": [
      "| 参数               | 说明                                  | 类型          | 默认值       |\n| ---------------- | ----------------------------------- | ----------- | --------- |\n| delay            | 延迟显示加载效果的时间（防止闪烁）                   | number (毫秒) | -         |\n| indicator        | 加载指示符                               | ReactNode   | -         |\n| size             | 组件大小，可选值为 `small` `default` `large` | string      | 'default' |\n| spinning         | 是否为加载中状态                            | boolean     | true      |\n| tip              | 当作为包裹元素时，可以自定义描述文案                  | string      | -         |\n| wrapperClassName | 包装器的类属性                             | string      | -         |"
    ],
    "Statistic": [
      "| 参数               | 说明       | 类型                   | 默认值 | 版本  |\n| ---------------- | -------- | -------------------- | --- | --- |\n| decimalSeparator | 设置小数点    | string               | .   |     |\n| formatter        | 自定义数值展示  | (value) => ReactNode | -   |     |\n| groupSeparator   | 设置千分位标识符 | string               | ,   |     |\n| precision        | 数值精度     | number               | -   |     |\n| prefix           | 设置数值的前缀  | string \\| ReactNode  | -   |     |\n| suffix           | 设置数值的后缀  | string \\| ReactNode  | -   |     |\n| title            | 数值的标题    | string \\| ReactNode  | -   |     |\n| value            | 数值内容     | string \\| number     | -   |     |\n| valueStyle       | 设置数值的样式  | style                | -   |     |"
    ],
    "Steps": [
      "| 参数             | 说明                                                    | 类型                                                                     | 默认值          | 版本  |\n| -------------- | ----------------------------------------------------- | ---------------------------------------------------------------------- | ------------ | --- |\n| className      | 步骤条类名                                                 | string                                                                 | -            |     |\n| type           | 步骤条类型，有 `default` 和 `navigation` 两种                   | string                                                                 | `default`    |     |\n| current        | 指定当前步骤，从 0 开始记数。在子 Step 元素中，可以通过 `status` 属性覆盖状态      | number                                                                 | 0            |     |\n| direction      | 指定步骤条方向。目前支持水平（`horizontal`）和竖直（`vertical`）两种方向       | string                                                                 | horizontal   |     |\n| labelPlacement | 指定标签放置位置，默认水平放图标右侧，可选 `vertical` 放图标下方                | string                                                                 | `horizontal` |     |\n| progressDot    | 点状步骤条，可以设置为一个 function，labelPlacement 将强制为 `vertical` | Boolean or (iconDot, {index, status, title, description}) => ReactNode | false        |     |\n| size           | 指定大小，目前支持普通（`default`）和迷你（`small`）                    | string                                                                 | default      |     |\n| status         | 指定当前步骤的状态，可选 `wait` `process` `finish` `error`        | string                                                                 | process      |     |\n| initial        | 起始序号，从 0 开始记数                                         | number                                                                 | 0            |     |\n| onChange       | 点击切换步骤时触发                                             | (current) => void                                                      | -            |     |"
    ],
    "Switch": [
      "| 参数                | 说明                         | 类型                                       | 默认值     |\n| ----------------- | -------------------------- | ---------------------------------------- | ------- |\n| autoFocus         | 组件自动获取焦点                   | boolean                                  | false   |\n| checked           | 指定当前是否选中                   | boolean                                  | false   |\n| checkedChildren   | 选中时的内容                     | string\\|ReactNode                        |         |\n| defaultChecked    | 初始是否选中                     | boolean                                  | false   |\n| disabled          | 是否禁用                       | boolean                                  | false   |\n| loading           | 加载中的开关                     | boolean                                  | false   |\n| size              | 开关大小，可选值：`default` `small` | string                                   | default |\n| unCheckedChildren | 非选中时的内容                    | string\\|ReactNode                        |         |\n| onChange          | 变化时回调函数                    | Function(checked: boolean, event: Event) |         |\n| onClick           | 点击时回调函数                    | Function(checked: boolean, event: Event) |         |\n| className         | Switch 器类名                 | string                                   |         |"
    ],
    "Statistic.Countdown": [
      "| 参数         | 说明                                         | 类型                  | 默认值        | 版本  |\n| ---------- | ------------------------------------------ | ------------------- | ---------- | --- |\n| format     | 格式化倒计时展示，参考 [moment](http://momentjs.com/) | string              | 'HH:mm:ss' |     |\n| onFinish   | 倒计时完成时触发                                   | () => void          | -          |     |\n| prefix     | 设置数值的前缀                                    | string \\| ReactNode | -          |     |\n| suffix     | 设置数值的后缀                                    | string \\| ReactNode | -          |     |\n| title      | 数值的标题                                      | string \\| ReactNode | -          |     |\n| value      | 数值内容                                       | number \\| moment    | -          |     |\n| valueStyle | 设置数值的样式                                    | style               | -          |     |"
    ],
    "Steps.Step": [
      "| 参数          | 说明                                                                               | 类型                | 默认值   | 版本  |\n| ----------- | -------------------------------------------------------------------------------- | ----------------- | ----- | --- |\n| description | 步骤的详情描述，可选                                                                       | string\\|ReactNode | -     |     |\n| icon        | 步骤图标的类型，可选                                                                       | ReactNode         | -     |     |\n| status      | 指定状态。当不配置该属性时，会使用 Steps 的 `current` 来自动指定状态。可选：`wait` `process` `finish` `error` | string            | wait  |     |\n| title       | 标题                                                                               | string\\|ReactNode | -     |     |\n| subTitle    | 子标题                                                                              | string\\|ReactNode | -     |     |\n| disabled    | 禁用点击                                                                             | boolean           | false |     |"
    ],
    "Tabs": [
      "| 参数                 | 说明                                          | 类型                                                                                     | 默认值                                          |                              |\n| ------------------ | ------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------- | ---------------------------- |\n| activeKey          | 当前激活 tab 面板的 key                            | string                                                                                 | 无                                            |                              |\n| animated           | 是否使用动画切换 Tabs，在 \\`tabPosition=top           | bottom\\` 时有效                                                                           | boolean \\| {inkBar:boolean, tabPane:boolean} | true, 当 type=\"card\" 时为 false |\n| renderTabBar       | 替换 TabBar，用于二次封装标签头                         | (props: DefaultTabBarProps, DefaultTabBar: React.ComponentClass) => React.ReactElement | 无                                            |                              |\n| defaultActiveKey   | 初始化选中面板的 key，如果没有设置 activeKey               | string                                                                                 | 第一个面板                                        |                              |\n| hideAdd            | 是否隐藏加号图标，在 `type=\"editable-card\"` 时有效       | boolean                                                                                | false                                        |                              |\n| size               | 大小，提供 `large` `default` 和 `small` 三种大小      | string                                                                                 | 'default'                                    |                              |\n| tabBarExtraContent | tab bar 上额外的元素                              | React.ReactNode                                                                        | 无                                            |                              |\n| tabBarGutter       | tabs 之间的间隙                                  | number                                                                                 | 无                                            |                              |\n| tabBarStyle        | tab bar 的样式对象                               | object                                                                                 | -                                            |                              |\n| tabPosition        | 页签位置，可选值有 `top` `right` `bottom` `left`     | string                                                                                 | 'top'                                        |                              |\n| type               | 页签的基本样式，可选 `line`、`card` `editable-card` 类型 | string                                                                                 | 'line'                                       |                              |\n| onChange           | 切换面板的回调                                     | Function(activeKey) {}                                                                 | 无                                            |                              |\n| onEdit             | 新增和删除页签的回调，在 `type=\"editable-card\"` 时有效     | (targetKey, action): void                                                              | 无                                            |                              |\n| onNextClick        | next 按钮被点击的回调                               | Function                                                                               | 无                                            |                              |\n| onPrevClick        | prev 按钮被点击的回调                               | Function                                                                               | 无                                            |                              |\n| onTabClick         | tab 被点击的回调                                  | Function                                                                               | 无                                            |                              |\n| keyboard           | 开启键盘切换功能                                    | boolean                                                                                | true                                         |                              |"
    ],
    "Tabs.TabPane": [
      "| 参数          | 说明              | 类型                | 默认值   |\n| ----------- | --------------- | ----------------- | ----- |\n| forceRender | 被隐藏时是否渲染 DOM 结构 | boolean           | false |\n| key         | 对应 activeKey    | string            | 无     |\n| tab         | 选项卡头显示文字        | string\\|ReactNode | 无     |"
    ],
    "Tag.CheckableTag": [
      "| 参数       | 说明         | 类型                | 默认值   |\n| -------- | ---------- | ----------------- | ----- |\n| checked  | 设置标签的选中状态  | boolean           | false |\n| onChange | 点击标签时触发的回调 | (checked) => void | -     |"
    ],
    "Tag": [
      "| 参数         | 说明                                     | 类型          | 默认值    |     |\n| ---------- | -------------------------------------- | ----------- | ------ | --- |\n| afterClose | 关闭动画完成后的回调，请使用 `onClose`, 我们将在下个版本删除此项 | () => void  | -      |     |\n| closable   | 标签是否可以关闭                               | boolean     | false  |     |\n| color      | 标签色                                    | string      | -      |     |\n| onClose    | 关闭时的回调                                 | (e) => void | -      |     |\n| visible    | 是否显示标签                                 | boolean     | `true` |     |\n| icon       | 设置图标                                   | ReactNode   | -      |     |"
    ],
    "TimePicker": [
      "| 参数                  | 说明                                          | 类型                                               | 默认值        | 版本  |\n| ------------------- | ------------------------------------------- | ------------------------------------------------ | ---------- | --- |\n| allowClear          | 是否展示清除按钮                                    | boolean                                          | true       |     |\n| autoFocus           | 自动获取焦点                                      | boolean                                          | false      |     |\n| bordered            | 是否有                                         | boolean                                          | true       |     |\n| className           | 选择器类名                                       | string                                           | ''         |     |\n| clearText           | 清除按钮的提示文案                                   | string                                           | clear      |     |\n| defaultValue        | 默认时间                                        | [moment](http://momentjs.com/)                   | 无          |     |\n| disabled            | 禁用全部操作                                      | boolean                                          | false      |     |\n| disabledHours       | 禁止选择部分小时选项                                  | function()                                       | 无          |     |\n| disabledMinutes     | 禁止选择部分分钟选项                                  | function(selectedHour)                           | 无          |     |\n| disabledSeconds     | 禁止选择部分秒选项                                   | function(selectedHour, selectedMinute)           | 无          |     |\n| format              | 展示的时间格式                                     | string                                           | \"HH:mm:ss\" |     |\n| getPopupContainer   | 定义浮层的容器，默认为 body 上新建 div                    | function(trigger)                                | 无          |     |\n| hideDisabledOptions | 隐藏禁止选择的选项                                   | boolean                                          | false      |     |\n| hourStep            | 小时选项间隔                                      | number                                           | 1          |     |\n| inputReadOnly       | 设置输入框为只读（避免在移动设备上打开虚拟键盘）                    | boolean                                          | false      |     |\n| minuteStep          | 分钟选项间隔                                      | number                                           | 1          |     |\n| open                | 面板是否打开                                      | boolean                                          | false      |     |\n| placeholder         | 没有值的时候显示的内容                                 | string                                           | \"请选择时间\"    |     |\n| popupClassName      | 弹出层类名                                       | string                                           | ''         |     |\n| popupStyle          | 弹出层样式对象                                     | object                                           | -          |     |\n| secondStep          | 秒选项间隔                                       | number                                           | 1          |     |\n| suffixIcon          | 自定义的选择框后缀图标                                 | ReactNode                                        | -          |     |\n| clearIcon           | 自定义的清除图标                                    | ReactNode                                        | -          |     |\n| renderExtraFooter   | 选择框底部显示自定义的内容                               | () => ReactNode                                  | 无          |     |\n| use12Hours          | 使用 12 小时制，为 true 时 `format` 默认为 `h:mm:ss a` | boolean                                          | false      |     |\n| value               | 当前时间                                        | [moment](http://momentjs.com/)                   | 无          |     |\n| onChange            | 时间发生变化的回调                                   | function(time: moment, timeString: string): void | 无          |     |\n| onOpenChange        | 面板打开/关闭时的回调                                 | (open: boolean): void                            | 无          |     |"
    ],
    "Timeline": [
      "| 参数         | 说明                          | 类型                               | 默认值                   |\n| ---------- | --------------------------- | -------------------------------- | --------------------- |\n| pending    | 指定最后一个幽灵节点是否存在或内容           | boolean\\|string\\|ReactNode       | false                 |\n| pendingDot | 当最后一个幽灵节点存在時，指定其时间图点        | string\\|ReactNode                | `<LoadingOutlined />` |\n| reverse    | 节点排序                        | boolean                          | false                 |\n| mode       | 通过设置 `mode` 可以改变时间轴和内容的相对位置 | `left` \\| `alternate` \\| `right` | -                     |"
    ],
    "Timeline.Item": [
      "| 参数       | 说明                                      | 类型                | 默认值  |\n| -------- | --------------------------------------- | ----------------- | ---- |\n| color    | 指定圆圈颜色 `blue, red, green, gray`，或自定义的色值 | string            | blue |\n| dot      | 自定义时间轴点                                 | string\\|ReactNode | -    |\n| position | 自定义节点位置                                 | `left` \\| `right` | -    |\n| label    | 设置标签                                    | ReactNode         | -    |"
    ],
    "Transfer": [
      "| 参数              | 说明                                                                                                           | 类型                                                                                              | 默认值                                                               | 版本  |\n| --------------- | ------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- | --- |\n| className       | 自定义类                                                                                                         | string                                                                                          |                                                                   |     |\n| dataSource      | 数据源，其中的数据将会被渲染到左边一栏中，`targetKeys` 中指定的除外。                                                                    | [TransferItem](https://git.io/vMM64)\\[]                                                         | \\[]                                                               |     |\n| disabled        | 是否禁用                                                                                                         | boolean                                                                                         | false                                                             |     |\n| filterOption    | 接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。                                   | (inputValue, option): boolean                                                                   |                                                                   |     |\n| footer          | 底部渲染函数                                                                                                       | (props) => ReactNode                                                                            |                                                                   |     |\n| listStyle       | 两个穿梭框的自定义样式                                                                                                  | object\\|({direction: 'left'\\|'right'}) => object                                                |                                                                   |     |\n| locale          | 各种语言                                                                                                         | { itemUnit: string; itemsUnit: string; searchPlaceholder: string; notFoundContent: ReactNode; } | `{ itemUnit: '项', itemsUnit: '项', searchPlaceholder: '请输入搜索内容' }` |     |\n| operations      | 操作文案集合，顺序从上至下                                                                                                | string\\[]                                                                                       | \\['>', '&lt;']                                                    |     |\n| render          | 每行数据渲染函数，该函数的入参为 `dataSource` 中的项，返回值为 ReactElement。或者返回一个普通对象，其中 `label` 字段为 ReactElement，`value` 字段为 title | (record) => ReactNode                                                                           |                                                                   |     |\n| selectedKeys    | 设置哪些项应该被选中                                                                                                   | string\\[]                                                                                       | \\[]                                                               |     |\n| showSearch      | 是否显示搜索框                                                                                                      | boolean                                                                                         | false                                                             |     |\n| showSelectAll   | 是否展示全选勾选框                                                                                                    | boolean                                                                                         | true                                                              |     |\n| style           | 容器的自定义样式                                                                                                     | object                                                                                          |                                                                   |     |\n| targetKeys      | 显示在右侧框数据的 key 集合                                                                                             | string\\[]                                                                                       | \\[]                                                               |     |\n| titles          | 标题集合，顺序从左至右                                                                                                  | ReactNode\\[]                                                                                    | \\['', '']                                                         |     |\n| selectAllLabels | 自定义顶部多选框标题的集合                                                                                                | (ReactNode \\| (info: { selectedCount: number, totalCount: number }) => ReactNode)\\[]            |                                                                   |     |\n| onChange        | 选项在两栏之间转移时的回调函数                                                                                              | (targetKeys, direction, moveKeys): void                                                         |                                                                   |     |\n| onScroll        | 选项列表滚动时的回调函数                                                                                                 | (direction, event): void                                                                        |                                                                   |     |\n| onSearch        | 搜索框内容时改变时的回调函数                                                                                               | (direction: 'left'\\|'right', value: string): void                                               | -                                                                 |     |\n| onSelectChange  | 选中项发生改变时的回调函数                                                                                                | (sourceSelectedKeys, targetSelectedKeys): void                                                  |                                                                   |     |"
    ],
    "Tree": [
      "| 参数                  | 说明                                                                                                                                                     | 类型                                                                                   | 默认值   | 版本    |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------ | ----- | ----- |\n| autoExpandParent    | 是否自动展开父节点                                                                                                                                              | boolean                                                                              | true  |       |\n| blockNode           | 是否节点占据一行                                                                                                                                               | boolean                                                                              | false |       |\n| checkable           | 节点前添加 Checkbox 复选框                                                                                                                                     | boolean                                                                              | false |       |\n| checkedKeys         | （受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点 key，则子节点自动选中；相应当子节点 key 都传入，父节点也自动选中。当设置`checkable`和`checkStrictly`，它是一个有`checked`和`halfChecked`属性的对象，并且父子节点的选中与否不再关联 | string\\[] \\| {checked: string\\[], halfChecked: string\\[]}                            | \\[]   |       |\n| checkStrictly       | checkable 状态下节点选择完全受控（父子节点选中状态不再关联）                                                                                                                    | boolean                                                                              | false |       |\n| defaultCheckedKeys  | 默认选中复选框的树节点                                                                                                                                            | string\\[]                                                                            | \\[]   |       |\n| defaultExpandAll    | 默认展开所有树节点                                                                                                                                              | boolean                                                                              | false |       |\n| defaultExpandedKeys | 默认展开指定的树节点                                                                                                                                             | string\\[]                                                                            | \\[]   |       |\n| defaultExpandParent | 默认展开父节点                                                                                                                                                | bool                                                                                 | true  |       |\n| defaultSelectedKeys | 默认选中的树节点                                                                                                                                               | string\\[]                                                                            | \\[]   |       |\n| disabled            | 将树禁用                                                                                                                                                   | bool                                                                                 | false |       |\n| draggable           | 设置节点可拖拽（IE>8）                                                                                                                                          | boolean                                                                              | false |       |\n| expandedKeys        | （受控）展开指定的树节点                                                                                                                                           | string\\[]                                                                            | \\[]   |       |\n| filterTreeNode      | 按需筛选树节点（高亮），返回 true                                                                                                                                    | function(node)                                                                       | -     |       |\n| loadData            | 异步加载数据                                                                                                                                                 | function(node)                                                                       | -     |       |\n| loadedKeys          | （受控）已经加载的节点，需要配合 `loadData` 使用                                                                                                                         | string\\[]                                                                            | \\[]   |       |\n| multiple            | 支持点选多个节点（节点本身）                                                                                                                                         | boolean                                                                              | false |       |\n| selectable          | 是否可选中                                                                                                                                                  | boolean                                                                              | true  |       |\n| selectedKeys        | （受控）设置选中的树节点                                                                                                                                           | string\\[]                                                                            | -     |       |\n| showIcon            | 是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式                                                                                                 | boolean                                                                              | false |       |\n| switcherIcon        | 自定义树节点的展开/折叠图标                                                                                                                                         | ReactNode                                                                            | -     |       |\n| showLine            | 是否展示连接线                                                                                                                                                | boolean                                                                              | false |       |\n| treeData            | treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（key 在整个树范围内唯一）                                                                                                   | array\\\\&lt;{key, title, children, \\[disabled, selectable]}>                          | -     |       |\n| virtual             | 设置 `false` 时关闭虚拟滚动                                                                                                                                     | boolean                                                                              | true  | 4.1.0 |\n| onCheck             | 点击复选框触发                                                                                                                                                | function(checkedKeys, e:{checked: bool, checkedNodes, node, event, halfCheckedKeys}) | -     |       |\n| onDragEnd           | dragend 触发时调用                                                                                                                                          | function({event, node})                                                              | -     |       |\n| onDragEnter         | dragenter 触发时调用                                                                                                                                        | function({event, node, expandedKeys})                                                | -     |       |\n| onDragLeave         | dragleave 触发时调用                                                                                                                                        | function({event, node})                                                              | -     |       |\n| onDragOver          | dragover 触发时调用                                                                                                                                         | function({event, node})                                                              | -     |       |\n| onDragStart         | 开始拖拽时调用                                                                                                                                                | function({event, node})                                                              | -     |       |\n| onDrop              | drop 触发时调用                                                                                                                                             | function({event, node, dragNode, dragNodesKeys})                                     | -     |       |\n| onExpand            | 展开/收起节点时触发                                                                                                                                             | function(expandedKeys, {expanded: bool, node})                                       | -     |       |\n| onLoad              | 节点加载完毕时触发                                                                                                                                              | function(loadedKeys, {event, node})                                                  | -     |       |\n| onRightClick        | 响应右键点击                                                                                                                                                 | function({event, node})                                                              | -     |       |\n| onSelect            | 点击树节点触发                                                                                                                                                | function(selectedKeys, e:{selected: bool, selectedNodes, node, event})               | -     |       |"
    ],
    "Tree.TreeNode": [
      "| 参数              | 说明                                                                                                       | 类型                                  | 默认值        |\n| --------------- | -------------------------------------------------------------------------------------------------------- | ----------------------------------- | ---------- |\n| checkable       | 当树为 checkable 时，设置独立节点是否展示 Checkbox                                                                      | boolean                             | -          |\n| disableCheckbox | 禁掉 checkbox                                                                                              | boolean                             | false      |\n| disabled        | 禁掉响应                                                                                                     | boolean                             | false      |\n| icon            | 自定义图标。可接收组件，props 为当前节点 props                                                                            | ReactNode/Function(props):ReactNode | -          |\n| isLeaf          | 设置为叶子节点(设置了`loadData`时有效)                                                                                | boolean                             | false      |\n| key             | 被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！ | string                              | 内部计算出的节点位置 |\n| selectable      | 设置节点是否可被选中                                                                                               | boolean                             | true       |\n| title           | 标题                                                                                                       | string\\|ReactNode                   | '---'      |"
    ],
    "Tooltip": [
      "| 参数    | 说明   | 类型                                 | 默认值 |\n| ----- | ---- | ---------------------------------- | --- |\n| title | 提示文字 | string\\|ReactNode\\|() => ReactNode | 无   |",
      "| 参数                 | 说明                                                                                                                                     | 类型                    | 默认值                 |\n| ------------------ | -------------------------------------------------------------------------------------------------------------------------------------- | --------------------- | ------------------- |\n| arrowPointAtCenter | 箭头是否指向目标元素中心，`antd@1.11+` 支持                                                                                                           | boolean               | `false`             |\n| autoAdjustOverflow | 气泡被遮挡时自动调整位置                                                                                                                           | boolean               | `true`              |\n| defaultVisible     | 默认是否显隐                                                                                                                                 | boolean               | false               |\n| getPopupContainer  | 浮层渲染父节点，默认渲染到 body 上                                                                                                                   | Function(triggerNode) | () => document.body |\n| mouseEnterDelay    | 鼠标移入后延时多少才显示 Tooltip，单位：秒                                                                                                              | number                | 0.1                 |\n| mouseLeaveDelay    | 鼠标移出后延时多少才隐藏 Tooltip，单位：秒                                                                                                              | number                | 0.1                 |\n| overlayClassName   | 卡片类名                                                                                                                                   | string                | 无                   |\n| overlayStyle       | 卡片样式                                                                                                                                   | object                | 无                   |\n| placement          | 气泡框位置，可选 `top` `left` `right` `bottom` `topLeft` `topRight` `bottomLeft` `bottomRight` `leftTop` `leftBottom` `rightTop` `rightBottom` | string                | top                 |\n| trigger            | 触发行为，可选 `hover/focus/click/contextMenu`，可使用数组设置多个触发行为                                                                                  | string \\| string\\[]   | hover               |\n| visible            | 用于手动控制浮层显隐                                                                                                                             | boolean               | false               |\n| onVisibleChange    | 显示隐藏的回调                                                                                                                                | (visible) => void     | 无                   |\n| align              | 该值将合并到 placement 的配置中，设置参考 [rc-tooltip](https://github.com/react-component/tooltip)                                                    | Object                | 无                   |"
    ],
    "Tree.DirectoryTree": [
      "| 参数           | 说明                                          | 类型     | 默认值   |\n| ------------ | ------------------------------------------- | ------ | ----- |\n| expandAction | 目录展开逻辑，可选 `false` `'click'` `'doubleClick'` | string | click |"
    ],
    "TreeSelect": [
      "| 参数                       | 说明                                                                                                                                         | 类型                                                                                        | 默认值                     | 版本    |\n| ------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------- | ----------------------- | ----- |\n| allowClear               | 显示清除按钮                                                                                                                                     | boolean                                                                                   | false                   |       |\n| autoClearSearchValue     | 当多选模式下值被选择，自动清空搜索框                                                                                                                         | boolean                                                                                   | true                    |       |\n| bordered                 | 是否显示边框                                                                                                                                     | boolean                                                                                   | true                    |       |\n| defaultValue             | 指定默认选中的条目                                                                                                                                  | string/string\\[]                                                                          | -                       |       |\n| disabled                 | 是否禁用                                                                                                                                       | boolean                                                                                   | false                   |       |\n| dropdownClassName        | 下拉菜单的 className 属性                                                                                                                         | string                                                                                    | -                       |       |\n| dropdownMatchSelectWidth | 下拉菜单和选择器同宽。默认将设置 `min-width`。`false` 时会关闭虚拟滚动                                                                                              | boolean \\| number                                                                         | true                    |       |\n| dropdownStyle            | 下拉菜单的样式                                                                                                                                    | object                                                                                    | -                       |       |\n| filterTreeNode           | 是否根据输入项进行筛选，默认用 treeNodeFilterProp 的值作为要筛选的 TreeNode 的属性值                                                                                  | boolean\\|Function(inputValue: string, treeNode: TreeNode) (函数需要返回 bool 值)                 | Function                |       |\n| getPopupContainer        | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codepen.io/afc163/pen/zEjNOy?editors=0010)                               | Function(triggerNode)                                                                     | () => document.body     |       |\n| labelInValue             | 是否把每个选项的 label 包装到 value 中，会把 value 类型从 `string` 变为 `{value: string, label: ReactNode, halfChecked(treeCheckStrictly 时有效): string[] }` 的格式 | boolean                                                                                   | false                   |       |\n| loadData                 | 异步加载数据                                                                                                                                     | function(node)                                                                            | -                       |       |\n| maxTagCount              | 最多显示多少个 tag                                                                                                                                | number                                                                                    | -                       |       |\n| maxTagPlaceholder        | 隐藏 tag 时显示的内容                                                                                                                              | ReactNode/function(omittedValues)                                                         | -                       |       |\n| multiple                 | 支持多选（当设置 treeCheckable 时自动变为 true）                                                                                                         | boolean                                                                                   | false                   |       |\n| placeholder              | 选择框默认文字                                                                                                                                    | string                                                                                    | -                       |       |\n| searchValue              | 搜索框的值，可以通过 `onSearch` 获取用户输入                                                                                                               | string                                                                                    | -                       |       |\n| treeIcon                 | 是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式                                                                                     | boolean                                                                                   | false                   |       |\n| switcherIcon             | 自定义树节点的展开/折叠图标                                                                                                                             | ReactNode                                                                                 | -                       |       |\n| showCheckedStrategy      | 定义选中项回填的方式。`TreeSelect.SHOW_ALL`: 显示所有选中节点(包括父节点). `TreeSelect.SHOW_PARENT`: 只显示父节点(当父节点下所有子节点都选中时). 默认只显示子节点.                             | enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }                 | TreeSelect.SHOW_CHILD   |       |\n| showSearch               | 是否支持搜索框                                                                                                                                    | boolean                                                                                   | 单选：`false` \\| 多选：`true` |       |\n| size                     | 选择框大小                                                                                                                                      | `large` \\| `middle` \\| `small`                                                            | 无                       |       |\n| showArrow                | 是否显示 `suffixIcon`，单选模式下默认 `true`                                                                                                           | boolean                                                                                   |                         |       |\n| suffixIcon               | 自定义的选择框后缀图标, 多选模式下必须同时设置 `showArrow` 为 `true`                                                                                              | ReactNode                                                                                 | -                       |       |\n| treeCheckable            | 显示 checkbox                                                                                                                                | boolean                                                                                   | false                   |       |\n| treeCheckStrictly        | checkable 状态下节点选择完全受控（父子节点选中状态不再关联），会使得 `labelInValue` 强制为 true                                                                            | boolean                                                                                   | false                   |       |\n| treeData                 | treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（value 在整个树范围内唯一）                                                                                     | array\\\\&lt;{value, title, children, \\[disabled, disableCheckbox, selectable, checkable]}> | \\[]                     |       |\n| treeDataSimpleMode       | 使用简单格式的 treeData，具体设置参考可设置的类型 (此时 treeData 应变为这样的数据结构: \\[{id:1, pId:0, value:'1', title:\"test1\",...},...], `pId` 是父节点的 id)                 | false\\|object\\\\&lt;{ id: string, pId: string, rootPId: string }>                          | false                   |       |\n| treeDefaultExpandAll     | 默认展开所有树节点                                                                                                                                  | boolean                                                                                   | false                   |       |\n| treeDefaultExpandedKeys  | 默认展开的树节点                                                                                                                                   | string\\[]                                                                                 | -                       |       |\n| treeExpandedKeys         | 设置展开的树节点                                                                                                                                   | string\\[]                                                                                 | -                       |       |\n| treeNodeFilterProp       | 输入项过滤对应的 treeNode 属性                                                                                                                       | string                                                                                    | 'value'                 |       |\n| treeNodeLabelProp        | 作为显示的 prop 设置                                                                                                                              | string                                                                                    | 'title'                 |       |\n| value                    | 指定当前选中的条目                                                                                                                                  | string/string\\[]                                                                          | -                       |       |\n| virtual                  | 设置 `false` 时关闭虚拟滚动                                                                                                                         | boolean                                                                                   | true                    | 4.1.0 |\n| onChange                 | 选中树节点时调用此函数                                                                                                                                | function(value, label, extra)                                                             | -                       |       |\n| onSearch                 | 文本框值变化时回调                                                                                                                                  | function(value: string)                                                                   | -                       |       |\n| onSelect                 | 被选中时调用                                                                                                                                     | function(value, node, extra)                                                              | -                       |       |\n| onTreeExpand             | 展示节点时调用                                                                                                                                    | function(expandedKeys)                                                                    | -                       |       |"
    ],
    "TreeSelect.TreeNode": [
      "| 参数              | 说明                                  | 类型                | 默认值   | 版本  |\n| --------------- | ----------------------------------- | ----------------- | ----- | --- |\n| selectable      | 是否可选                                | boolean           | true  |     |\n| checkable       | 当树为 checkable 时，设置独立节点是否展示 Checkbox | boolean           | -     |     |\n| disableCheckbox | 禁掉 checkbox                         | boolean           | false |     |\n| disabled        | 是否禁用                                | boolean           | false |     |\n| isLeaf          | 是否是叶子节点                             | boolean           | false |     |\n| key             | 此项必须设置（其值在整个树范围内唯一）                 | string            | -     |     |\n| title           | 树节点显示的内容                            | string\\|ReactNode | '---' |     |\n| value           | 默认根据此属性值进行筛选（其值在整个树范围内唯一）           | string            | -     |     |"
    ],
    "Typography.Text": [
      "| 参数        | 说明                     | 类型                                                                             | 默认值   | 版本  |\n| --------- | ---------------------- | ------------------------------------------------------------------------------ | ----- | --- |\n| copyable  | 是否可拷贝，为对象时可设置复制文本以回调函数 | boolean \\| { text: string, onCopy: Function }                                  | false |     |\n| delete    | 添加删除线样式                | boolean                                                                        | false |     |\n| disabled  | 禁用文本                   | boolean                                                                        | false |     |\n| editable  | 是否可编辑，为对象时可对编辑进行控制     | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) } | false |     |\n| ellipsis  | 设置自动溢出省略               | boolean                                                                        | false |     |\n| mark      | 添加标记样式                 | boolean                                                                        | false |     |\n| code      | 添加代码样式                 | boolean                                                                        | false |     |\n| underline | 添加下划线样式                | boolean                                                                        | false |     |\n| strong    | 是否加粗                   | boolean                                                                        | false |     |\n| type      | 文本类型                   | `secondary` \\| `warning` \\| `danger`                                           | -     |     |"
    ],
    "Typography.Title": [
      "| 参数        | 说明                           | 类型                                                                             | 默认值   | 版本  |\n| --------- | ---------------------------- | ------------------------------------------------------------------------------ | ----- | --- |\n| copyable  | 是否可拷贝，为对象时可设置复制文本以回调函数       | boolean \\| { text: string, onCopy: Function }                                  | false |     |\n| delete    | 添加删除线样式                      | boolean                                                                        | false |     |\n| disabled  | 禁用文本                         | boolean                                                                        | false |     |\n| editable  | 是否可编辑，为对象时可对编辑进行控制           | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) } | false |     |\n| ellipsis  | 自动溢出省略，为对象时可设置省略行数与是否可展开等    | boolean \\| { rows: number, expandable: boolean, onExpand: Function }           | false |     |\n| level     | 重要程度，相当于 `h1`、`h2`、`h3`、`h4` | number: `1`, `2`, `3`, `4`                                                     | 1     |     |\n| mark      | 添加标记样式                       | boolean                                                                        | false |     |\n| underline | 添加下划线样式                      | boolean                                                                        | false |     |\n| onChange  | 当用户提交编辑内容时触发                 | Function(string)                                                               | -     |     |\n| type      | 文本类型                         | `secondary` \\| `warning` \\| `danger`                                           | -     |     |"
    ],
    "Typography.Paragraph": [
      "| 参数        | 说明                             | 类型                                                                                   | 默认值   | 版本  |\n| --------- | ------------------------------ | ------------------------------------------------------------------------------------ | ----- | --- |\n| copyable  | 是否可拷贝，为对象时可设置复制文本以回调函数         | boolean \\| { text: string, onCopy: Function }                                        | false |     |\n| delete    | 添加删除线样式                        | boolean                                                                              | false |     |\n| disabled  | 禁用文本                           | boolean                                                                              | false |     |\n| editable  | 是否可编辑，为对象时可对编辑进行控制             | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) }       | false |     |\n| ellipsis  | 自动溢出省略，为对象时可设置省略行数、是否可展开、添加后缀等 | boolean \\| { rows: number, expandable: boolean, suffix: string, onExpand: Function } | false |     |\n| mark      | 添加标记样式                         | boolean                                                                              | false |     |\n| underline | 添加下划线样式                        | boolean                                                                              | false |     |\n| onChange  | 当用户提交编辑内容时触发                   | Function(string)                                                                     | -     |     |\n| strong    | 是否加粗                           | boolean                                                                              | false |     |\n| type      | 文本类型                           | `secondary` \\| `warning` \\| `danger`                                                 | -     |     |"
    ],
    "Upload": [
      "| 参数                    | 说明                                                                                                                                                               | 类型                                                                                                                                                           | 默认值       | 版本   |                   |      |         |     |     |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- | ---- | ----------------- | ---- | ------- | --- | --- |\n| accept                | 接受上传的文件类型, 详见 [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)                                              | string                                                                                                                                                       | 无         |      |                   |      |         |     |     |\n| action                | 上传的地址                                                                                                                                                            | string\\|(file) => `Promise`                                                                                                                                  | 无         |      |                   |      |         |     |     |\n| method                | 上传请求的 http method                                                                                                                                                | string                                                                                                                                                       | 'post'    |      |                   |      |         |     |     |\n| directory             | 支持上传文件夹（[caniuse](https://caniuse.com/#feat=input-file-directory)）                                                                                               | boolean                                                                                                                                                      | false     |      |                   |      |         |     |     |\n| beforeUpload          | 上传文件之前的钩子，参数为上传的文件，若返回 `false` 则停止上传。支持返回一个 Promise 对象，Promise 对象 reject 时则停止上传，resolve 时开始上传（ resolve 传入 `File` 或 `Blob` 对象则上传 resolve 传入对象）。**注意：IE9 不支持该方法**。 | (file, fileList) => \\`boolean                                                                                                                                | Promise\\` | 无    |                   |      |         |     |     |\n| customRequest         | 通过覆盖默认的上传行为，可以自定义自己的上传实现                                                                                                                                         | Function                                                                                                                                                     | 无         |      |                   |      |         |     |     |\n| data                  | 上传所需额外参数或返回上传额外参数的方法                                                                                                                                             | object\\|(file) => object                                                                                                                                     | 无         |      |                   |      |         |     |     |\n| defaultFileList       | 默认已经上传的文件列表                                                                                                                                                      | object\\[]                                                                                                                                                    | 无         |      |                   |      |         |     |     |\n| disabled              | 是否禁用                                                                                                                                                             | boolean                                                                                                                                                      | false     |      |                   |      |         |     |     |\n| fileList              | 已经上传的文件列表（受控），使用此参数时，如果遇到 `onChange` 只调用一次的问题，请参考 [#2423](https://github.com/ant-design/ant-design/issues/2423)                                                  | object\\[]                                                                                                                                                    | 无         |      |                   |      |         |     |     |\n| headers               | 设置上传的请求头部，IE10 以上有效                                                                                                                                              | object                                                                                                                                                       | 无         |      |                   |      |         |     |     |\n| listType              | 上传列表的内建样式，支持三种基本样式 `text`, `picture` 和 `picture-card`                                                                                                            | string                                                                                                                                                       | 'text'    |      |                   |      |         |     |     |\n| multiple              | 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件                                                                                                                           | boolean                                                                                                                                                      | false     |      |                   |      |         |     |     |\n| name                  | 发到后台的文件参数名                                                                                                                                                       | string                                                                                                                                                       | 'file'    |      |                   |      |         |     |     |\n| previewFile           | 自定义文件预览逻辑                                                                                                                                                        | (file: File \\| Blob) => Promise&lt;dataURL: string>                                                                                                          | 无         |      |                   |      |         |     |     |\n| showUploadList        | 是否展示文件列表, 可设为一个对象，用于单独设定 `showPreviewIcon`, `showRemoveIcon`, `showDownloadIcon`, `removeIcon` 和 `downloadIcon`                                                  | Boolean or { showPreviewIcon?: boolean, showRemoveIcon?: boolean, showDownloadIcon?: boolean, removeIcon?: React.ReactNode, downloadIcon?: React.ReactNode } | true      |      |                   |      |         |     |     |\n| supportServerRender   | 服务端渲染时需要打开这个                                                                                                                                                     | boolean                                                                                                                                                      | false     |      |                   |      |         |     |     |\n| withCredentials       | 上传请求时是否携带 cookie                                                                                                                                                 | boolean                                                                                                                                                      | false     |      |                   |      |         |     |     |\n| openFileDialogOnClick | 点击打开文件对话框                                                                                                                                                        | boolean                                                                                                                                                      | true      |      |                   |      |         |     |     |\n| onChange              | 上传文件改变时的状态，详见 [onChange](#onChange)                                                                                                                              | Function                                                                                                                                                     | 无         |      |                   |      |         |     |     |\n| onPreview             | 点击文件链接或预览图标时的回调                                                                                                                                                  | Function(file)                                                                                                                                               | 无         |      |                   |      |         |     |     |\n| onRemove              | 点击移除文件时的回调，返回值为 false 时不移除。支持返回一个 Promise 对象，Promise 对象 resolve(false) 或 reject 时不移除。                                                                            | Function(file): \\`boolean                                                                                                                                    | Promise\\` | 无    |                   |      |         |     |     |\n| onDownload            | 点击下载文件时的回调，如果没有指定，则默认跳转到文件 url 对应的标签页。                                                                                                                           | Function(file): void                                                                                                                                         | 跳转新标签页    |      |                   |      |         |     |     |\n| transformFile         | 在上传之前转换文件。支持返回一个 Promise 对象                                                                                                                                      | Function(file): \\`string                                                                                                                                     | Blob      | File | Promise&lt;string | Blob | File>\\` | 无   |     |\n| iconRender            | 自定义显示 icon                                                                                                                                                       | (file: UploadFile, listType?: UploadListType) => React.ReactNode                                                                                             | 无         |      |                   |      |         |     |     |"
    ],
    "DatePicker.WeekPicker": [
      "| 参数                 | 说明                                             | 类型                                         | 默认值       | 版本  |\n| ------------------ | ---------------------------------------------- | ------------------------------------------ | --------- | --- |\n| defaultValue       | 默认日期                                           | [moment](http://momentjs.com/)             | -         |     |\n| defaultPickerValue | 默认面板日期                                         | [moment](http://momentjs.com/)             | 无         |     |\n| format             | 展示的日期格式，配置参考 [moment.js](http://momentjs.com/) | string                                     | \"YYYY-wo\" |     |\n| value              | 日期                                             | [moment](http://momentjs.com/)             | -         |     |\n| onChange           | 时间发生变化的回调，发生在用户选择时间时                           | function(date: moment, dateString: string) | -         |     |\n| renderExtraFooter  | 在面板中添加额外的页脚                                    | (mode) => React.ReactNode                  | -         |     |"
    ],
    "DatePicker.MonthPicker": [
      "| 参数                 | 说明                                             | 类型                                         | 默认值       | 版本  |\n| ------------------ | ---------------------------------------------- | ------------------------------------------ | --------- | --- |\n| defaultValue       | 默认日期                                           | [moment](http://momentjs.com/)             | 无         |     |\n| defaultPickerValue | 默认面板日期                                         | [moment](http://momentjs.com/)             | 无         |     |\n| format             | 展示的日期格式，配置参考 [moment.js](http://momentjs.com/) | string                                     | \"YYYY-MM\" |     |\n| monthCellRender    | 自定义的月份内容渲染方法                                   | function(date, locale): ReactNode          | -         |     |\n| renderExtraFooter  | 在面板中添加额外的页脚                                    | () => React.ReactNode                      | -         |     |\n| value              | 日期                                             | [moment](http://momentjs.com/)             | 无         |     |\n| onChange           | 时间发生变化的回调，发生在用户选择时间时                           | function(date: moment, dateString: string) | -         |     |"
    ],
    "DatePicker.RangePicker": [
      "| 参数                    | 说明                                                               | 类型                                                                                                                       | 默认值                                                | 版本  |     |\n| --------------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------- | --- | --- |\n| allowEmpty            | 允许起始项部分为空                                                        | \\[boolean, boolean]                                                                                                      | \\[false, false]                                    |     |     |\n| defaultValue          | 默认日期                                                             | [moment](http://momentjs.com/)\\[]                                                                                        | 无                                                  |     |     |\n| defaultPickerValue    | 默认面板日期                                                           | [moment](http://momentjs.com/)\\[]                                                                                        | 无                                                  |     |     |\n| disabled              | 禁用起始项                                                            | [boolean, boolean]                                                                                                       | 无                                                  |     |     |\n| disabledTime          | 不可选择的时间                                                          | function(dates: \\[moment, moment], partial: \\`'start'                                                                    | 'end'\\`)                                           | 无   |     |\n| format                | 展示的日期格式                                                          | string                                                                                                                   | \"YYYY-MM-DD HH:mm:ss\"                              |     |     |\n| ranges                | 预设时间范围快捷选择                                                       | { \\[range: string]: [moment](http://momentjs.com/)\\[] } \\| { \\[range: string]: () => [moment](http://momentjs.com/)\\[] } | 无                                                  |     |     |\n| renderExtraFooter     | 在面板中添加额外的页脚                                                      | () => React.ReactNode                                                                                                    | -                                                  |     |     |\n| separator             | 设置分隔符                                                            | string                                                                                                                   | '~'                                                |     |     |\n| showTime              | 增加时间选择功能                                                         | Object\\|boolean                                                                                                          | [TimePicker Options](/components/time-picker/#API) |     |     |\n| showTime.defaultValue | 设置用户选择日期时默认的时分秒，[例子](#components-date-picker-demo-disabled-date) | [moment](http://momentjs.com/)\\[]                                                                                        | \\[moment(), moment()]                              |     |     |\n| value                 | 日期                                                               | [moment](http://momentjs.com/)\\[]                                                                                        | 无                                                  |     |     |\n| onCalendarChange      | 待选日期发生变化的回调                                                      | function(dates: \\[moment, moment], dateStrings: \\[string, string])                                                       | 无                                                  |     |     |\n| onChange              | 日期范围发生变化的回调                                                      | function(dates: \\[moment, moment], dateStrings: \\[string, string])                                                       | 无                                                  |     |     |"
    ],
    "DatePicker": [
      "| 参数                    | 说明                                                                 | 类型                                         | 默认值                                                | 版本  |\n| --------------------- | ------------------------------------------------------------------ | ------------------------------------------ | -------------------------------------------------- | --- |\n| defaultValue          | 默认日期，如果开始时间或结束时间为 `null` 或者 `undefined`，日期范围将是一个开区间                | [moment](http://momentjs.com/)             | 无                                                  |     |\n| defaultPickerValue    | 默认面板日期                                                             | [moment](http://momentjs.com/)             | 无                                                  |     |\n| disabledTime          | 不可选择的时间                                                            | function(date)                             | 无                                                  |     |\n| format                | 设置日期格式，为数组时支持多格式匹配，展示以第一个为准。配置参考 [moment.js](http://momentjs.com/) | string \\| string\\[]                        | \"YYYY-MM-DD\"                                       |     |\n| renderExtraFooter     | 在面板中添加额外的页脚                                                        | (mode) => React.ReactNode                  | -                                                  |     |\n| showTime              | 增加时间选择功能                                                           | Object\\|boolean                            | [TimePicker Options](/components/time-picker/#API) |     |\n| showTime.defaultValue | 设置用户选择日期时默认的时分秒，[例子](#components-date-picker-demo-disabled-date)   | [moment](http://momentjs.com/)             | moment()                                           |     |\n| showToday             | 是否展示“今天”按钮                                                         | boolean                                    | true                                               |     |\n| value                 | 日期                                                                 | [moment](http://momentjs.com/)             | 无                                                  |     |\n| onChange              | 时间发生变化的回调                                                          | function(date: moment, dateString: string) | 无                                                  |     |\n| onOk                  | 点击确定按钮的回调                                                          | function()                                 | -                                                  |     |\n| onPanelChange         | 日期面板变化时的回调                                                         | function(value, mode)                      | -                                                  |     |"
    ],
    "Form": [
      "| 参数                 | 说明                                                                                                   | 类型                                                                                                  | 默认值          |\n| ------------------ | ---------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- | ------------ |\n| component          | 设置 Form 渲染元素，为 `false` 则不创建 DOM 节点                                                                   | ComponentType \\| false                                                                              | form         |\n| colon              | 配置 Form.Item 的 `colon` 的默认值。表示是否显示 label 后面的冒号 (只有在属性 layout 为 horizontal 时有效)                       | boolean                                                                                             | true         |\n| fields             | 通过状态管理（如 redux）控制表单字段，如非强需求不推荐使用。查看[示例](#components-form-demo-global-state)                          | [FieldData](#FieldData)\\[]                                                                          | -            |\n| form               | 经 `Form.useForm()` 创建的 form 控制实例，不提供时会自动创建                                                           | [FormInstance](#FormInstance)                                                                       | -            |\n| hideRequiredMark   | 隐藏所有表单项的必选标记                                                                                         | boolean                                                                                             | false        |\n| initialValues      | 表单默认值，只有初始化以及重置时生效                                                                                   | object                                                                                              | -            |\n| labelAlign         | label 标签的文本对齐方式                                                                                      | `left` \\| `right`                                                                                   | `right`      |\n| labelCol           | label 标签布局，同 `<Col>` 组件，设置 `span` `offset` 值，如 `{span: 3, offset: 12}` 或 `sm: {span: 3, offset: 12}` | [object](https://ant.design/components/grid/#Col)                                                   | -            |\n| layout             | 表单布局                                                                                                 | `horizontal` \\| `vertical` \\| `inline`                                                              | `horizontal` |\n| name               | 表单名称，会作为表单字段 `id` 前缀使用                                                                               | string                                                                                              | -            |\n| scrollToFirstError | 提交失败自动滚动到第一个错误字段                                                                                     | false                                                                                               | -            |\n| size               | 设置字段组件的尺寸（仅限 antd 组件）                                                                                | `small` \\| `middle` \\| `large`                                                                      | -            |\n| validateMessages   | 验证提示模板，说明[见下](#validateMessages)                                                                     | [ValidateMessages](https://github.com/react-component/field-form/blob/master/src/utils/messages.ts) | -            |\n| wrapperCol         | 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol                                                                    | [object](https://ant.design/components/grid/#Col)                                                   | -            |\n| onFinish           | 提交表单且数据验证成功后回调事件                                                                                     | Function(values)                                                                                    | -            |\n| onFinishFailed     | 提交表单且数据验证失败后回调事件                                                                                     | Function({ values, errorFields, outOfDate })                                                        | -            |\n| onFieldsChange     | 字段更新时触发回调事件                                                                                          | Function(changedFields, allFields)                                                                  | -            |\n| onValuesChange     | 字段值更新时触发回调事件                                                                                         | Function(changedValues, allValues)                                                                  | -            |"
    ],
    "Form.Item": [
      "| 参数                | 说明                                                                                                                                                            | 类型                                          | 默认值      | 版本  |\n| ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | -------- | --- |\n| colon             | 配合 `label` 属性使用，表示是否显示 `label` 后面的冒号                                                                                                                          | boolean                                     | true     |     |\n| dependencies      | 设置依赖字段，说明[见下](#dependencies)                                                                                                                                  | [NamePath](#NamePath)\\[]                    | -        |     |\n| extra             | 额外的提示信息，和 `help` 类似，当需要错误信息和提示文案同时出现时，可以使用这个。                                                                                                                 | string\\|ReactNode                           | -        |     |\n| getValueFromEvent | 设置如何将 event 的值转换成字段值                                                                                                                                          | (..args: any\\[]) => any                     | -        |     |\n| hasFeedback       | 配合 `validateStatus` 属性使用，展示校验状态图标，建议只配合 Input 组件使用                                                                                                            | boolean                                     | false    |     |\n| help              | 提示信息，如不设置，则会根据校验规则自动生成                                                                                                                                        | string\\|ReactNode                           | -        |     |\n| htmlFor           | 设置子元素 label `htmlFor` 属性                                                                                                                                      | string                                      | -        |     |\n| noStyle           | 为 `true` 时不带样式，作为纯字段控件使用                                                                                                                                      | boolean                                     | false    |     |\n| label             | `label` 标签的文本                                                                                                                                                 | string\\|ReactNode                           | -        |     |\n| labelAlign        | 标签文本对齐方式                                                                                                                                                      | `left` \\| `right`                           | `right`  |     |\n| labelCol          | `label` 标签布局，同 `<Col>` 组件，设置 `span` `offset` 值，如 `{span: 3, offset: 12}` 或 `sm: {span: 3, offset: 12}`。你可以通过 Form 的 `labelCol` 进行统一设置。当和 Form 同时设置时，以 Item 为准 | [object](/components/grid/#Col)             | -        |     |\n| name              | 字段名，支持数组                                                                                                                                                      | [NamePath](#NamePath)                       | -        |     |\n| normalize         | 组件获取值后进行转换，再放入 Form 中                                                                                                                                         | (value, prevValue, prevValues) => any       | -        |     |\n| required          | 是否必填，如不设置，则会根据校验规则自动生成                                                                                                                                        | boolean                                     | false    |     |\n| rules             | 校验规则，设置字段的校验逻辑。点击[此处](#components-form-demo-basic)查看示例                                                                                                        | [Rule](#Rule)\\[]                            | -        |     |\n| shouldUpdate      | 自定义字段更新逻辑，说明[见下](#shouldUpdate)                                                                                                                               | boolean \\| (prevValue, curValue) => boolean | false    |     |\n| trigger           | 设置收集字段值变更的时机                                                                                                                                                  | string                                      | onChange |     |\n| validateFirst     | 当某一规则校验不通过时，是否停止剩下的规则的校验                                                                                                                                      | boolean                                     | false    |     |\n| validateStatus    | 校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'                                                                                            | string                                      | -        |     |\n| validateTrigger   | 设置字段校验的时机                                                                                                                                                     | string \\| string\\[]                         | onChange |     |\n| valuePropName     | 子节点的值的属性，如 Switch 的是 'checked'                                                                                                                                | string                                      | 'value'  |     |\n| wrapperCol        | 需要为输入控件设置布局样式时，使用该属性，用法同 `labelCol`。你可以通过 Form 的 `wrapperCol` 进行统一设置。当和 Form 同时设置时，以 Item 为准。                                                                 | [object](/components/grid/#Col)             | -        |     |"
    ],
    "Table": [
      "| 参数                | 说明                                                                                                             | 类型                                                                                                                                                | 默认值                                                                                                                                                      |\n| ----------------- | -------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| tableLayout       | 表格元素的 [table-layout](https://developer.mozilla.org/zh-CN/docs/Web/CSS/table-layout) 属性，设为 `fixed` 表示内容不会影响列的布局 | - \\| `auto` \\| `fixed`                                                                                                                            | 无<hr />固定表头/列或使用了 `column.ellipsis` 时，默认值为 `fixed`                                                                                                       |\n| bordered          | 是否展示外边框和列边框                                                                                                    | boolean                                                                                                                                           | false                                                                                                                                                    |\n| columns           | 表格列的配置描述，具体项见下表                                                                                                | [ColumnProps](#Column)\\[]                                                                                                                         | -                                                                                                                                                        |\n| components        | 覆盖默认的 table 元素                                                                                                 | [TableComponents](https://git.io/fANxz)                                                                                                           | -                                                                                                                                                        |\n| dataSource        | 数据数组                                                                                                           | any\\[]                                                                                                                                            | -                                                                                                                                                        |\n| expandable        | 配置展开属性                                                                                                         | [expandable](#expandable)                                                                                                                         | -                                                                                                                                                        |\n| footer            | 表格尾部                                                                                                           | Function(currentPageData)                                                                                                                         | -                                                                                                                                                        |\n| loading           | 页面是否加载中                                                                                                        | boolean\\|[object](https://ant.design/components/spin-cn/#API) ([更多](https://github.com/ant-design/ant-design/issues/4544#issuecomment-271533135)) | false                                                                                                                                                    |\n| locale            | 默认文案设置，目前包括排序、过滤、空数据文案                                                                                         | object                                                                                                                                            | filterConfirm: '确定' <br> filterReset: '重置' <br> emptyText: '暂无数据' <br> [默认值](https://github.com/ant-design/ant-design/issues/575#issuecomment-159169511) |\n| pagination        | 分页器，参考[配置项](#pagination)或 [pagination](/components/pagination/) 文档，设为 false 时不展示和进行分页                          | object                                                                                                                                            | -                                                                                                                                                        |\n| rowClassName      | 表格行的类名                                                                                                         | Function(record, index):string                                                                                                                    | -                                                                                                                                                        |\n| rowKey            | 表格行 key 的取值，可以是字符串或一个函数                                                                                        | string\\|Function(record):string                                                                                                                   | 'key'                                                                                                                                                    |\n| rowSelection      | 表格行是否可选择，[配置项](#rowSelection)                                                                                  | object                                                                                                                                            | -                                                                                                                                                        |\n| scroll            | 表格是否可滚动，也可以指定滚动区域的宽、高，[配置项](#scroll)                                                                           | object                                                                                                                                            | -                                                                                                                                                        |\n| showHeader        | 是否显示表头                                                                                                         | boolean                                                                                                                                           | true                                                                                                                                                     |\n| size              | 表格大小                                                                                                           | `default` \\| `middle` \\| `small`                                                                                                                  | default                                                                                                                                                  |\n| summary           | 总结栏                                                                                                            | (currentData) => ReactNode                                                                                                                        | -                                                                                                                                                        |\n| title             | 表格标题                                                                                                           | Function(currentPageData)                                                                                                                         | -                                                                                                                                                        |\n| onChange          | 分页、排序、筛选变化时触发                                                                                                  | Function(pagination, filters, sorter, extra: { currentDataSource: \\[] })                                                                          | -                                                                                                                                                        |\n| onHeaderRow       | 设置头部行属性                                                                                                        | Function(column, index)                                                                                                                           | -                                                                                                                                                        |\n| onRow             | 设置行属性                                                                                                          | Function(record, index)                                                                                                                           | -                                                                                                                                                        |\n| getPopupContainer | 设置表格内各类浮层的渲染节点，如筛选菜单                                                                                           | (triggerNode) => HTMLElement                                                                                                                      | `() => TableHtmlElement`                                                                                                                                 |\n| sortDirections    | 支持的排序方式，取值为 `'ascend'` `'descend'`                                                                             | Array                                                                                                                                             | `['ascend', 'descend']`                                                                                                                                  |\n| showSorterTooltip | 表头是否显示下一次排序的 tooltip 提示                                                                                        | boolean                                                                                                                                           | `true`                                                                                                                                                   |"
    ],
    "Table.Column": [
      "| 参数                            | 说明                                                                                                                                                              | 类型                                                                                         | 默认值                     |\n| ----------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | ----------------------- |\n| align                         | 设置列的对齐方式                                                                                                                                                        | `left` \\| `right` \\| `center`                                                              | `left`                  |\n| ellipsis                      | 超过宽度将自动省略，暂不支持和排序筛选一起使用。<br />设置为 `true` 时，表格布局将变成 `tableLayout=\"fixed\"`。                                                                                       | boolean                                                                                    | false                   |\n| className                     | 列样式类名                                                                                                                                                           | string                                                                                     | -                       |\n| colSpan                       | 表头列合并,设置为 0 时，不渲染                                                                                                                                               | number                                                                                     | -                       |\n| dataIndex                     | 列数据在数据项中对应的路径，支持通过数组查询嵌套路径                                                                                                                                      | string \\| string\\[]                                                                        | -                       |\n| defaultFilteredValue          | 默认筛选值                                                                                                                                                           | string\\[]                                                                                  | -                       |\n| defaultSortOrder              | 默认排序顺序                                                                                                                                                          | `ascend` \\| `descend`                                                                      | -                       |\n| filterDropdown                | 可以自定义筛选菜单，此函数只负责渲染图层，需要自行编写各种交互                                                                                                                                 | React.ReactNode \\| (props: [FilterDropdownProps](https://git.io/fjP5h)) => React.ReactNode | -                       |\n| filterDropdownVisible         | 用于控制自定义筛选菜单是否可见                                                                                                                                                 | boolean                                                                                    | -                       |\n| filtered                      | 标识数据是否经过过滤，筛选图标会高亮                                                                                                                                              | boolean                                                                                    | false                   |\n| filteredValue                 | 筛选的受控属性，外界可用此控制列的筛选状态，值为已筛选的 value 数组                                                                                                                           | string\\[]                                                                                  | -                       |\n| filterIcon                    | 自定义 filter 图标。                                                                                                                                                  | ReactNode\\|(filtered: boolean) => ReactNode                                                | false                   |\n| filterMultiple                | 是否多选                                                                                                                                                            | boolean                                                                                    | true                    |\n| filters                       | 表头的筛选菜单项                                                                                                                                                        | object\\[]                                                                                  | -                       |\n| fixed                         | （IE 下无效）列是否固定，可选 `true`(等效于 left) `'left'` `'right'`                                                                                                            | boolean\\|string                                                                            | false                   |\n| key                           | React 需要的 key，如果已经设置了唯一的 `dataIndex`，可以忽略这个属性                                                                                                                   | string                                                                                     | -                       |\n| render                        | 生成复杂数据的渲染函数，参数分别为当前行的值，当前行数据，行索引，@return 里面可以设置表格[行/列合并](#components-table-demo-colspan-rowspan)                                                                | Function(text, record, index) {}                                                           | -                       |\n| sorter                        | 排序函数，本地排序使用一个函数(参考 [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) 的 compareFunction)，需要服务端排序可设为 true | Function\\|boolean                                                                          | -                       |\n| sortOrder                     | 排序的受控属性，外界可用此控制列的排序，可设置为 `'ascend'` `'descend'` `false`                                                                                                         | boolean\\|string                                                                            | -                       |\n| sortDirections                | 支持的排序方式，覆盖`Table`中`sortDirections`， 取值为 `'ascend'` `'descend'`                                                                                                  | Array                                                                                      | `['ascend', 'descend']` |\n| title                         | 列头显示文字（函数用法 `3.10.0` 后支持）                                                                                                                                       | ReactNode\\|({ sortOrder, sortColumn, filters }) => ReactNode                               | -                       |\n| width                         | 列宽度（[指定了也不生效？](https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241)）                                                                   | string\\|number                                                                             | -                       |\n| onCell                        | 设置单元格属性                                                                                                                                                         | Function(record, rowIndex)                                                                 | -                       |\n| onFilter                      | 本地模式下，确定筛选的运行函数                                                                                                                                                 | Function                                                                                   | -                       |\n| onFilterDropdownVisibleChange | 自定义筛选菜单可见变化时调用                                                                                                                                                  | function(visible) {}                                                                       | -                       |\n| onHeaderCell                  | 设置头部单元格属性                                                                                                                                                       | Function(column)                                                                           | -                       |\n| showSorterTooltip             | 表头显示下一次排序的 tooltip 提示, 覆盖 table 中`showSorterTooltip`                                                                                                            | boolean                                                                                    | `true`                  |"
    ],
    "Table.ColumnGroup": [
      "| 参数    | 说明     | 类型                | 默认值 |\n| ----- | ------ | ----------------- | --- |\n| title | 列头显示文字 | string\\|ReactNode | -   |"
    ]
  },
  "en": {
    "Anchor": [
      "| Property         | Description                                                                                   | Type                                | Default      | Version |\n| ---------------- | --------------------------------------------------------------------------------------------- | ----------------------------------- | ------------ | ------- |\n| affix            | Fixed mode of Anchor                                                                          | boolean                             | true         |         |\n| bounds           | Bounding distance of anchor area                                                              | number                              | 5(px)        |         |\n| getContainer     | Scrolling container                                                                           | () => HTMLElement                   | () => window |         |\n| offsetBottom     | Pixels to offset from bottom when calculating position of scroll                              | number                              | -            |         |\n| offsetTop        | Pixels to offset from top when calculating position of scroll                                 | number                              | 0            |         |\n| showInkInFixed   | Whether show ink-balls in Fixed mode                                                          | boolean                             | false        |         |\n| onClick          | set the handler to handle `click` event                                                       | Function(e: Event, link: Object)    | -            |         |\n| getCurrentAnchor | Customize the anchor highlight                                                                | () => string                        | -            |         |\n| targetOffset     | Anchor scroll offset, default as `offsetTop`, [example](#components-anchor-demo-targetOffset) | number                              | `offsetTop`  |         |\n| onChange         | Listening for anchor link change                                                              | (currentActiveLink: string) => void |              |         |"
    ],
    "Anchor.Link": [
      "| Property | Description                               | Type              | Default | Version |\n| -------- | ----------------------------------------- | ----------------- | ------- | ------- |\n| href     | target of hyperlink                       | string            |         |         |\n| title    | content of hyperlink                      | string\\|ReactNode |         |         |\n| target   | Specifies where to display the linked URL | string            |         |         |"
    ],
    "Affix": [
      "| Property     | Description                                        | Type              | Default      |\n| ------------ | -------------------------------------------------- | ----------------- | ------------ |\n| offsetBottom | Offset from the bottom of the viewport (in pixels) | number            | -            |\n| offsetTop    | Offset from the top of the viewport (in pixels)    | number            | 0            |\n| target       | Specifies the scrollable area DOM node             | () => HTMLElement | () => window |\n| onChange     | Callback for when Affix state is changed           | Function(affixed) | -            |"
    ],
    "Alert": [
      "| Property    | Description                                                          | Type                    | Default                                       |\n| ----------- | -------------------------------------------------------------------- | ----------------------- | --------------------------------------------- |\n| afterClose  | Called when close animation is finished                              | () => void              | -                                             |\n| banner      | Whether to show as banner                                            | boolean                 | false                                         |\n| closable    | Whether Alert can be closed                                          | boolean                 | -                                             |\n| closeText   | Close text to show                                                   | string\\|ReactNode       | -                                             |\n| description | Additional content of Alert                                          | string\\|ReactNode       | -                                             |\n| icon        | Custom icon, effective when `showIcon` is `true`                     | ReactNode               | -                                             |\n| message     | Content of Alert                                                     | string\\|ReactNode       | -                                             |\n| showIcon    | Whether to show icon                                                 | boolean                 | false, in `banner` mode default is true       |\n| type        | Type of Alert styles, options: `success`, `info`, `warning`, `error` | string                  | `info`, in `banner` mode default is `warning` |\n| onClose     | Callback when Alert is closed                                        | (e: MouseEvent) => void | -                                             |"
    ],
    "Badge": [
      "| Property      | Description                                                          | Type                                                           | Default | Version |\n| ------------- | -------------------------------------------------------------------- | -------------------------------------------------------------- | ------- | ------- |\n| color         | Customize Badge dot color                                            | string                                                         | -       |         |\n| count         | Number to show in badge                                              | ReactNode                                                      |         |         |\n| dot           | Whether to display a red dot instead of `count`                      | boolean                                                        | `false` |         |\n| offset        | set offset of the badge dot, like`[x, y]`                            | `[number, number]`                                             | -       |         |\n| overflowCount | Max count to show                                                    | number                                                         | 99      |         |\n| showZero      | Whether to show badge when `count` is zero                           | boolean                                                        | `false` |         |\n| status        | Set Badge as a status dot                                            | `success` \\| `processing` \\| `default` \\| `error` \\| `warning` | `''`    |         |\n| text          | If `status` is set, `text` sets the display text of the status `dot` | string                                                         | `''`    |         |\n| title         | Text to show when hovering over the badge                            | string                                                         | `count` |         |"
    ],
    "Avatar": [
      "| Property | Description                                                                    | Type                                      | Default   | Version |\n| -------- | ------------------------------------------------------------------------------ | ----------------------------------------- | --------- | ------- |\n| icon     | custom icon type for an icon avatar                                            | ReactNode                                 | -         |         |\n| shape    | the shape of avatar                                                            | `circle` \\| `square`                      | `circle`  |         |\n| size     | the size of the avatar                                                         | number \\| `large` \\| `small` \\| `default` | `default` |         |\n| src      | the address of the image for an image avatar                                   | string                                    | -         |         |\n| srcSet   | a list of sources to use for different screen resolutions                      | string                                    | -         |         |\n| alt      | This attribute defines the alternative text describing the image               | string                                    | -         |         |\n| onError  | handler when img load error, return false to prevent default fallback behavior | () => boolean                             | -         |         |"
    ],
    "AutoComplete": [
      "| Property                               | Description                                                                                                                                                                                                                                                    | Type                                                                                            | Default     | Version |\n| -------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- | ----------- | ------- |\n| allowClear                             | Show clear button, effective in multiple mode only.                                                                                                                                                                                                            | boolean                                                                                         | false       |         |\n| autoFocus                              | get focus when component mounted                                                                                                                                                                                                                               | boolean                                                                                         | false       |         |\n| backfill                               | backfill selected item the input when using keyboard                                                                                                                                                                                                           | boolean                                                                                         | false       |         |\n| children (for customize input element) | customize input element                                                                                                                                                                                                                                        | HTMLInputElement <br /><br /> HTMLTextAreaElement <br /><br /> `React.ReactElement<InputProps>` | `<Input />` |         |\n| children (for dataSource)              | Data source to auto complete                                                                                                                                                                                                                                   | `React.ReactElement<OptionProps>` <br /><br /> `Array<React.ReactElement<OptionProps>>`         | -           |         |\n| defaultActiveFirstOption               | Whether active first option by default                                                                                                                                                                                                                         | boolean                                                                                         | true        |         |\n| defaultValue                           | Initial selected option.                                                                                                                                                                                                                                       | string                                                                                          | -           |         |\n| disabled                               | Whether disabled select                                                                                                                                                                                                                                        | boolean                                                                                         | false       |         |\n| filterOption                           | If true, filter options by input, if function, filter options against it. The function will receive two arguments, `inputValue` and `option`, if the function returns `true`, the option will be included in the filtered set; Otherwise, it will be excluded. | boolean or function(inputValue, option)                                                         | true        |         |\n| placeholder                            | placeholder of input                                                                                                                                                                                                                                           | string                                                                                          | -           |         |\n| value                                  | selected option                                                                                                                                                                                                                                                | string                                                                                          | -           |         |\n| onBlur                                 | Called when leaving the component.                                                                                                                                                                                                                             | function()                                                                                      | -           |         |\n| onChange                               | Called when select an option or input value change, or value of input is changed                                                                                                                                                                               | function(value)                                                                                 | -           |         |\n| onFocus                                | Called when entering the component                                                                                                                                                                                                                             | function()                                                                                      | -           |         |\n| onSearch                               | Called when searching items.                                                                                                                                                                                                                                   | function(value)                                                                                 | -           |         |\n| onSelect                               | Called when a option is selected. param is option's value and option instance.                                                                                                                                                                                 | function(value, option)                                                                         | -           |         |\n| defaultOpen                            | Initial open state of dropdown                                                                                                                                                                                                                                 | boolean                                                                                         | -           |         |\n| open                                   | Controlled open state of dropdown                                                                                                                                                                                                                              | boolean                                                                                         | -           |         |\n| onDropdownVisibleChange                | Call when dropdown open                                                                                                                                                                                                                                        | function(open)                                                                                  | -           |         |"
    ],
    "BackTop": [
      "| Property         | Description                                                                   | Type              | Default      | Version |\n| ---------------- | ----------------------------------------------------------------------------- | ----------------- | ------------ | ------- |\n| target           | specifies the scrollable area dom node                                        | () => HTMLElement | () => window |         |\n| visibilityHeight | the `BackTop` button will not show until the scroll height reaches this value | number            | 400          |         |\n| onClick          | a callback function, which can be executed when you click the button          | Function          | -            |         |"
    ],
    "Breadcrumb.Item": [
      "| Property      | Description                             | Type                                   | Default | Version |\n| ------------- | --------------------------------------- | -------------------------------------- | ------- | ------- |\n| href          | Target of hyperlink                     | string                                 | -       |         |\n| overlay       | The dropdown menu                       | [Menu](/components/menu) \\| () => Menu | -       |         |\n| onClick       | Set the handler to handle `click` event | (e:MouseEvent)=>void                   | -       |         |\n| dropdownProps | The dropdown props                      | [Dropdown](/components/dropdown)       | -       |         |"
    ],
    "Breadcrumb": [
      "| Property   | Description                             | Type                                        | Default | Version |\n| ---------- | --------------------------------------- | ------------------------------------------- | ------- | ------- |\n| itemRender | Custom item renderer                    | (route, params, routes, paths) => ReactNode | -       |         |\n| params     | Routing parameters                      | object                                      | -       |         |\n| routes     | The routing stack information of router | [routes\\[\\]](#routes)                       | -       |         |\n| separator  | Custom separator                        | string\\|ReactNode                           | '/'     |         |"
    ],
    "Breadcrumb.Separator": [
      "| Property | Description      | Type              | Default | Version |\n| -------- | ---------------- | ----------------- | ------- | ------- |\n| children | Custom separator | string\\|ReactNode | '/'     |         |"
    ],
    "Button": [
      "| Property | Description                                                                                                                      | Type                           | Default   | Version |\n| -------- | -------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | --------- | ------- |\n| disabled | disabled state of button                                                                                                         | boolean                        | `false`   |         |\n| ghost    | make background transparent and invert text and border colors                                                                    | boolean                        | `false`   |         |\n| href     | redirect url of link button                                                                                                      | string                         | -         |         |\n| htmlType | set the original html `type` of `button`, see: [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type) | string                         | `button`  |         |\n| icon     | set the icon component of button                                                                                                 | ReactNode                      | -         |         |\n| loading  | set the loading status of button                                                                                                 | boolean \\| { delay: number }   | `false`   |         |\n| shape    | can be set to `circle`, `round` or omitted                                                                                       | string                         | -         |         |\n| size     | set the size of button                                                                                                           | `large` \\| `middle` \\| `small` |           |         |\n| target   | same as target attribute of a, works when href is specified                                                                      | string                         | -         |         |\n| type     | can be set to `primary` `ghost` `dashed` `link` or omitted (meaning `default`)                                                   | string                         | `default` |         |\n| onClick  | set the handler to handle `click` event                                                                                          | (event) => void                | -         |         |\n| block    | option to fit button width to its parent width                                                                                   | boolean                        | `false`   |         |\n| danger   | set the danger status of button                                                                                                  | boolean                        | `false`   |         |"
    ],
    "Card.Meta": [
      "| Property    | Description               | Type      | Default | Version |\n| ----------- | ------------------------- | --------- | ------- | ------- |\n| avatar      | avatar or icon            | ReactNode | -       |         |\n| className   | className of container    | string    | -       |         |\n| description | description content       | ReactNode | -       |         |\n| style       | style object of container | object    | -       |         |\n| title       | title content             | ReactNode | -       |         |"
    ],
    "Calendar": [
      "| Property            | Description                                                                                | Type                                                                             | Default                                                                                                    | Version |\n| ------------------- | ------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------- | ------- |\n| dateCellRender      | Customize the display of the date cell, the returned content will be appended to the cell  | function(date: moment): ReactNode                                                | -                                                                                                          |         |\n| dateFullCellRender  | Customize the display of the date cell, the returned content will override the cell        | function(date: moment): ReactNode                                                | -                                                                                                          |         |\n| defaultValue        | The date selected by default                                                               | [moment](http://momentjs.com/)                                                   | default date                                                                                               |         |\n| disabledDate        | Function that specifies the dates that cannot be selected                                  | (currentDate: moment) => boolean                                                 | -                                                                                                          |         |\n| fullscreen          | Whether to display in full-screen                                                          | boolean                                                                          | `true`                                                                                                     |         |\n| locale              | The calendar's locale                                                                      | object                                                                           | [default](https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json) |         |\n| mode                | The display mode of the calendar                                                           | `month` \\| `year`                                                                | `month`                                                                                                    |         |\n| monthCellRender     | Customize the display of the month cell, the returned content will be appended to the cell | function(date: moment): ReactNode                                                | -                                                                                                          |         |\n| monthFullCellRender | Customize the display of the month cell, the returned content will override the cell       | function(date: moment): ReactNode                                                | -                                                                                                          |         |\n| validRange          | to set valid range                                                                         | \\[[moment](http://momentjs.com/), [moment](http://momentjs.com/)]                | -                                                                                                          |         |\n| value               | The current selected date                                                                  | [moment](http://momentjs.com/)                                                   | current date                                                                                               |         |\n| onPanelChange       | Callback for when panel changes                                                            | function(date: moment, mode: string)                                             | -                                                                                                          |         |\n| onSelect            | Callback for when a date is selected                                                       | function(date: moment）                                                           | -                                                                                                          |         |\n| onChange            | Callback for when date changes                                                             | function(date: moment）                                                           | -                                                                                                          |         |\n| headerRender        | render custom header in panel                                                              | function(object:{value: moment, type: string, onChange: f(), onTypeChange: f()}) | -                                                                                                          |         |"
    ],
    "Card": [
      "| Property            | Description                                                                | Type                                    | Default   | Version |\n| ------------------- | -------------------------------------------------------------------------- | --------------------------------------- | --------- | ------- |\n| actions             | The action list, shows at the bottom of the Card.                          | Array&lt;ReactNode>                     | -         |         |\n| activeTabKey        | Current TabPane's key                                                      | string                                  | -         |         |\n| headStyle           | Inline style to apply to the card head                                     | object                                  | -         |         |\n| bodyStyle           | Inline style to apply to the card content                                  | object                                  | -         |         |\n| bordered            | Toggles rendering of the border around the card                            | boolean                                 | `true`    |         |\n| cover               | Card cover                                                                 | ReactNode                               | -         |         |\n| defaultActiveTabKey | Initial active TabPane's key, if `activeTabKey` is not set.                | string                                  | -         |         |\n| extra               | Content to render in the top-right corner of the card                      | string\\|ReactNode                       | -         |         |\n| hoverable           | Lift up when hovering card                                                 | boolean                                 | false     |         |\n| loading             | Shows a loading indicator while the contents of the card are being fetched | boolean                                 | false     |         |\n| tabList             | List of TabPane's head.                                                    | Array&lt;{key: string, tab: ReactNode}> | -         |         |\n| tabBarExtraContent  | Extra content in tab bar                                                   | React.ReactNode                         | -         |         |\n| size                | Size of card                                                               | `default` \\| `small`                    | `default` |         |\n| title               | Card title                                                                 | string\\|ReactNode                       | -         |         |\n| type                | Card style type, can be set to `inner` or not set                          | string                                  | -         |         |\n| onTabChange         | Callback when tab is switched                                              | (key) => void                           | -         |         |\n| tabProps            | [Tabs](https://ant.design/components/tabs/#Tabs)                           | -                                       | -         |         |"
    ],
    "Card.Grid": [
      "| Property  | Description                     | Type    | Default | Version |\n| --------- | ------------------------------- | ------- | ------- | ------- |\n| className | className of container          | string  | -       |         |\n| hoverable | Lift up when hovering card grid | boolean | true    |         |\n| style     | style object of container       | object  | -       |         |"
    ],
    "Checkbox": [
      "| Property       | Description                                                           | Type              | Default | Version |\n| -------------- | --------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| autoFocus      | get focus when component mounted                                      | boolean           | false   |         |\n| checked        | Specifies whether the checkbox is selected.                           | boolean           | false   |         |\n| defaultChecked | Specifies the initial state: whether or not the checkbox is selected. | boolean           | false   |         |\n| disabled       | Disable checkbox                                                      | boolean           | false   |         |\n| indeterminate  | indeterminate checked state of checkbox                               | boolean           | false   |         |\n| onChange       | The callback function that is triggered when the state changes.       | Function(e:Event) | -       |         |"
    ],
    "Cascader": [
      "| Property             | Description                                                                                                                                                                                                                          | Type                                    | Default                                                    | Version |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------- | ---------------------------------------------------------- | ------- |\n| allowClear           | whether allow clear                                                                                                                                                                                                                  | boolean                                 | true                                                       |         |\n| autoFocus            | get focus when component mounted                                                                                                                                                                                                     | boolean                                 | false                                                      |         |\n| bordered             | whether has border style                                                                                                                                                                                                             | boolean                                 | true                                                       |         |\n| changeOnSelect       | change value on each selection if set to true, see above demo for details                                                                                                                                                            | boolean                                 | false                                                      |         |\n| className            | additional css class                                                                                                                                                                                                                 | string                                  | -                                                          |         |\n| defaultValue         | initial selected value                                                                                                                                                                                                               | string\\[]                               | \\[]                                                        |         |\n| disabled             | whether disabled select                                                                                                                                                                                                              | boolean                                 | false                                                      |         |\n| displayRender        | render function of displaying selected options                                                                                                                                                                                       | `(label, selectedOptions) => ReactNode` | `label => label.join(' / ')`                               |         |\n| expandTrigger        | expand current item when click or hover, one of 'click' 'hover'                                                                                                                                                                      | string                                  | 'click'                                                    |         |\n| fieldNames           | custom field name for label and value and children                                                                                                                                                                                   | object                                  | `{ label: 'label', value: 'value', children: 'children' }` |         |\n| getPopupContainer    | Parent Node which the selector should be rendered to. Default to `body`. When position issues happen, try to modify it into scrollable content and position it relative.[example](https://codepen.io/afc163/pen/zEjNOy?editors=0010) | Function(triggerNode)                   | () => document.body                                        |         |\n| loadData             | To load option lazily, and it cannot work with `showSearch`                                                                                                                                                                          | `(selectedOptions) => void`             | -                                                          |         |\n| notFoundContent      | Specify content to show when no result matches.                                                                                                                                                                                      | string                                  | 'Not Found'                                                |         |\n| options              | data options of cascade                                                                                                                                                                                                              | [Option](#Option)\\[]                    | -                                                          |         |\n| placeholder          | input placeholder                                                                                                                                                                                                                    | string                                  | 'Please select'                                            |         |\n| popupClassName       | additional className of popup overlay                                                                                                                                                                                                | string                                  | -                                                          |         |\n| popupPlacement       | use preset popup align config from builtinPlacements：`bottomLeft` `bottomRight` `topLeft` `topRight`                                                                                                                                 | string                                  | `bottomLeft`                                               |         |\n| popupVisible         | set visible of cascader popup                                                                                                                                                                                                        | boolean                                 | -                                                          |         |\n| showSearch           | Whether show search input in single mode.                                                                                                                                                                                            | boolean\\|object                         | false                                                      |         |\n| size                 | input size                                                                                                                                                                                                                           | `large` \\| `middle` \\| `small`          |                                                            |         |\n| style                | additional style                                                                                                                                                                                                                     | string                                  | -                                                          |         |\n| suffixIcon           | The custom suffix icon                                                                                                                                                                                                               | ReactNode                               | -                                                          |         |\n| value                | selected value                                                                                                                                                                                                                       | string\\[]                               | -                                                          |         |\n| onChange             | callback when finishing cascader select                                                                                                                                                                                              | `(value, selectedOptions) => void`      | -                                                          |         |\n| onPopupVisibleChange | callback when popup shown or hidden                                                                                                                                                                                                  | `(value) => void`                       | -                                                          |         |"
    ],
    "Carousel": [
      "| Property     | Description                                                                                    | Type                             | Default   | Version |\n| ------------ | ---------------------------------------------------------------------------------------------- | -------------------------------- | --------- | ------- |\n| afterChange  | Callback function called after the current index changes                                       | function(current)                | -         |         |\n| autoplay     | Whether to scroll automatically                                                                | boolean                          | `false`   |         |\n| beforeChange | Callback function called before the current index changes                                      | function(from, to)               | -         |         |\n| dotPosition  | The position of the dots, which can be one of `top` `bottom` `left` `right`                    | string                           | bottom    |         |\n| dots         | Whether to show the dots at the bottom of the gallery, `object` for `dotsClass` and any others | boolean \\| { className?:string } | `true`    |         |\n| easing       | Transition interpolation function name                                                         | string                           | `linear`  |         |\n| effect       | Transition effect                                                                              | `scrollx` \\| `fade`              | `scrollx` |         |"
    ],
    "Collapse.Panel": [
      "| Property    | Description                                                                         | Type              | Default | Version |\n| ----------- | ----------------------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| disabled    | If `true`, panel cannot be opened or closed                                         | boolean           | `false` |         |\n| forceRender | Forced render of content on panel, instead of lazy rending after clicking on header | boolean           | `false` |         |\n| header      | Title of the panel                                                                  | string\\|ReactNode | -       |         |\n| key         | Unique key identifying the panel from among its siblings                            | string\\|number    | -       |         |\n| showArrow   | If `false`, panel will not show arrow icon                                          | boolean           | `true`  |         |\n| extra       | extra element in the corner                                                         | ReactNode         | -       |         |"
    ],
    "Checkbox.Group": [
      "| Property     | Description                                                     | Type                   | Default | Version |\n| ------------ | --------------------------------------------------------------- | ---------------------- | ------- | ------- |\n| defaultValue | Default selected value                                          | string\\[]              | \\[]     |         |\n| disabled     | Disable all checkboxes                                          | boolean                | false   |         |\n| name         | The `name` property of all `input[type=\"checkbox\"]` children    | string                 | -       |         |\n| options      | Specifies options                                               | string\\[]              | \\[]     |         |\n| value        | Used for setting the currently selected value.                  | string\\[]              | \\[]     |         |\n| onChange     | The callback function that is triggered when the state changes. | Function(checkedValue) | -       |         |"
    ],
    "Comment": [
      "| Property | Description                                                                      | Type              | Default | Version |\n| -------- | -------------------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| actions  | List of action items rendered below the comment content                          | Array<ReactNode>  | -       |         |\n| author   | The element to display as the comment author                                     | string\\|ReactNode | -       |         |\n| avatar   | The element to display as the comment avatar - generally an antd `Avatar` or src | string\\|ReactNode | -       |         |\n| children | Nested comments should be provided as children of the Comment                    | ReactNode         | -       |         |\n| content  | The main content of the comment                                                  | string\\|ReactNode | -       |         |\n| datetime | A datetime element containing the time to be displayed                           | string\\|ReactNode | -       |         |"
    ],
    "Collapse": [
      "| Property             | Description                                               | Type                                  | Default                                                                 | Version |\n| -------------------- | --------------------------------------------------------- | ------------------------------------- | ----------------------------------------------------------------------- | ------- |\n| activeKey            | Key of the active panel                                   | string\\[]\\|string\\| number\\[]\\|number | No default value. In `accordion` mode, it's the key of the first panel. |         |\n| defaultActiveKey     | Key of the initial active panel                           | string\\[]\\|string\\| number\\[]\\|number | -                                                                       |         |\n| bordered             | Toggles rendering of the border around the collapse block | boolean                               | `true`                                                                  |         |\n| accordion            | If `true`, `Collapse` renders as `Accordion`              | boolean                               | `false`                                                                 |         |\n| onChange             | Callback function executed when active panel is changed   | Function                              | -                                                                       |         |\n| expandIcon           | allow to customize collapse icon                          | (panelProps) => ReactNode             | -                                                                       |         |\n| expandIconPosition   | Set expand icon position                                  | `left` \\| `right`                     | -                                                                       |         |\n| destroyInactivePanel | Destroy Inactive Panel                                    | boolean                               | `false`                                                                 |         |"
    ],
    "Divider": [
      "| Property    | Description                      | Type                          | Default      | Version |\n| ----------- | -------------------------------- | ----------------------------- | ------------ | ------- |\n| className   | className of container           | string                        | -            |         |\n| dashed      | whether line is dashed           | boolean                       | false        |         |\n| orientation | position of title inside divider | `left` \\| `right` \\| `center` | `center`     |         |\n| style       | style object of container        | object                        | -            |         |\n| type        | direction type of divider        | `horizontal` \\| `vertical`    | `horizontal` |         |"
    ],
    "Descriptions.Item": [
      "| Property | Description                    | Type      | Default | Version |\n| -------- | ------------------------------ | --------- | ------- | ------- |\n| label    | description of the content     | ReactNode | -       |         |\n| span     | The number of columns included | number    | 1       |         |"
    ],
    "Drawer": [
      "| Props              | Description                                                                                    | Type                                                     | Default |\n| ------------------ | ---------------------------------------------------------------------------------------------- | -------------------------------------------------------- | ------- |\n| closable           | Whether a close (x) button is visible on top right of the Drawer dialog or not.                | boolean                                                  | true    |\n| destroyOnClose     | Whether to unmount child components on closing drawer or not.                                  | boolean                                                  | false   |\n| forceRender        | Prerender Drawer component forcely                                                             | boolean                                                  | false   |\n| getContainer       | Return the mounted node for Drawer.                                                            | HTMLElement \\| `() => HTMLElement` \\| Selectors \\| false | 'body'  |\n| mask               | Whether to show mask or not.                                                                   | Boolean                                                  | true    |\n| maskClosable       | Clicking on the mask (area outside the Drawer) to close the Drawer or not.                     | boolean                                                  | true    |\n| maskStyle          | Style for Drawer's mask element.                                                               | object                                                   | {}      |\n| style              | Style of wrapper element which **contains mask** compare to `drawerStyle`                      | object                                                   | -       |\n| drawerStyle        | Style of the popup layer element                                                               | object                                                   | -       |\n| headerStyle        | Style of the drawer header part                                                                | object                                                   | -       |\n| bodyStyle          | Style of the drawer content part                                                               | object                                                   | -       |\n| title              | The title for Drawer.                                                                          | string\\|ReactNode                                        | -       |\n| visible            | Whether the Drawer dialog is visible or not.                                                   | boolean                                                  | false   |\n| width              | Width of the Drawer dialog.                                                                    | string\\|number                                           | 256     |\n| height             | placement is `top` or `bottom`, height of the Drawer dialog.                                   | string\\|number                                           | 256     |\n| className          | The class name of the container of the Drawer dialog.                                          | string                                                   | -       |\n| zIndex             | The `z-index` of the Drawer.                                                                   | Number                                                   | 1000    |\n| placement          | The placement of the Drawer.                                                                   | `top` \\| `right` \\| `bottom` \\| `left`                   | `right` |\n| onClose            | Specify a callback that will be called when a user clicks mask, close button or Cancel button. | function(e)                                              | -       |\n| afterVisibleChange | Callback after the animation ends when switching drawers.                                      | function(visible)                                        | -       |\n| keyboard           | Whether support press esc to close                                                             | Boolean                                                  | true    |\n| footer             | The footer for Drawer.                                                                         | ReactNode                                                | -       |\n| footerStyle        | Style of the drawer footer part.                                                               | CSSProperties                                            | -       |"
    ],
    "Descriptions": [
      "| Property | Description                                                                                                                                         | Type                             | Default      | Version |\n| -------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------- | ------------ | ------- |\n| title    | The title of the description list, placed at the top                                                                                                | ReactNode                        | -            |         |\n| bordered | whether to display the border                                                                                                                       | boolean                          | false        |         |\n| column   | the number of `DescriptionItems` in a row,could be a number or a object like `{ xs: 8, sm: 16, md: 24}`,(Only set `bordered={true}` to take effect) | number                           | 3            |         |\n| size     | set the size of the list. Can be set to `middle`,`small`, or not filled                                                                             | `default` \\| `middle` \\| `small` | false        |         |\n| layout   | Define description layout                                                                                                                           | `horizontal` \\| `vertical`       | `horizontal` |         |\n| colon    | change default props `colon` value of `Descriptions.Item`                                                                                           | boolean                          | true         |         |"
    ],
    "Dropdown": [
      "| Property          | Description                                                                                                                                                                                                                                        | Type                                      | Default               | Version |\n| ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | --------------------- | ------- |\n| disabled          | Whether the dropdown menu is disabled                                                                                                                                                                                                              | boolean                                   | -                     |         |\n| getPopupContainer | To set the container of the dropdown menu. The default is to create a `div` element in `body`, but you can reset it to the scrolling area and make a relative reposition. [Example on CodePen](https://codepen.io/afc163/pen/zEjNOy?editors=0010). | Function(triggerNode)                     | `() => document.body` |         |\n| overlay           | The dropdown menu                                                                                                                                                                                                                                  | [Menu](/components/menu) \\| () => Menu    | -                     |         |\n| overlayClassName  | Class name of the dropdown root element                                                                                                                                                                                                            | string                                    | -                     |         |\n| overlayStyle      | Style of the dropdown root element                                                                                                                                                                                                                 | object                                    | -                     |         |\n| placement         | Placement of popup menu: `bottomLeft`, `bottomCenter`, `bottomRight`, `topLeft`, `topCenter` or `topRight`                                                                                                                                         | String                                    | `bottomLeft`          |         |\n| trigger           | The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens.                                                                                                                                                | Array&lt;`click`\\|`hover`\\|`contextMenu`> | `['hover']`           |         |\n| visible           | Whether the dropdown menu is currently visible                                                                                                                                                                                                     | boolean                                   | -                     |         |\n| onVisibleChange   | Called when the visible state is changed.                                                                                                                                                                                                          | Function(visible)                         | -                     |         |"
    ],
    "Empty": [
      "| Property    | Description                                                    | Type                | Default                         | Version |\n| ----------- | -------------------------------------------------------------- | ------------------- | ------------------------------- | ------- |\n| description | Customize description                                          | string \\| ReactNode | -                               |         |\n| imageStyle  | style of image                                                 | CSSProperties       | -                               |         |\n| image       | Customize image. Will tread as image url when string provided. | string \\| ReactNode | `Empty.PRESENTED_IMAGE_DEFAULT` |         |"
    ],
    "Dropdown.Button": [
      "| Property        | Description                                                                                         | Type                                      | Default      | Version |\n| --------------- | --------------------------------------------------------------------------------------------------- | ----------------------------------------- | ------------ | ------- |\n| disabled        | Whether the dropdown menu is disabled                                                               | boolean                                   | -            |         |\n| icon            | Icon (appears on the right)                                                                         | ReactNode                                 | -            |         |\n| overlay         | The dropdown menu                                                                                   | [Menu](/components/menu)                  | -            |         |\n| placement       | Placement of popup menu: `bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight` | String                                    | `bottomLeft` |         |\n| size            | Size of the button, the same as [Button](/components/button)                                        | string                                    | `default`    |         |\n| trigger         | The trigger mode which executes the dropdown action                                                 | Array&lt;`click`\\|`hover`\\|`contextMenu`> | `['hover']`  |         |\n| type            | Type of the button, the same as [Button](/components/button)                                        | string                                    | `default`    |         |\n| visible         | Whether the dropdown menu is currently visible                                                      | boolean                                   | -            |         |\n| onClick         | The same as [Button](/components/button): called when you click the button on the left              | Function                                  | -            |         |\n| onVisibleChange | Called when the visible state is changed                                                            | Function                                  | -            |         |\n| buttonsRender   | custom buttons inside Dropdown.Button                                                               | `([buttons: ReactNode[]]) => ReactNode`   | -            |         |"
    ],
    "Row": [
      "| Property | Description                                                                                                                                                                                       | Type                                                              | Default | Version |     |\n| -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- | ------- | ------- | --- |\n| align    | vertical alignment                                                                                                                                                                                | `top` \\| `middle` \\| `bottom`                                     | `top`   |         |     |\n| gutter   | spacing between grids, could be a number or a object like `{ xs: 8, sm: 16, md: 24}`. or you can use array to make horizontal and vertical spacing work at the same time `[horizontal, vertical]` | number/object/array                                               | 0       |         |     |\n| justify  | horizontal arrangement                                                                                                                                                                            | `start` \\| `end` \\| `center` \\| `space-around` \\| `space-between` | `start` |         |     |"
    ],
    "Icon": [
      "| Property     | Description                                                 | Type               | Default | Version |\n| ------------ | ----------------------------------------------------------- | ------------------ | ------- | ------- |\n| className    | className of Icon                                           | `string`           | -       |         |\n| style        | Style properties of icon, like `fontSize` and `color`       | CSSProperties      | -       |         |\n| spin         | Rotate icon with animation                                  | boolean            | false   |         |\n| rotate       | Rotate by n degrees (not working in IE9)                    | number             | -       |         |\n| twoToneColor | Only supports the two-tone icon. Specify the primary color. | string (hex color) | -       |         |"
    ],
    "Input.TextArea": [
      "| Property     | Description                                                        | Type                                             | Default         |       |\n| ------------ | ------------------------------------------------------------------ | ------------------------------------------------ | --------------- | ----- |\n| autoSize     | Height autosize feature, can be set to \\`true                      | false`or an object`{ minRows: 2, maxRows: 6 }\\`. | boolean\\|object | false |\n| defaultValue | The initial input content                                          | string                                           |                 |       |\n| value        | The input content value                                            | string                                           |                 |       |\n| onPressEnter | The callback function that is triggered when Enter key is pressed. | function(e)                                      |                 |       |\n| allowClear   | allow to remove input content with clear icon                      | boolean                                          |                 |       |\n| onResize     | The callback function that is triggered when resize                | function({ width, height })                      |                 |       |"
    ],
    "Col": [
      "| Property | Description                                                                                    | Type             | Default | Version |\n| -------- | ---------------------------------------------------------------------------------------------- | ---------------- | ------- | ------- |\n| flex     | flex layout style                                                                              | string \\| number | -       |         |\n| offset   | the number of cells to offset Col from the left                                                | number           | 0       |         |\n| order    | raster order                                                                                   | number           | 0       |         |\n| pull     | the number of cells that raster is moved to the left                                           | number           | 0       |         |\n| push     | the number of cells that raster is moved to the right                                          | number           | 0       |         |\n| span     | raster number of cells to occupy, 0 corresponds to `display: none`                             | number           | none    |         |\n| xs       | `<576px` and also default setting, could be a `span` value or an object containing above props | number\\|object   | -       |         |\n| sm       | `≥576px`, could be a `span` value or an object containing above props                          | number\\|object   | -       |         |\n| md       | `≥768px`, could be a `span` value or an object containing above props                          | number\\|object   | -       |         |\n| lg       | `≥992px`, could be a `span` value or an object containing above props                          | number\\|object   | -       |         |\n| xl       | `≥1200px`, could be a `span` value or an object containing above props                         | number\\|object   | -       |         |\n| xxl      | `≥1600px`, could be a `span` value or an object containing above props                         | number\\|object   | -       |         |"
    ],
    "Input": [
      "| Property     | Description                                                                                                                                                        | Type                           | Default |\n| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------ | ------- |\n| addonAfter   | The label text displayed after (on the right side of) the input field.                                                                                             | string\\|ReactNode              |         |\n| addonBefore  | The label text displayed before (on the left side of) the input field.                                                                                             | string\\|ReactNode              |         |\n| defaultValue | The initial input content                                                                                                                                          | string                         |         |\n| disabled     | Whether the input is disabled.                                                                                                                                     | boolean                        | false   |\n| id           | The ID for input                                                                                                                                                   | string                         |         |\n| maxLength    | max length                                                                                                                                                         | number                         |         |\n| prefix       | The prefix icon for the Input.                                                                                                                                     | string\\|ReactNode              |         |\n| size         | The size of the input box. Note: in the context of a form, the `large` size is used.                                                                               | `large` \\| `middle` \\| `small` |         |\n| suffix       | The suffix icon for the Input.                                                                                                                                     | string\\|ReactNode              |         |\n| type         | The type of input, see: [MDN](https://developer.mozilla.org/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types)(use `Input.TextArea` instead of `type=\"textarea\"`) | string                         | `text`  |\n| value        | The input content value                                                                                                                                            | string                         |         |\n| onChange     | callback when user input                                                                                                                                           | function(e)                    |         |\n| onPressEnter | The callback function that is triggered when Enter key is pressed.                                                                                                 | function(e)                    |         |\n| allowClear   | allow to remove input content with clear icon                                                                                                                      | boolean                        |         |"
    ],
    "Input.Search": [
      "| Property    | Description                                                                                               | Type                   | Default |\n| ----------- | --------------------------------------------------------------------------------------------------------- | ---------------------- | ------- |\n| enterButton | to show an enter button after input. This property conflicts with the `addonAfter` property.              | boolean\\|ReactNode     | false   |\n| onSearch    | The callback function triggered when you click on the search-icon, the clear-icon or press the Enter key. | function(value, event) |         |\n| loading     | Search box with loading.                                                                                  | boolean                |         |"
    ],
    "Input.Group": [
      "| Property | Description                                                                                                       | Type    | Default   |\n| -------- | ----------------------------------------------------------------------------------------------------------------- | ------- | --------- |\n| compact  | Whether use compact style                                                                                         | boolean | false     |\n| size     | The size of `Input.Group` specifies the size of the included `Input` fields. Available: `large` `default` `small` | string  | `default` |"
    ],
    "InputNumber": [
      "| Property         | Description                                                                                                                                                                                                                                  | Type                                      | Default   |\n| ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | --------- |\n| autoFocus        | get focus when component mounted                                                                                                                                                                                                             | boolean                                   | false     |\n| defaultValue     | initial value                                                                                                                                                                                                                                | number                                    |           |\n| disabled         | disable the input                                                                                                                                                                                                                            | boolean                                   | false     |\n| formatter        | Specifies the format of the value presented                                                                                                                                                                                                  | function(value: number \\| string): string |           |\n| max              | max value                                                                                                                                                                                                                                    | number                                    | Infinity  |\n| min              | min value                                                                                                                                                                                                                                    | number                                    | -Infinity |\n| parser           | Specifies the value extracted from formatter                                                                                                                                                                                                 | function( string): number                 |           |\n| precision        | precision of input value                                                                                                                                                                                                                     | number                                    |           |\n| decimalSeparator | decimal separator                                                                                                                                                                                                                            | string                                    |           |\n| size             | height of input box                                                                                                                                                                                                                          | `large` \\| `middle` \\| `small`            |           |\n| step             | The number to which the current value is increased or decreased. It can be an integer or decimal.                                                                                                                                            | number\\|string                            | 1         |\n| type             | HTML inputs can have a type of `number`, and this can be added to aid [mobile] broswer keyboards to show the number keybaord, as well as limit inputs to numbers only [0-9 and e], but will not guaruntee client and server side validation. | string - ie 'number'                      |           |\n| value            | current value                                                                                                                                                                                                                                | number                                    |           |\n| onChange         | The callback triggered when the value is changed.                                                                                                                                                                                            | function(value: number \\| string)         |           |\n| onPressEnter     | The callback function that is triggered when Enter key is pressed.                                                                                                                                                                           | function(e)                               |           |"
    ],
    "Input.Password": [
      "| Property         | Description                | Type    | Default |\n| ---------------- | -------------------------- | ------- | ------- |\n| visibilityToggle | Whether show toggle button | boolean | true    |"
    ],
    "Layout.Sider": [
      "| Property              | Description                                                                                 | Type                                            | Default |\n| --------------------- | ------------------------------------------------------------------------------------------- | ----------------------------------------------- | ------- |\n| breakpoint            | [breakpoints](/components/grid#Col) of the responsive layout                                | `xs` \\| `sm` \\| `md` \\| `lg` \\| `xl` \\| `xxl` } | -       |\n| className             | container className                                                                         | string                                          | -       |\n| collapsed             | to set the current status                                                                   | boolean                                         | -       |\n| collapsedWidth        | width of the collapsed sidebar, by setting to `0` a special trigger will appear             | number                                          | 80      |\n| collapsible           | whether can be collapsed                                                                    | boolean                                         | false   |\n| defaultCollapsed      | to set the initial status                                                                   | boolean                                         | false   |\n| reverseArrow          | reverse direction of arrow, for a sider that expands from the right                         | boolean                                         | false   |\n| style                 | to customize the styles                                                                     | object                                          | -       |\n| theme                 | color theme of the sidebar                                                                  | `light` \\| `dark`                               | `dark`  |\n| trigger               | specify the customized trigger, set to null to hide the trigger                             | string\\|ReactNode                               | -       |\n| width                 | width of the sidebar                                                                        | number\\|string                                  | 200     |\n| onCollapse            | the callback function, executed by clicking the trigger or activating the responsive layout | (collapsed, type) => {}                         | -       |\n| onBreakpoint          | the callback function, executed when [breakpoints](/components/grid#API) changed            | (broken) => {}                                  | -       |\n| zeroWidthTriggerStyle | to customize the styles of the special trigger that appears when `collapsedWidth` is 0      | object                                          | -       |"
    ],
    "Layout": [
      "| Property  | Description                                                                                               | Type    | Default |\n| --------- | --------------------------------------------------------------------------------------------------------- | ------- | ------- |\n| className | container className                                                                                       | string  | -       |\n| hasSider  | whether contain Sider in children, don't have to assign it normally. Useful in ssr avoid style flickering | boolean | -       |\n| style     | to customize the styles                                                                                   | object  | -       |"
    ],
    "List": [
      "| Property   | Description                                                                                                           | Type                                                                                                                         | Default                   | Version |\n| ---------- | --------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ------------------------- | ------- |\n| bordered   | Toggles rendering of the border around the list                                                                       | boolean                                                                                                                      | false                     |         |\n| footer     | List footer renderer                                                                                                  | string\\|ReactNode                                                                                                            | -                         |         |\n| grid       | The grid type of list. You can set grid to something like {gutter: 16, column: 4}                                     | [object](#List-grid-props)                                                                                                   | -                         |         |\n| header     | List header renderer                                                                                                  | string\\|ReactNode                                                                                                            | -                         |         |\n| itemLayout | The layout of list, default is `horizontal`, If a vertical list is desired, set the itemLayout property to `vertical` | string                                                                                                                       | -                         |         |\n| rowKey     | Item's unique key, could be a string or function that returns a string                                                | string\\|Function(record):string                                                                                              | `key`                     |         |\n| loading    | Shows a loading indicator while the contents of the list are being fetched                                            | boolean\\|[SpinProps](https://ant.design/components/spin/#API) ([more](https://github.com/ant-design/ant-design/issues/8659)) | false                     |         |\n| loadMore   | Shows a load more content                                                                                             | string\\|ReactNode                                                                                                            | -                         |         |\n| locale     | i18n text including empty text                                                                                        | object                                                                                                                       | emptyText: 'No Data' <br> |         |\n| pagination | Pagination [config](https://ant.design/components/pagination/), hide it by setting it to false                        | boolean \\| object                                                                                                            | false                     |         |\n| size       | Size of list                                                                                                          | `default` \\| `large` \\| `small`                                                                                              | `default`                 |         |\n| split      | Toggles rendering of the split under the list item                                                                    | boolean                                                                                                                      | true                      |         |\n| dataSource | dataSource array for list                                                                                             | any\\[]                                                                                                                       | -                         |         |\n| renderItem | customize list item when using `dataSource`                                                                           | `item => ReactNode`                                                                                                          | -                         |         |"
    ],
    "List.Item": [
      "| Property | Description                                                                                                                             | Type              | Default | Version |\n| -------- | --------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| actions  | The actions content of list item. If `itemLayout` is `vertical`, shows the content on bottom, otherwise shows content on the far right. | Array<ReactNode>  | -       |         |\n| extra    | The extra content of list item. If `itemLayout` is `vertical`, shows the content on right, otherwise shows content on the far right.    | string\\|ReactNode | -       |         |"
    ],
    "List.Item.Meta": [
      "| Property    | Description                  | Type              | Default | Version |\n| ----------- | ---------------------------- | ----------------- | ------- | ------- |\n| avatar      | The avatar of list item      | ReactNode         | -       |         |\n| description | The description of list item | string\\|ReactNode | -       |         |\n| title       | The title of list item       | string\\|ReactNode | -       |         |"
    ],
    "Mentions": [
      "| Property          | Description                                        | Type                                                     | Default     |\n| ----------------- | -------------------------------------------------- | -------------------------------------------------------- | ----------- |\n| autoFocus         | Auto get focus when component mounted              | boolean                                                  | `false`     |\n| defaultValue      | Default value                                      | string                                                   |             |\n| filterOption      | Customize filter option logic                      | false \\| (input: string, option: OptionProps) => boolean |             |\n| notFoundContent   | Set mentions content when not match                | ReactNode                                                | 'Not Found' |\n| placement         | Set popup placement                                | `top` \\| `bottom`                                        | `bottom`    |\n| prefix            | Set trigger prefix keyword                         | string \\| string\\[]                                      | '@'         |\n| split             | Set split string before and after selected mention | string                                                   | ' '         |\n| validateSearch    | Customize trigger search logic                     | (text: string, props: MentionsProps) => void             |             |\n| value             | Set value of mentions                              | string                                                   |             |\n| onChange          | Trigger when value changed                         | (text: string) => void                                   |             |\n| onSelect          | Trigger when user select the option                | (option: OptionProps, prefix: string) => void            |             |\n| onSearch          | Trigger when prefix hit                            | (text: string, prefix: string) => void                   |             |\n| onFocus           | Trigger when mentions get focus                    | () => void                                               |             |\n| onBlur            | Trigger when mentions lose focus                   | () => void                                               |             |\n| getPopupContainer | Set the mount HTML node for suggestions            | () => HTMLElement                                        |             |"
    ],
    "Menu.Item": [
      "| Param    | Description                          | Type    | Default value | Version |\n| -------- | ------------------------------------ | ------- | ------------- | ------- |\n| disabled | Whether menu item is disabled        | boolean | false         |         |\n| key      | Unique ID of the menu item           | string  |               |         |\n| title    | Set display title for collapsed item | string  |               |         |"
    ],
    "Menu.SubMenu": [
      "| Param          | Description                                          | Type                        | Default value | Version |\n| -------------- | ---------------------------------------------------- | --------------------------- | ------------- | ------- |\n| popupClassName | Sub-menu class name                                  | string                      |               |         |\n| children       | Sub-menus or sub-menu items                          | Array&lt;MenuItem\\|SubMenu> |               |         |\n| disabled       | Whether sub-menu is disabled                         | boolean                     | false         |         |\n| key            | Unique ID of the sub-menu                            | string                      |               |         |\n| title          | Title of the sub-menu                                | string\\|ReactNode           |               |         |\n| onTitleClick   | Callback executed when the sub-menu title is clicked | function({ key, domEvent }) |               |         |"
    ],
    "Menu": [
      "| Param               | Description                                                | Type                                                     | Default value | Version |\n| ------------------- | ---------------------------------------------------------- | -------------------------------------------------------- | ------------- | ------- |\n| defaultOpenKeys     | Array with the keys of default opened sub menus            | string\\[]                                                |               |         |\n| defaultSelectedKeys | Array with the keys of default selected menu items         | string\\[]                                                |               |         |\n| forceSubMenuRender  | Render submenu into DOM before it becomes visible          | boolean                                                  | false         |         |\n| inlineCollapsed     | Specifies the collapsed status when menu is inline mode    | boolean                                                  | -             |         |\n| inlineIndent        | Indent (in pixels) of inline menu items on each level      | number                                                   | 24            |         |\n| mode                | Type of menu; `vertical`, `horizontal`, or `inline`        | `vertical` \\| `horizontal` \\| `inline`                   | `vertical`    |         |\n| multiple            | Allows selection of multiple items                         | boolean                                                  | false         |         |\n| openKeys            | Array with the keys of currently opened sub-menus          | string\\[]                                                |               |         |\n| selectable          | Allows selecting menu items                                | boolean                                                  | true          |         |\n| selectedKeys        | Array with the keys of currently selected menu items       | string\\[]                                                |               |         |\n| style               | Style of the root node                                     | object                                                   |               |         |\n| subMenuCloseDelay   | Delay time to hide submenu when mouse leaves (in seconds)  | number                                                   | 0.1           |         |\n| subMenuOpenDelay    | Delay time to show submenu when mouse enters, (in seconds) | number                                                   | 0             |         |\n| theme               | Color theme of the menu                                    | `light` \\| `dark`                                        | `light`       |         |\n| onClick             | Called when a menu item is clicked                         | function({ item, key, keyPath, domEvent })               | -             |         |\n| onDeselect          | Called when a menu item is deselected (multiple mode only) | function({ item, key, keyPath, selectedKeys, domEvent }) | -             |         |\n| onOpenChange        | Called when sub-menus are opened or closed                 | function(openKeys: string\\[])                            | noop          |         |\n| onSelect            | Called when a menu item is selected                        | function({ item, key, keyPath, selectedKeys, domEvent }) | none          |         |\n| overflowedIndicator | Customized icon when menu is collapsed                     | ReactNode                                                | -             |         |"
    ],
    "Menu.ItemGroup": [
      "| Param    | Description        | Type              | Default value | Version |\n| -------- | ------------------ | ----------------- | ------------- | ------- |\n| children | sub-menu items     | MenuItem\\[]       |               |         |\n| title    | title of the group | string\\|ReactNode |               |         |"
    ],
    "PageHeader": [
      "| Param      | Description                                                    | Type                                                                                            | Default value        | Version |\n| ---------- | -------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- | -------------------- | ------- |\n| title      | Custom title text                                              | ReactNode                                                                                       | -                    |         |\n| subTitle   | Custom subtitle text                                           | ReactNode                                                                                       | -                    |         |\n| ghost      | PageHeader type, will change background color                  | boolean                                                                                         | true                 |         |\n| avatar     | Avatar next to the title bar                                   | [avatar props](/components/avatar/)                                                             | -                    |         |\n| backIcon   | Custom back icon, if false the back icon will not be displayed | ReactNode \\| boolean                                                                            | `<ArrowLeft />`      |         |\n| tags       | Tag list next to title                                         | [Tag](https://ant.design/components/tag-cn/)\\[] \\| [Tag](https://ant.design/components/tag-cn/) | -                    |         |\n| extra      | Operating area, at the end of the line of the title line       | ReactNode                                                                                       | -                    |         |\n| breadcrumb | Breadcrumb configuration                                       | [breadcrumb](https://ant.design/components/breadcrumb-cn/)                                      | -                    |         |\n| footer     | PageHeader's footer, generally used to render TabBar           | ReactNode                                                                                       | -                    |         |\n| onBack     | Back icon click event                                          | `()=>void`                                                                                      | `()=>history.back()` |         |"
    ],
    "Modal": [
      "| Property          | Description                                                                                                | Type                                                     | Default               |\n| ----------------- | ---------------------------------------------------------------------------------------------------------- | -------------------------------------------------------- | --------------------- |\n| afterClose        | Specify a function that will be called when modal is closed completely.                                    | function                                                 | -                     |\n| bodyStyle         | Body style for modal body element. Such as height, padding etc.                                            | object                                                   | {}                    |\n| cancelText        | Text of the Cancel button                                                                                  | string\\|ReactNode                                        | `Cancel`              |\n| centered          | Centered Modal                                                                                             | Boolean                                                  | `false`               |\n| closable          | Whether a close (x) button is visible on top right of the modal dialog or not                              | boolean                                                  | true                  |\n| closeIcon         | custom close icon                                                                                          | ReactNode                                                | -                     |\n| confirmLoading    | Whether to apply loading visual effect for OK button or not                                                | boolean                                                  | false                 |\n| destroyOnClose    | Whether to unmount child components on onClose                                                             | boolean                                                  | false                 |\n| footer            | Footer content, set as `footer={null}` when you don't need default buttons                                 | string\\|ReactNode                                        | OK and Cancel buttons |\n| forceRender       | Force render Modal                                                                                         | boolean                                                  | false                 |\n| getContainer      | Return the mount node for Modal                                                                            | HTMLElement \\| `() => HTMLElement` \\| Selectors \\| false | document.body         |\n| mask              | Whether show mask or not.                                                                                  | Boolean                                                  | true                  |\n| maskClosable      | Whether to close the modal dialog when the mask (area outside the modal) is clicked                        | boolean                                                  | true                  |\n| maskStyle         | Style for modal's mask element.                                                                            | object                                                   | {}                    |\n| okText            | Text of the OK button                                                                                      | string\\|ReactNode                                        | `OK`                  |\n| okType            | Button `type` of the OK button                                                                             | string                                                   | `primary`             |\n| okButtonProps     | The ok button props                                                                                        | [ButtonProps](/components/button)                        | -                     |\n| cancelButtonProps | The cancel button props                                                                                    | [ButtonProps](/components/button)                        | -                     |\n| style             | Style of floating layer, typically used at least for adjusting the position.                               | object                                                   | -                     |\n| title             | The modal dialog's title                                                                                   | string\\|ReactNode                                        | -                     |\n| visible           | Whether the modal dialog is visible or not                                                                 | boolean                                                  | false                 |\n| width             | Width of the modal dialog                                                                                  | string\\|number                                           | 520                   |\n| wrapClassName     | The class name of the container of the modal dialog                                                        | string                                                   | -                     |\n| zIndex            | The `z-index` of the Modal                                                                                 | Number                                                   | 1000                  |\n| onCancel          | Specify a function that will be called when a user clicks mask, close button on top right or Cancel button | function(e)                                              | -                     |\n| onOk              | Specify a function that will be called when a user clicks the OK button                                    | function(e)                                              | -                     |"
    ],
    "Popconfirm": [
      "| Param      | Description                                    | Type                               | Default value           |\n| ---------- | ---------------------------------------------- | ---------------------------------- | ----------------------- |\n| cancelText | text of the Cancel button                      | string                             | `Cancel`                |\n| okText     | text of the Confirm button                     | string                             | `OK`                    |\n| okType     | Button `type` of the Confirm button            | string                             | `primary`               |\n| title      | title of the confirmation box                  | string\\|ReactNode\\|() => ReactNode | -                       |\n| onCancel   | callback of cancel                             | function(e)                        | -                       |\n| onConfirm  | callback of confirmation                       | function(e)                        | -                       |\n| icon       | customize icon of confirmation                 | ReactNode                          | `<ExclamationCircle />` |\n| disabled   | is show popconfirm when click its childrenNode | boolean                            | false                   |"
    ],
    "Pagination": [
      "| Property         | Description                                                                                                  | Type                                                                         | Default                    | Version |\n| ---------------- | ------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------- | -------------------------- | ------- |\n| current          | Current page number                                                                                          | number                                                                       | -                          |         |\n| defaultCurrent   | Default initial page number                                                                                  | number                                                                       | 1                          |         |\n| defaultPageSize  | Default number of data items per page                                                                        | number                                                                       | 10                         |         |\n| disabled         | Disable pagination                                                                                           | boolean                                                                      | -                          |         |\n| hideOnSinglePage | Whether to hide pager on single page                                                                         | boolean                                                                      | false                      |         |\n| itemRender       | To customize item's innerHTML                                                                                | (page, type: 'page' \\| 'prev' \\| 'next', originalElement) => React.ReactNode | -                          |         |\n| pageSize         | Number of data items per page                                                                                | number                                                                       | -                          |         |\n| pageSizeOptions  | Specify the sizeChanger options                                                                              | string\\[]                                                                    | \\['10', '20', '50', '100'] |         |\n| showLessItems    | Show less page items                                                                                         | boolean                                                                      | false                      |         |\n| showQuickJumper  | Determine whether you can jump to pages directly                                                             | boolean \\| `{ goButton: ReactNode }`                                         | false                      |         |\n| showSizeChanger  | Determine whether to show `pageSize` select, it will be `true` when `total>=50`                              | boolean                                                                      | -                          |         |\n| showTitle        | Show page item's title                                                                                       | boolean                                                                      | true                       |         |\n| showTotal        | To display the total number and range                                                                        | Function(total, range)                                                       | -                          |         |\n| simple           | Whether to use simple mode                                                                                   | boolean                                                                      | -                          |         |\n| size             | Specify the size of `Pagination`, can be set to `small`.                                                     | 'default' \\| 'small'.                                                        | \"\"                         |         |\n| responsive       | If `size` is not specified, `Pagination` would resize according to the width of the window                   | boolean                                                                      | -                          |         |\n| total            | Total number of data items                                                                                   | number                                                                       | 0                          |         |\n| onChange         | Called when the page number is changed, and it takes the resulting page number and pageSize as its arguments | Function(page, pageSize)                                                     | noop                       |         |\n| onShowSizeChange | Called when `pageSize` is changed                                                                            | Function(current, size)                                                      | noop                       |         |"
    ],
    "Popover": [
      "| Param   | Description         | Type                               | Default value | Version |\n| ------- | ------------------- | ---------------------------------- | ------------- | ------- |\n| content | Content of the card | string\\|ReactNode\\|() => ReactNode | -             |         |\n| title   | Title of the card   | string\\|ReactNode\\|() => ReactNode | -             |         |"
    ],
    "Radio": [
      "| Property       | Description                                                          | Type    | Default |\n| -------------- | -------------------------------------------------------------------- | ------- | ------- |\n| autoFocus      | get focus when component mounted                                     | boolean | false   |\n| checked        | Specifies whether the radio is selected.                             | boolean |         |\n| defaultChecked | Specifies the initial state: whether or not the radio is selected.   | boolean | false   |\n| disabled       | Disable radio                                                        | boolean | false   |\n| value          | According to value for comparison, to determine whether the selected | any     |         |"
    ],
    "Progress": [
      "| Property       | Description                                                                                    | Type                              | Default                    |\n| -------------- | ---------------------------------------------------------------------------------------------- | --------------------------------- | -------------------------- |\n| type           | to set the type, options: `line` `circle` `dashboard`                                          | string                            | `line`                     |\n| format         | template function of the content                                                               | function(percent, successPercent) | `percent => percent + '%'` |\n| percent        | to set the completion percentage                                                               | number                            | 0                          |\n| showInfo       | whether to display the progress value and the status icon                                      | boolean                           | true                       |\n| status         | to set the status of the Progress, options: `success` `exception` `normal` `active`(line only) | string                            | -                          |\n| strokeLinecap  | to set the style of the progress linecap                                                       | `round` \\| `square`               | `round`                    |\n| strokeColor    | color of progress bar                                                                          | string                            | -                          |\n| successPercent | segmented success percent                                                                      | number                            | 0                          |\n| trailColor     | color of unfilled part                                                                         | string                            | -                          |"
    ],
    "Radio.Group": [
      "| Property     | Description                                                     | Type                                                                      | Default   |\n| ------------ | --------------------------------------------------------------- | ------------------------------------------------------------------------- | --------- |\n| defaultValue | Default selected value                                          | any                                                                       |           |\n| disabled     | Disable all radio buttons                                       | boolean                                                                   | false     |\n| name         | The `name` property of all `input[type=\"radio\"]` children       | string                                                                    |           |\n| options      | set children optional                                           | string\\[] \\| Array&lt;{ label: string value: string disabled?: boolean }> |           |\n| size         | size for radio button style                                     | `large` \\| `middle` \\| `small`                                            |           |\n| value        | Used for setting the currently selected value.                  | any                                                                       |           |\n| onChange     | The callback function that is triggered when the state changes. | Function(e:Event)                                                         |           |\n| buttonStyle  | style type of radio button                                      | `outline` \\| `solid`                                                      | `outline` |"
    ],
    "Select": [
      "| Property                 | Description                                                                                                                                                                                                                                                    | Type                                                                        | Default                                            | Version |\n| ------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------- | -------------------------------------------------- | ------- |\n| allowClear               | Show clear button.                                                                                                                                                                                                                                             | boolean                                                                     | false                                              |         |\n| autoClearSearchValue     | Whether the current search will be cleared on selecting an item. Only applies when `mode` is set to `multiple` or `tags`.                                                                                                                                      | boolean                                                                     | true                                               |         |\n| autoFocus                | Get focus by default                                                                                                                                                                                                                                           | boolean                                                                     | false                                              |         |\n| defaultActiveFirstOption | Whether active first option by default                                                                                                                                                                                                                         | boolean                                                                     | true                                               |         |\n| defaultValue             | Initial selected option.                                                                                                                                                                                                                                       | string\\|string\\[]<br />number\\|number\\[]<br />LabeledValue\\|LabeledValue\\[] | -                                                  |         |\n| disabled                 | Whether disabled select                                                                                                                                                                                                                                        | boolean                                                                     | false                                              |         |\n| dropdownClassName        | className of dropdown menu                                                                                                                                                                                                                                     | string                                                                      | -                                                  |         |\n| dropdownMatchSelectWidth | Determine whether the dropdown menu and the select input are the same width. Default set `min-width` same as input. `false` will disable virtual scroll                                                                                                        | boolean \\| number                                                           | true                                               |         |\n| dropdownRender           | Customize dropdown content                                                                                                                                                                                                                                     | (menuNode: ReactNode, props) => ReactNode                                   | -                                                  |         |\n| dropdownStyle            | style of dropdown menu                                                                                                                                                                                                                                         | object                                                                      | -                                                  |         |\n| filterOption             | If true, filter options by input, if function, filter options against it. The function will receive two arguments, `inputValue` and `option`, if the function returns `true`, the option will be included in the filtered set; Otherwise, it will be excluded. | boolean or function(inputValue, option)                                     | true                                               |         |\n| firstActiveValue         | Value of action option by default                                                                                                                                                                                                                              | string\\|string\\[]                                                           | -                                                  |         |\n| getPopupContainer        | Parent Node which the selector should be rendered to. Default to `body`. When position issues happen, try to modify it into scrollable content and position it relative. [Example](https://codesandbox.io/s/4j168r7jw0)                                        | function(triggerNode)                                                       | () => document.body                                |         |\n| labelInValue             | whether to embed label in value, turn the format of value from `string` to `{key: string, label: ReactNode}`                                                                                                                                                   | boolean                                                                     | false                                              |         |\n| maxTagCount              | Max tag count to show                                                                                                                                                                                                                                          | number                                                                      | -                                                  |         |\n| maxTagTextLength         | Max tag text length to show                                                                                                                                                                                                                                    | number                                                                      | -                                                  |         |\n| maxTagPlaceholder        | Placeholder for not showing tags                                                                                                                                                                                                                               | ReactNode/function(omittedValues)                                           | -                                                  |         |\n| tagRender                | Customize tag render                                                                                                                                                                                                                                           | (props) => ReactNode                                                        | -                                                  |         |\n| mode                     | Set mode of Select                                                                                                                                                                                                                                             | `multiple` \\| `tags`                                                        | -                                                  |         |\n| notFoundContent          | Specify content to show when no result matches..                                                                                                                                                                                                               | string                                                                      | 'Not Found'                                        |         |\n| optionFilterProp         | Which prop value of option will be used for filter if filterOption is true                                                                                                                                                                                     | string                                                                      | value                                              |         |\n| optionLabelProp          | Which prop value of option will render as content of select. [Example](https://codesandbox.io/s/antd-reproduction-template-tk678)                                                                                                                              | string                                                                      | `value` for `combobox`, `children` for other modes |         |\n| placeholder              | Placeholder of select                                                                                                                                                                                                                                          | string\\|ReactNode                                                           | -                                                  |         |\n| showArrow                | Whether to show the drop-down arrow                                                                                                                                                                                                                            | boolean                                                                     | true                                               |         |\n| showSearch               | Whether show search input in single mode.                                                                                                                                                                                                                      | boolean                                                                     | false                                              |         |\n| size                     | Size of Select input.                                                                                                                                                                                                                                          | `large` \\| `middle` \\| `small`                                              |                                                    |         |\n| suffixIcon               | The custom suffix icon                                                                                                                                                                                                                                         | ReactNode                                                                   | -                                                  |         |\n| removeIcon               | The custom remove icon                                                                                                                                                                                                                                         | ReactNode                                                                   | -                                                  |         |\n| clearIcon                | The custom clear icon                                                                                                                                                                                                                                          | ReactNode                                                                   | -                                                  |         |\n| menuItemSelectedIcon     | The custom menuItemSelected icon with multiple options                                                                                                                                                                                                         | ReactNode                                                                   | -                                                  |         |\n| tokenSeparators          | Separator used to tokenize on tag/multiple mode                                                                                                                                                                                                                | string\\[]                                                                   |                                                    |         |\n| value                    | Current selected option.                                                                                                                                                                                                                                       | string\\|string\\[]<br />number\\|number\\[]<br />LabeledValue\\|LabeledValue\\[] | -                                                  |         |\n| virtual                  | Disable virtual scroll when set to `false`                                                                                                                                                                                                                     | boolean                                                                     | true                                               | 4.1.0   |\n| onBlur                   | Called when blur                                                                                                                                                                                                                                               | function                                                                    | -                                                  |         |\n| onChange                 | Called when select an option or input value change, or value of input is changed in combobox mode                                                                                                                                                              | function(value, option:Option/Array&lt;Option>)                             | -                                                  |         |\n| onDeselect               | Called when a option is deselected, param is the selected option's value. Only called for multiple or tags, effective in multiple or tags mode only.                                                                                                           | function(string\\|number\\|LabeledValue)                                      | -                                                  |         |\n| onFocus                  | Called when focus                                                                                                                                                                                                                                              | function                                                                    | -                                                  |         |\n| onInputKeyDown           | Called when key pressed                                                                                                                                                                                                                                        | function                                                                    | -                                                  |         |\n| onMouseEnter             | Called when mouse enter                                                                                                                                                                                                                                        | function                                                                    | -                                                  |         |\n| onMouseLeave             | Called when mouse leave                                                                                                                                                                                                                                        | function                                                                    | -                                                  |         |\n| onPopupScroll            | Called when dropdown scrolls                                                                                                                                                                                                                                   | function                                                                    | -                                                  |         |\n| onSearch                 | Callback function that is fired when input changed.                                                                                                                                                                                                            | function(value: string)                                                     |                                                    |         |\n| onSelect                 | Called when a option is selected, the params are option's value (or key) and option instance.                                                                                                                                                                  | function(string\\|number\\|LabeledValue, option:Option)                       | -                                                  |         |\n| defaultOpen              | Initial open state of dropdown                                                                                                                                                                                                                                 | boolean                                                                     | -                                                  |         |\n| open                     | Controlled open state of dropdown                                                                                                                                                                                                                              | boolean                                                                     | -                                                  |         |\n| onDropdownVisibleChange  | Call when dropdown open                                                                                                                                                                                                                                        | function(open)                                                              | -                                                  |         |\n| loading                  | indicate loading state                                                                                                                                                                                                                                         | Boolean                                                                     | false                                              |         |\n| bordered                 | whether has border style                                                                                                                                                                                                                                       | Boolean                                                                     | true                                               |         |"
    ],
    "Result": [
      "| Property | Description                           | Type                                                                   | Default |\n| -------- | ------------------------------------- | ---------------------------------------------------------------------- | ------- |\n| title    | title string                          | ReactNode                                                              | -       |\n| subTitle | subTitle string                       | ReactNode                                                              | -       |\n| status   | result status,decide icons and colors | `success` \\| `error` \\| `info` \\| `warning` \\| `404` \\| `403` \\| `500` | `info`  |\n| icon     | custom back icon                      | ReactNode                                                              | -       |\n| extra    | operating area                        | ReactNode                                                              | -       |"
    ],
    "Rate": [
      "| Property      | Description                             | type                    | Default                |\n| ------------- | --------------------------------------- | ----------------------- | ---------------------- |\n| allowClear    | whether to allow clear when click again | boolean                 | true                   |\n| allowHalf     | whether to allow semi selection         | boolean                 | false                  |\n| autoFocus     | get focus when component mounted        | boolean                 | false                  |\n| character     | custom character of rate                | ReactNode               | `<Icon type=\"star\" />` |\n| className     | custom class name of rate               | string                  |                        |\n| count         | star count                              | number                  | 5                      |\n| defaultValue  | default value                           | number                  | 0                      |\n| disabled      | read only, unable to interact           | boolean                 | false                  |\n| style         | custom style object of rate             | object                  |                        |\n| tooltips      | Customize tooltip by each character     | string\\[]               |                        |\n| value         | current value                           | number                  |                        |\n| onBlur        | callback when component lose focus      | Function()              |                        |\n| onChange      | callback when select value              | Function(value: number) |                        |\n| onFocus       | callback when component get focus       | Function()              |                        |\n| onHoverChange | callback when hover item                | Function(value: number) |                        |\n| onKeyDown     | callback when keydown on component      | Function(event)         |                        |"
    ],
    "Select.Option": [
      "| Property  | Description                                | Type           | Default | Version |\n| --------- | ------------------------------------------ | -------------- | ------- | ------- |\n| disabled  | Disable this option                        | boolean        | false   |         |\n| title     | `title` of Select after select this Option | string         | -       |         |\n| value     | default to filter with this property       | string\\|number | -       |         |\n| className | additional class to option                 | string         | -       |         |"
    ],
    "Skeleton": [
      "| Property  | Description                      | Type                                                         | Default |\n| --------- | -------------------------------- | ------------------------------------------------------------ | ------- |\n| active    | Show animation effect            | boolean                                                      | false   |\n| avatar    | Show avatar placeholder          | boolean \\| [SkeletonAvatarProps](#SkeletonAvatarProps)       | false   |\n| loading   | Display the skeleton when `true` | boolean                                                      | -       |\n| paragraph | Show paragraph placeholder       | boolean \\| [SkeletonParagraphProps](#SkeletonParagraphProps) | true    |\n| title     | Show title placeholder           | boolean \\| [SkeletonTitleProps](#SkeletonTitleProps)         | true    |"
    ],
    "Select.OptGroup": [
      "| Property | Description | Type                  | Default | Version |\n| -------- | ----------- | --------------------- | ------- | ------- |\n| key      |             | string                | -       |         |\n| label    | Group label | string\\|React.Element | -       |         |"
    ],
    "Slider": [
      "| Property                 | Description                                                                                                                                          | Type              | Default                                                                                  | Version |\n| ------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | ---------------------------------------------------------------------------------------- | ------- |\n| autoFocus                | get focus when component mounted                                                                                                                     | boolean           | false                                                                                    |         |\n| defaultValue             | The default value of slider. When `range` is `false`, use `number`, otherwise, use `[number, number]`                                                | number\\|number\\[] | 0 or \\[0, 0]                                                                             |         |\n| disabled                 | If true, the slider will not be interactable.                                                                                                        | boolean           | false                                                                                    |         |\n| dots                     | Whether the thumb can drag over tick only.                                                                                                           | boolean           | false                                                                                    |         |\n| included                 | Make effect when `marks` not null, `true` means containment and `false` means coordinative                                                           | boolean           | true                                                                                     |         |\n| marks                    | Tick mark of Slider, type of key must be `number`, and must in closed interval \\[min, max], each mark can declare its own style.                     | object            | { number: string\\|ReactNode } or { number: { style: object, label: string\\|ReactNode } } |         |\n| max                      | The maximum value the slider can slide to                                                                                                            | number            | 100                                                                                      |         |\n| min                      | The minimum value the slider can slide to.                                                                                                           | number            | 0                                                                                        |         |\n| range                    | dual thumb mode                                                                                                                                      | boolean           | false                                                                                    |         |\n| reverse                  | reverse the component                                                                                                                                | boolean           | false                                                                                    |         |\n| step                     | The granularity the slider can step through values. Must greater than 0, and be divided by (max - min) . When `marks` no null, `step` can be `null`. | number\\|null      | 1                                                                                        |         |\n| tipFormatter             | Slider will pass its value to `tipFormatter`, and display its value in Tooltip, and hide Tooltip when return value is null.                          | Function\\|null    | IDENTITY                                                                                 |         |\n| value                    | The value of slider. When `range` is `false`, use `number`, otherwise, use `[number, number]`                                                        | number\\|number\\[] |                                                                                          |         |\n| vertical                 | If true, the slider will be vertical.                                                                                                                | Boolean           | false                                                                                    |         |\n| onAfterChange            | Fire when `onmouseup` is fired.                                                                                                                      | Function(value)   | NOOP                                                                                     |         |\n| onChange                 | Callback function that is fired when the user changes the slider's value.                                                                            | Function(value)   | NOOP                                                                                     |         |\n| tooltipPlacement         | Set Tooltip display position. Ref [`Tooltip`](/components/tooltip/).                                                                                 | string            |                                                                                          |         |\n| tooltipVisible           | If true, Tooltip will show always, or it will not show anyway, even if dragging or hovering.                                                         | Boolean           |                                                                                          |         |\n| getTooltipPopupContainer | The DOM container of the Tooltip, the default behavior is to create a div element in body.                                                           | Function          | () => document.body                                                                      |         |"
    ],
    "Spin": [
      "| Property         | Description                                                         | Type                  | Default Value |\n| ---------------- | ------------------------------------------------------------------- | --------------------- | ------------- |\n| delay            | specifies a delay in milliseconds for loading state (prevent flush) | number (milliseconds) | -             |\n| indicator        | React node of the spinning indicator                                | ReactNode             | -             |\n| size             | size of Spin, options: `small`, `default` and `large`               | string                | `default`     |\n| spinning         | whether Spin is spinning                                            | boolean               | true          |\n| tip              | customize description content when Spin has children                | string                | -             |\n| wrapperClassName | className of wrapper when Spin has children                         | string                | -             |"
    ],
    "Statistic": [
      "| Property         | Description                   | Type                 | Default | Version |\n| ---------------- | ----------------------------- | -------------------- | ------- | ------- |\n| decimalSeparator | decimal separator             | string               | .       |         |\n| formatter        | customize value display logic | (value) => ReactNode | -       |         |\n| groupSeparator   | group separator               | string               | ,       |         |\n| precision        | precision of input value      | number               | -       |         |\n| prefix           | prefix node of value          | string \\| ReactNode  | -       |         |\n| suffix           | suffix node of value          | string \\| ReactNode  | -       |         |\n| title            | Display title                 | string \\| ReactNode  | -       |         |\n| value            | Display value                 | string \\| number     | -       |         |\n| valueStyle       | Set value css style           | style                | -       |         |"
    ],
    "Steps.Step": [
      "| Property    | Description                                                                                                                                           | Type              | Default | Version |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| description | Description of the step, optional property                                                                                                            | string\\|ReactNode | -       |         |\n| icon        | Icon of the step, optional property                                                                                                                   | string\\|ReactNode | -       |         |\n| status      | To specify the status. It will be automatically set by `current` of `Steps` if not configured. Optional values are: `wait` `process` `finish` `error` | string            | `wait`  |         |\n| title       | Title of the step                                                                                                                                     | string\\|ReactNode | -       |         |\n| subTitle    | Subtitle of the step                                                                                                                                  | string\\|ReactNode | -       |         |\n| disabled    | Disable click                                                                                                                                         | boolean           | false   |         |"
    ],
    "Statistic.Countdown": [
      "| Property   | Description                              | Type                | Default    | Version |\n| ---------- | ---------------------------------------- | ------------------- | ---------- | ------- |\n| format     | Format as [moment](http://momentjs.com/) | string              | 'HH:mm:ss' |         |\n| onFinish   | Trigger when time's up                   | () => void          | -          |         |\n| prefix     | prefix node of value                     | string \\| ReactNode | -          |         |\n| suffix     | suffix node of value                     | string \\| ReactNode | -          |         |\n| title      | Display title                            | string \\| ReactNode | -          |         |\n| value      | Set target countdown time                | number \\| moment    | -          |         |\n| valueStyle | Set value css style                      | style               | -          |         |"
    ],
    "Steps": [
      "| Property       | Description                                                                                                              | Type                                                                   | Default      | Version |\n| -------------- | ------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------- | ------------ | ------- |\n| className      | Additional class to Steps                                                                                                | string                                                                 | -            |         |\n| type           | Type of steps, can be set to one of the following values: `default`, `navigation`                                        | string                                                                 | `default`    |         |\n| current        | To set the current step, counting from 0. You can overwrite this state by using `status` of `Step`                       | number                                                                 | 0            |         |\n| direction      | To specify the direction of the step bar, `horizontal` or `vertical`                                                     | string                                                                 | `horizontal` |         |\n| labelPlacement | Place title and description with `horizontal` or `vertical` direction                                                    | string                                                                 | `horizontal` |         |\n| progressDot    | Steps with progress dot style, customize the progress dot by setting it to a function. labelPlacement will be `vertical` | Boolean or (iconDot, {index, status, title, description}) => ReactNode | false        |         |\n| size           | To specify the size of the step bar, `default` and `small` are currently supported                                       | string                                                                 | `default`    |         |\n| status         | To specify the status of current step, can be set to one of the following values: `wait` `process` `finish` `error`      | string                                                                 | `process`    |         |\n| initial        | Set the initial step, counting from 0                                                                                    | number                                                                 | 0            |         |\n| onChange       | Trigger when Step is changed                                                                                             | (current) => void                                                      | -            |         |"
    ],
    "Switch": [
      "| Property          | Description                                          | Type                                     | Default |\n| ----------------- | ---------------------------------------------------- | ---------------------------------------- | ------- |\n| autoFocus         | get focus when component mounted                     | boolean                                  | false   |\n| checked           | determine whether the `Switch` is checked            | boolean                                  | false   |\n| checkedChildren   | content to be shown when the state is checked        | string\\|ReactNode                        |         |\n| defaultChecked    | to set the initial state                             | boolean                                  | false   |\n| disabled          | Disable switch                                       | boolean                                  | false   |\n| loading           | loading state of switch                              | boolean                                  | false   |\n| size              | the size of the `Switch`, options: `default` `small` | string                                   | default |\n| unCheckedChildren | content to be shown when the state is unchecked      | string\\|ReactNode                        |         |\n| onChange          | trigger when the checked state is changing           | Function(checked: boolean, event: Event) |         |\n| onClick           | trigger when clicked                                 | Function(checked: boolean, event: Event) |         |\n| className         | additional class to Switch                           | string                                   |         |"
    ],
    "Tabs": [
      "| Property           | Description                                                                             | Type                                                                                   | Default                            |\n| ------------------ | --------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | ---------------------------------- |\n| activeKey          | Current TabPane's key                                                                   | string                                                                                 | -                                  |\n| animated           | Whether to change tabs with animation. Only works while `tabPosition=\"top\"\\|\"bottom\"`   | boolean \\| {inkBar:boolean, tabPane:boolean}                                           | `true`, `false` when `type=\"card\"` |\n| renderTabBar       | replace the TabBar                                                                      | (props: DefaultTabBarProps, DefaultTabBar: React.ComponentClass) => React.ReactElement | -                                  |\n| defaultActiveKey   | Initial active TabPane's key, if `activeKey` is not set.                                | string                                                                                 | -                                  |\n| hideAdd            | Hide plus icon or not. Only works while `type=\"editable-card\"`                          | boolean                                                                                | `false`                            |\n| size               | preset tab bar size                                                                     | `large` \\| `default` \\| `small`                                                        | `default`                          |\n| tabBarExtraContent | Extra content in tab bar                                                                | React.ReactNode                                                                        | -                                  |\n| tabBarGutter       | The gap between tabs                                                                    | number                                                                                 | -                                  |\n| tabBarStyle        | Tab bar style object                                                                    | object                                                                                 | -                                  |\n| tabPosition        | Position of tabs                                                                        | `top` \\| `right` \\| `bottom` \\| `left`                                                 | `top`                              |\n| type               | Basic style of tabs                                                                     | `line` \\| `card` \\| `editable-card`                                                    | `line`                             |\n| onChange           | Callback executed when active tab is changed                                            | Function(activeKey) {}                                                                 | -                                  |\n| onEdit             | Callback executed when tab is added or removed. Only works while `type=\"editable-card\"` | (targetKey, action): void                                                              | -                                  |\n| onNextClick        | Callback executed when next button is clicked                                           | Function                                                                               | -                                  |\n| onPrevClick        | Callback executed when prev button is clicked                                           | Function                                                                               | -                                  |\n| onTabClick         | Callback executed when tab is clicked                                                   | Function(key: string, event: MouseEvent)                                               | -                                  |\n| keyboard           | whether to turn on keyboard navigation                                                  | boolean                                                                                | true                               |"
    ],
    "Tabs.TabPane": [
      "| Property    | Description                                                              | Type              | Default |\n| ----------- | ------------------------------------------------------------------------ | ----------------- | ------- |\n| forceRender | Forced render of content in tabs, not lazy render after clicking on tabs | boolean           | false   |\n| key         | TabPane's key                                                            | string            | -       |\n| tab         | Show text in TabPane's head                                              | string\\|ReactNode | -       |"
    ],
    "Tag": [
      "| Property   | Description                                                                                                        | Type        | Default |     |\n| ---------- | ------------------------------------------------------------------------------------------------------------------ | ----------- | ------- | --- |\n| afterClose | Callback executed when close animation is completed, please use `onClose`, we will remove this in the next version | () => void  | -       |     |\n| closable   | Whether the Tag can be closed                                                                                      | boolean     | `false` |     |\n| color      | Color of the Tag                                                                                                   | string      | -       |     |\n| onClose    | Callback executed when tag is closed                                                                               | (e) => void | -       |     |\n| visible    | Whether the Tag is closed or not                                                                                   | boolean     | `true`  |     |\n| icon       | Set the icon of tag                                                                                                | ReactNode   | -       |     |"
    ],
    "TimePicker": [
      "| Property            | Description                                                                                      | Type                                             | Default         | Version |\n| ------------------- | ------------------------------------------------------------------------------------------------ | ------------------------------------------------ | --------------- | ------- |\n| allowClear          | allow clearing text                                                                              | boolean                                          | true            |         |\n| autoFocus           | get focus when component mounted                                                                 | boolean                                          | false           |         |\n| bordered            | whether has border style                                                                         | boolean                                          | true            |         |\n| className           | className of picker                                                                              | string                                           | ''              |         |\n| clearText           | clear tooltip of icon                                                                            | string                                           | clear           |         |\n| defaultValue        | to set default time                                                                              | [moment](http://momentjs.com/)                   | -               |         |\n| disabled            | determine whether the TimePicker is disabled                                                     | boolean                                          | false           |         |\n| disabledHours       | to specify the hours that cannot be selected                                                     | function()                                       | -               |         |\n| disabledMinutes     | to specify the minutes that cannot be selected                                                   | function(selectedHour)                           | -               |         |\n| disabledSeconds     | to specify the seconds that cannot be selected                                                   | function(selectedHour, selectedMinute)           | -               |         |\n| format              | to set the time format                                                                           | string                                           | \"HH:mm:ss\"      |         |\n| getPopupContainer   | to set the container of the floating layer, while the default is to create a div element in body | function(trigger)                                | -               |         |\n| hideDisabledOptions | hide the options that can not be selected                                                        | boolean                                          | false           |         |\n| hourStep            | interval between hours in picker                                                                 | number                                           | 1               |         |\n| inputReadOnly       | Set the `readonly` attribute of the input tag (avoids virtual keyboard on touch devices)         | boolean                                          | false           |         |\n| minuteStep          | interval between minutes in picker                                                               | number                                           | 1               |         |\n| open                | whether to popup panel                                                                           | boolean                                          | false           |         |\n| placeholder         | display when there's no value                                                                    | string                                           | \"Select a time\" |         |\n| popupClassName      | className of panel                                                                               | string                                           | ''              |         |\n| popupStyle          | style of panel                                                                                   | object                                           | -               |         |\n| secondStep          | interval between seconds in picker                                                               | number                                           | 1               |         |\n| suffixIcon          | The custom suffix icon                                                                           | ReactNode                                        | -               |         |\n| clearIcon           | The custom clear icon                                                                            | ReactNode                                        | -               |         |\n| use12Hours          | display as 12 hours format, with default format `h:mm:ss a`                                      | boolean                                          | false           |         |\n| renderExtraFooter   | called from time picker panel to render some addon to its bottom                                 | () => ReactNode                                  | -               |         |\n| value               | to set time                                                                                      | [moment](http://momentjs.com/)                   | -               |         |\n| onChange            | a callback function, can be executed when the selected time is changing                          | function(time: moment, timeString: string): void | -               |         |\n| onOpenChange        | a callback function which will be called while panel opening/closing                             | (open: boolean): void                            | -               |         |"
    ],
    "Timeline.Item": [
      "| Property | Description                                                                     | Type              | Default |\n| -------- | ------------------------------------------------------------------------------- | ----------------- | ------- |\n| color    | Set the circle's color to `blue`, `red`, `green`, `gray` or other custom colors | string            | `blue`  |\n| dot      | Customize timeline dot                                                          | string\\|ReactNode | -       |\n| position | Customize node position                                                         | `left` \\| `right` | -       |\n| label    | Set the label                                                                   | ReactNode         | -       |"
    ],
    "Tooltip": [
      "| Property | Description                   | Type                               | Default |\n| -------- | ----------------------------- | ---------------------------------- | ------- |\n| title    | The text shown in the tooltip | string\\|ReactNode\\|() => ReactNode | -       |",
      "| Property           | Description                                                                                                                                                                                           | Type                                                              | Default             |\n| ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- | ------------------- |\n| arrowPointAtCenter | Whether the arrow is pointed at the center of target, supported after `antd@1.11+`                                                                                                                    | boolean                                                           | `false`             |\n| autoAdjustOverflow | Whether to adjust popup placement automatically when popup is off screen                                                                                                                              | boolean                                                           | `true`              |\n| defaultVisible     | Whether the floating tooltip card is visible by default                                                                                                                                               | boolean                                                           | `false`             |\n| getPopupContainer  | The DOM container of the tip, the default behavior is to create a `div` element in `body`                                                                                                             | Function(triggerNode)                                             | () => document.body |\n| mouseEnterDelay    | Delay in seconds, before tooltip is shown on mouse enter                                                                                                                                              | number                                                            | 0.1                 |\n| mouseLeaveDelay    | Delay in seconds, before tooltip is hidden on mouse leave                                                                                                                                             | number                                                            | 0.1                 |\n| overlayClassName   | Class name of the tooltip card                                                                                                                                                                        | string                                                            | -                   |\n| overlayStyle       | Style of the tooltip card                                                                                                                                                                             | object                                                            | -                   |\n| placement          | The position of the tooltip relative to the target, which can be one of `top` `left` `right` `bottom` `topLeft` `topRight` `bottomLeft` `bottomRight` `leftTop` `leftBottom` `rightTop` `rightBottom` | string                                                            | `top`               |\n| trigger            | Tooltip trigger mode. Could be multiple by passing an array                                                                                                                                           | `hover` \\| `focus` \\| `click` \\| `contextMenu` \\| `Array<string>` | `hover`             |\n| visible            | Whether the floating tooltip card is visible or not                                                                                                                                                   | boolean                                                           | `false`             |\n| onVisibleChange    | Callback executed when visibility of the tooltip card is changed                                                                                                                                      | (visible) => void                                                 | -                   |\n| align              | this value will be merged into placement's config, please refer to the settings [rc-tooltip](https://github.com/react-component/tooltip)                                                              | Object                                                            | -                   |"
    ],
    "Tag.CheckableTag": [
      "| Property | Description                                     | Type              | Default |\n| -------- | ----------------------------------------------- | ----------------- | ------- |\n| checked  | Checked status of Tag                           | boolean           | `false` |\n| onChange | Callback executed when Tag is checked/unchecked | (checked) => void | -       |"
    ],
    "Timeline": [
      "| Property   | Description                                                                          | Type                             | Default               |\n| ---------- | ------------------------------------------------------------------------------------ | -------------------------------- | --------------------- |\n| pending    | Set the last ghost node's existence or its content                                   | boolean\\|string\\|ReactNode       | `false`               |\n| pendingDot | Set the dot of the last ghost node when pending is true                              | string\\|ReactNode                | `<LoadingOutlined />` |\n| reverse    | reverse nodes or not                                                                 | boolean                          | false                 |\n| mode       | By sending `alternate` the timeline will distribute the nodes to the left and right. | `left` \\| `alternate` \\| `right` | -                     |"
    ],
    "Transfer": [
      "| Property        | Description                                                                                                                                                                                                                                                                                                  | Type                                                                                            | Default                                                                                                            | Version |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------ | ------- |\n| className       | A custom CSS class.                                                                                                                                                                                                                                                                                          | string                                                                                          | \\['', '']                                                                                                          |         |\n| dataSource      | Used for setting the source data. The elements that are part of this array will be present the left column. Except the elements whose keys are included in `targetKeys` prop.                                                                                                                                | [TransferItem](https://git.io/vMM64)\\[]                                                         | \\[]                                                                                                                |         |\n| disabled        | Whether disabled transfer                                                                                                                                                                                                                                                                                    | boolean                                                                                         | false                                                                                                              |         |\n| filterOption    | A function to determine whether an item should show in search result list                                                                                                                                                                                                                                    | (inputValue, option): boolean                                                                   |                                                                                                                    |         |\n| footer          | A function used for rendering the footer.                                                                                                                                                                                                                                                                    | (props) => ReactNode                                                                            |                                                                                                                    |         |\n| listStyle       | A custom CSS style used for rendering the transfer columns.                                                                                                                                                                                                                                                  | object\\|({direction: 'left'\\|'right'}) => object                                                |                                                                                                                    |         |\n| locale          | i18n text including filter, empty text, item unit, etc                                                                                                                                                                                                                                                       | { itemUnit: string; itemsUnit: string; searchPlaceholder: string; notFoundContent: ReactNode; } | `{ itemUnit: 'item', itemsUnit: 'items', notFoundContent: 'The list is empty', searchPlaceholder: 'Search here' }` |         |\n| operations      | A set of operations that are sorted from top to bottom.                                                                                                                                                                                                                                                      | string\\[]                                                                                       | \\['>', '&lt;']                                                                                                     |         |\n| operationStyle  | A custom CSS style used for rendering the operations column.                                                                                                                                                                                                                                                 | object                                                                                          |                                                                                                                    |         |\n| render          | The function to generate the item shown on a column. Based on an record (element of the dataSource array), this function should return a React element which is generated from that record. Also, it can return a plain object with `value` and `label`, `label` is a React element and `value` is for title | (record) => ReactNode                                                                           |                                                                                                                    |         |\n| selectedKeys    | A set of keys of selected items.                                                                                                                                                                                                                                                                             | string\\[]                                                                                       | \\[]                                                                                                                |         |\n| showSearch      | If included, a search box is shown on each column.                                                                                                                                                                                                                                                           | boolean                                                                                         | false                                                                                                              |         |\n| showSelectAll   | Show select all checkbox on the header                                                                                                                                                                                                                                                                       | boolean                                                                                         | true                                                                                                               |         |\n| style           | A custom CSS style used for rendering wrapper element.                                                                                                                                                                                                                                                       | object                                                                                          |                                                                                                                    |         |\n| targetKeys      | A set of keys of elements that are listed on the right column.                                                                                                                                                                                                                                               | string\\[]                                                                                       | \\[]                                                                                                                |         |\n| titles          | A set of titles that are sorted from left to right.                                                                                                                                                                                                                                                          | ReactNode\\[]                                                                                    | -                                                                                                                  |         |\n| selectAllLabels | A set of customized labels for select all checkboxs on the header                                                                                                                                                                                                                                            | (ReactNode \\| (info: { selectedCount: number, totalCount: number }) => ReactNode)\\[]            |                                                                                                                    |         |\n| onChange        | A callback function that is executed when the transfer between columns is complete.                                                                                                                                                                                                                          | (targetKeys, direction, moveKeys): void                                                         |                                                                                                                    |         |\n| onScroll        | A callback function which is executed when scroll options list                                                                                                                                                                                                                                               | (direction, event): void                                                                        |                                                                                                                    |         |\n| onSearch        | A callback function which is executed when search field are changed                                                                                                                                                                                                                                          | (direction: 'left'\\|'right', value: string): void                                               | -                                                                                                                  |         |\n| onSelectChange  | A callback function which is executed when selected items are changed.                                                                                                                                                                                                                                       | (sourceSelectedKeys, targetSelectedKeys): void                                                  |                                                                                                                    |         |"
    ],
    "Tree": [
      "| Property            | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | Type                                                                                 | Default | Version |\n| ------------------- || ------------------------------------------------------------------------------------ | ------- | ------- |\n| autoExpandParent    | Whether to automatically expand a parent treeNode                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | boolean                                                                              | true    |         |\n| blockNode           | Whether treeNode fill remaining horizontal space                                                                                                                                                                                                                                                                                                                                                                                                                                                                     | boolean                                                                              | false   |         |\n| checkable           | Adds a `Checkbox` before the treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | boolean                                                                              | false   |         |\n| checkedKeys         | (Controlled) Specifies the keys of the checked treeNodes (PS: When this specifies the key of a treeNode which is also a parent treeNode, all the children treeNodes of will be checked; and vice versa, when it specifies the key of a treeNode which is a child treeNode, its parent treeNode will also be checked. When `checkable` and `checkStrictly` is true, its object has `checked` and `halfChecked` property. Regardless of whether the child or parent treeNode is checked, they won't impact each other. | string\\[] \\| {checked: string\\[], halfChecked: string\\[]}                            | \\[]     |         |\n| checkStrictly       | Check treeNode precisely; parent treeNode and children treeNodes are not associated                                                                                                                                                                                                                                                                                                                                                                                                                                  | boolean                                                                              | false   |         |\n| defaultCheckedKeys  | Specifies the keys of the default checked treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | string\\[]                                                                            | \\[]     |         |\n| defaultExpandAll    | Whether to expand all treeNodes by default                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | boolean                                                                              | false   |         |\n| defaultExpandedKeys | Specify the keys of the default expanded treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | string\\[]                                                                            | \\[]     |         |\n| defaultExpandParent | auto expand parent treeNodes when init                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | bool                                                                                 | true    |         |\n| defaultSelectedKeys | Specifies the keys of the default selected treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | string\\[]                                                                            | \\[]     |         |\n| disabled            | whether disabled the tree                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | bool                                                                                 | false   |         |\n| draggable           | Specifies whether this Tree is draggable (IE > 8)                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | boolean                                                                              | false   |         |\n| expandedKeys        | (Controlled) Specifies the keys of the expanded treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                            | string\\[]                                                                            | \\[]     |         |\n| filterTreeNode      | Defines a function to filter (highlight) treeNodes. When the function returns `true`, the corresponding treeNode will be highlighted                                                                                                                                                                                                                                                                                                                                                                                 | function(node)                                                                       | -       |         |\n| loadData            | Load data asynchronously                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | function(node)                                                                       | -       |         |\n| loadedKeys          | (Controlled) Set loaded tree nodes. Need work with `loadData`                                                                                                                                                                                                                                                                                                                                                                                                                                                        | string\\[]                                                                            | \\[]     |         |\n| multiple            | Allows selecting multiple treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | boolean                                                                              | false   |         |\n| selectable          | whether can be selected                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | boolean                                                                              | true    |         |\n| selectedKeys        | (Controlled) Specifies the keys of the selected treeNodes                                                                                                                                                                                                                                                                                                                                                                                                                                                            | string\\[]                                                                            | -       |         |\n| showIcon            | Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to `true`                                                                                                                                                                                                                                                                                                                                                                                             | boolean                                                                              | false   |         |\n| switcherIcon        | customize collapse/expand icon of tree node                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | ReactNode                                                                            | -       |         |\n| showLine            | Shows a connecting line                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | boolean                                                                              | false   |         |\n| treeData            | treeNodes data Array, if set it then you need not to construct children TreeNode. (key should be unique across the whole array)                                                                                                                                                                                                                                                                                                                                                                                      | array\\\\&lt;{ key, title, children, \\[disabled, selectable] }>                        | -       |         |\n| virtual             | Disable virtual scroll when set to `false`                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | boolean                                                                              | true    | 4.1.0   |\n| onCheck             | Callback function for when the onCheck event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | function(checkedKeys, e:{checked: bool, checkedNodes, node, event, halfCheckedKeys}) | -       |         |\n| onDragEnd           | Callback function for when the onDragEnd event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                                | function({event, node})                                                              | -       |         |\n| onDragEnter         | Callback function for when the onDragEnter event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                              | function({event, node, expandedKeys})                                                | -       |         |\n| onDragLeave         | Callback function for when the onDragLeave event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                              | function({event, node})                                                              | -       |         |\n| onDragOver          | Callback function for when the onDragOver event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                               | function({event, node})                                                              | -       |         |\n| onDragStart         | Callback function for when the onDragStart event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                              | function({event, node})                                                              | -       |         |\n| onDrop              | Callback function for when the onDrop event occurs                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | function({event, node, dragNode, dragNodesKeys})                                     | -       |         |\n| onExpand            | Callback function for when a treeNode is expanded or collapsed                                                                                                                                                                                                                                                                                                                                                                                                                                                       | function(expandedKeys, {expanded: bool, node})                                       | -       |         |\n| onLoad              | Callback function for when a treeNode is loaded                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | function(loadedKeys, {event, node})                                                  | -       |         |\n| onRightClick        | Callback function for when the user right clicks a treeNode                                                                                                                                                                                                                                                                                                                                                                                                                                                          | function({event, node})                                                              | -       |         |\n| onSelect            | Callback function for when the user clicks a treeNode                                                                                                                                                                                                                                                                                                                                                                                                                                                                | function(selectedKeys, e:{selected: bool, selectedNodes, node, event})               | -       |         |"
    ],
    "Tree.TreeNode": [
      "| Property        | Description                                                                                                                              | Type                                | Default                                  |     |\n| --------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------- | ---------------------------------------- | --- |\n| checkable       | When Tree is checkable, set TreeNode display Checkbox or not                                                                             | boolean                             | -                                        |     |\n| disableCheckbox | Disables the checkbox of the treeNode                                                                                                    | boolean                             | false                                    |     |\n| disabled        | Disables the treeNode                                                                                                                    | boolean                             | false                                    |     |\n| icon            | customize icon. When you pass component, whose render will receive full TreeNode props as component props                                | ReactNode/Function(props):ReactNode | -                                        |     |\n| isLeaf          | Determines if this is a leaf node(effective when `loadData` is specified)                                                                | boolean                             | false                                    |     |\n| key             | Used with (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys. P.S.: It must be unique in all of treeNodes of the tree! | string                              | internal calculated position of treeNode |     |\n| selectable      | Set whether the treeNode can be selected                                                                                                 | boolean                             | true                                     |     |\n| title           | Title                                                                                                                                    | string\\|ReactNode                   | '---'                                    |     |"
    ],
    "TreeSelect": [
      "| Property                 | Description                                                                                                                                                                                                                                                | Type                                                                                        | Default                             | Version |\n| ------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------- | ----------------------------------- | ------- |\n| allowClear               | Whether allow clear                                                                                                                                                                                                                                        | boolean                                                                                     | false                               |         |\n| autoClearSearchValue     | auto clear search input value when multiple select is selected/deselected                                                                                                                                                                                  | boolean                                                                                     | true                                |         |\n| bordered                 | whether has border style                                                                                                                                                                                                                                   | boolean                                                                                     | true                                |         |\n| defaultValue             | To set the initial selected treeNode(s).                                                                                                                                                                                                                   | string\\|string\\[]                                                                           | -                                   |         |\n| disabled                 | Disabled or not                                                                                                                                                                                                                                            | boolean                                                                                     | false                               |         |\n| dropdownClassName        | className of dropdown menu                                                                                                                                                                                                                                 | string                                                                                      | -                                   |         |\n| dropdownMatchSelectWidth | Determine whether the dropdown menu and the select input are the same width. Default set `min-width` same as input. `false` will disable virtual scroll                                                                                                    | boolean \\| number                                                                           | true                                |         |\n| dropdownStyle            | To set the style of the dropdown menu                                                                                                                                                                                                                      | object                                                                                      | -                                   |         |\n| filterTreeNode           | Whether to filter treeNodes by input value. The value of `treeNodeFilterProp` is used for filtering by default.                                                                                                                                            | boolean\\|Function(inputValue: string, treeNode: TreeNode) (should return boolean)           | Function                            |         |\n| getPopupContainer        | To set the container of the dropdown menu. The default is to create a `div` element in `body`, you can reset it to the scrolling area and make a relative reposition. [example](https://codepen.io/afc163/pen/zEjNOy?editors=0010)                         | Function(triggerNode)                                                                       | () => document.body                 |         |\n| labelInValue             | whether to embed label in value, turn the format of value from `string` to `{value: string, label: ReactNode, halfChecked: string[]}`                                                                                                                      | boolean                                                                                     | false                               |         |\n| loadData                 | Load data asynchronously.                                                                                                                                                                                                                                  | function(node)                                                                              | -                                   |         |\n| maxTagCount              | Max tag count to show                                                                                                                                                                                                                                      | number                                                                                      | -                                   |         |\n| maxTagPlaceholder        | Placeholder for not showing tags                                                                                                                                                                                                                           | ReactNode/function(omittedValues)                                                           | -                                   |         |\n| multiple                 | Support multiple or not, will be `true` when enable `treeCheckable`.                                                                                                                                                                                       | boolean                                                                                     | false                               |         |\n| placeholder              | Placeholder of the select input                                                                                                                                                                                                                            | string                                                                                      | -                                   |         |\n| searchValue              | work with `onSearch` to make search value controlled.                                                                                                                                                                                                      | string                                                                                      | -                                   |         |\n| treeIcon                 | Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to `true`                                                                                                                                   | boolean                                                                                     | false                               |         |\n| switcherIcon             | customize collapse/expand icon of tree node                                                                                                                                                                                                                | ReactNode                                                                                   | -                                   |         |\n| showCheckedStrategy      | The way show selected item in box. **Default:** just show child nodes. **`TreeSelect.SHOW_ALL`:** show all checked treeNodes (include parent treeNode). **`TreeSelect.SHOW_PARENT`:** show checked treeNodes (just show parent treeNode).                  | enum { TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }                 | TreeSelect.SHOW_CHILD               |         |\n| showSearch               | Support search or not                                                                                                                                                                                                                                      | boolean                                                                                     | single: `false` \\| multiple: `true` |         |\n| size                     | To set the size of the select input                                                                                                                                                                                                                        | `large` \\| `middle` \\| `small`                                                              |                                     |         |\n| showArrow                | Whether to show the `suffixIcon`，when single selection mode, default `true`                                                                                                                                                                                | boolean                                                                                     |                                     |         |\n| suffixIcon               | The custom suffix icon,you must set `showArrow` to `true` manually in multiple selection mode                                                                                                                                                              | ReactNode                                                                                   | -                                   |         |\n| treeCheckable            | Whether to show checkbox on the treeNodes                                                                                                                                                                                                                  | boolean                                                                                     | false                               |         |\n| treeCheckStrictly        | Whether to check nodes precisely (in the `checkable` mode), means parent and child nodes are not associated, and it will make `labelInValue` be true                                                                                                       | boolean                                                                                     | false                               |         |\n| treeData                 | Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)                                                                                                                     | array\\\\&lt;{ value, title, children, \\[disabled, disableCheckbox, selectable, checkable] }> | \\[]                                 |         |\n| treeDataSimpleMode       | Enable simple mode of treeData. Changes the `treeData` schema to: \\[{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id). It is possible to replace the default `id` and `pId` keys by providing object to `treeDataSimpleMode` | false\\|object\\\\&lt;{ id: string, pId: string, rootPId: string }>                            | false                               |         |\n| treeDefaultExpandAll     | Whether to expand all treeNodes by default                                                                                                                                                                                                                 | boolean                                                                                     | false                               |         |\n| treeDefaultExpandedKeys  | Default expanded treeNodes                                                                                                                                                                                                                                 | string\\[]                                                                                   | -                                   |         |\n| treeExpandedKeys         | Set expanded keys                                                                                                                                                                                                                                          | string\\[]                                                                                   | -                                   |         |\n| treeNodeFilterProp       | Will be used for filtering if `filterTreeNode` returns true                                                                                                                                                                                                | string                                                                                      | 'value'                             |         |\n| treeNodeLabelProp        | Will render as content of select                                                                                                                                                                                                                           | string                                                                                      | 'title'                             |         |\n| value                    | To set the current selected treeNode(s).                                                                                                                                                                                                                   | string\\|string\\[]                                                                           | -                                   |         |\n| virtual                  | Disable virtual scroll when set to `false`                                                                                                                                                                                                                 | boolean                                                                                     | true                                | 4.1.0   |\n| onChange                 | A callback function, can be executed when selected treeNodes or input value change                                                                                                                                                                         | function(value, label, extra)                                                               | -                                   |         |\n| onSearch                 | A callback function, can be executed when the search input changes.                                                                                                                                                                                        | function(value: string)                                                                     | -                                   |         |\n| onSelect                 | A callback function, can be executed when you select a treeNode.                                                                                                                                                                                           | function(value, node, extra)                                                                | -                                   |         |\n| onTreeExpand             | A callback function, can be executed when treeNode expanded                                                                                                                                                                                                | function(expandedKeys)                                                                      | -                                   |         |"
    ],
    "TreeSelect.TreeNode": [
      "| Property        | Description                                                                         | Type              | Default | Version |\n| --------------- | ----------------------------------------------------------------------------------- | ----------------- | ------- | ------- |\n| selectable      | can be selected                                                                     | boolean           | true    |         |\n| checkable       | When Tree is checkable, set TreeNode display Checkbox or not                        | boolean           | -       |         |\n| disableCheckbox | Disables the checkbox of the treeNode                                               | boolean           | false   |         |\n| disabled        | Disabled or not                                                                     | boolean           | false   |         |\n| isLeaf          | Leaf node or not                                                                    | boolean           | false   |         |\n| key             | Required property (unless using `treeDataSimpleMode`), should be unique in the tree | string            | -       |         |\n| title           | Content showed on the treeNodes                                                     | string\\|ReactNode | '---'   |         |\n| value           | Will be treated as `treeNodeFilterProp` by default, should be unique in the tree    | string            | -       |         |"
    ],
    "Tree.DirectoryTree": [
      "| Property     | Description                                                      | Type   | Default |\n| ------------ | ---------------------------------------------------------------- | ------ | ------- |\n| expandAction | Directory open logic, optional `false` `'click'` `'doubleClick'` | string | click   |"
    ],
    "Typography.Title": [
      "| Property  | Description                                                                             | Type                                                                           | Default | Version |\n| --------- | --------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ | ------- | ------- |\n| code      | Code style                                                                              | boolean                                                                        | false   |         |\n| copyable  | Config copy. Can set copy text and callback when is an object                           | boolean \\| { text: string, onCopy: Function }                                  | false   |         |\n| delete    | Deleted line style                                                                      | boolean                                                                        | false   |         |\n| disabled  | Disabled content                                                                        | boolean                                                                        | false   |         |\n| editable  | Editable. Can control edit state when is object                                         | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) } | false   |         |\n| ellipsis  | Display ellipsis when text overflows. Can configure rows and expandable by using object | boolean \\| { rows: number, expandable: boolean, onExpand: Function(event) }    | false   |         |\n| level     | Set content importance. Match with `h1`, `h2`, `h3`, `h4`                               | number: `1`, `2`, `3`, `4`                                                     | 1       |         |\n| mark      | Marked style                                                                            | boolean                                                                        | false   |         |\n| underline | Underlined style                                                                        | boolean                                                                        | false   |         |\n| onChange  | Trigger when user edits the content                                                     | Function(string)                                                               | -       |         |\n| type      | Content type                                                                            | `secondary` \\| `warning` \\| `danger`                                           | -       |         |"
    ],
    "Typography.Text": [
      "| Property  | Description                                                   | Type                                                                           | Default | Version |\n| --------- | ------------------------------------------------------------- | ------------------------------------------------------------------------------ | ------- | ------- |\n| code      | Code style                                                    | boolean                                                                        | false   |         |\n| copyable  | Config copy. Can set copy text and callback when is an object | boolean \\| { text: string, onCopy: Function }                                  | false   |         |\n| delete    | Deleted line style                                            | boolean                                                                        | false   |         |\n| disabled  | Disabled content                                              | boolean                                                                        | false   |         |\n| editable  | Editable. Can control edit state when is object               | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) } | false   |         |\n| ellipsis  | Display ellipsis when text overflows                          | boolean                                                                        | false   |         |\n| mark      | Marked style                                                  | boolean                                                                        | false   |         |\n| underline | Underlined style                                              | boolean                                                                        | false   |         |\n| onChange  | Trigger when user edits the content                           | Function(string)                                                               | -       |         |\n| strong    | Bold style                                                    | boolean                                                                        | false   |         |\n| type      | Content type                                                  | `secondary` \\| `warning` \\| `danger`                                           | -       |         |"
    ],
    "Typography.Paragraph": [
      "| Property  | Description                                                                                    | Type                                                                                       | Default | Version |\n| --------- | ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | ------- | ------- |\n| code      | Code style                                                                                     | boolean                                                                                    | false   |         |\n| copyable  | Config copy. Can set copy text and callback when is an object                                  | boolean \\| { text: string, onCopy: Function }                                              | false   |         |\n| delete    | Deleted line style                                                                             | boolean                                                                                    | false   |         |\n| disabled  | Disabled content                                                                               | boolean                                                                                    | false   |         |\n| editable  | Editable. Can control edit state when is object                                                | boolean \\| { editing: boolean, onStart: Function, onChange: Function(string) }             | false   |         |\n| ellipsis  | Display ellipsis when text overflows. Can configure rows expandable and suffix by using object | boolean \\| { rows: number, expandable: boolean suffix: string, onExpand: Function(event) } | false   |         |\n| mark      | Marked style                                                                                   | boolean                                                                                    | false   |         |\n| underline | Underlined style                                                                               | boolean                                                                                    | false   |         |\n| onChange  | Trigger when user edits the content                                                            | Function(string)                                                                           | -       |         |\n| strong    | Bold style                                                                                     | boolean                                                                                    | false   |         |\n| type      | Content type                                                                                   | `secondary` \\| `warning` \\| `danger`                                                       | -       |         |"
    ],
    "Upload": [
      "| Property              | Description                                                                                                                                                                         | Type                                                                                                                                                         | Default         | Version |                   |      |         |     |     |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------- | ------- | ----------------- | ---- | ------- | --- | --- |\n| accept                | File types that can be accepted. See [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)                                          | string                                                                                                                                                       | -               |         |                   |      |         |     |     |\n| action                | Uploading URL                                                                                                                                                                       | string\\|(file) => `Promise`                                                                                                                                  | -               |         |                   |      |         |     |     |\n| method                | http method of upload request                                                                                                                                                       | string                                                                                                                                                       | 'post'          |         |                   |      |         |     |     |\n| directory             | support upload whole directory ([caniuse](https://caniuse.com/#feat=input-file-directory))                                                                                          | boolean                                                                                                                                                      | false           |         |                   |      |         |     |     |\n| beforeUpload          | Hook function which will be executed before uploading. Uploading will be stopped with `false` or a rejected Promise returned. **Warning：this function is not supported in IE9**。    | (file, fileList) => \\`boolean                                                                                                                                | Promise\\`       | -       |                   |      |         |     |     |\n| customRequest         | override for the default xhr behavior allowing for additional customization and ability to implement your own XMLHttpRequest                                                        | Function                                                                                                                                                     | -               |         |                   |      |         |     |     |\n| data                  | Uploading extra params or function which can return uploading extra params.                                                                                                         | object\\|function(file)                                                                                                                                       | -               |         |                   |      |         |     |     |\n| defaultFileList       | Default list of files that have been uploaded.                                                                                                                                      | object\\[]                                                                                                                                                    | -               |         |                   |      |         |     |     |\n| disabled              | disable upload button                                                                                                                                                               | boolean                                                                                                                                                      | false           |         |                   |      |         |     |     |\n| fileList              | List of files that have been uploaded (controlled). Here is a common issue [#2423](https://github.com/ant-design/ant-design/issues/2423) when using it                              | object\\[]                                                                                                                                                    | -               |         |                   |      |         |     |     |\n| headers               | Set request headers, valid above IE10.                                                                                                                                              | object                                                                                                                                                       | -               |         |                   |      |         |     |     |\n| listType              | Built-in stylesheets, support for three types: `text`, `picture` or `picture-card`                                                                                                  | string                                                                                                                                                       | 'text'          |         |                   |      |         |     |     |\n| multiple              | Whether to support selected multiple file. `IE10+` supported. You can select multiple files with CTRL holding down while multiple is set to be true                                 | boolean                                                                                                                                                      | false           |         |                   |      |         |     |     |\n| name                  | The name of uploading file                                                                                                                                                          | string                                                                                                                                                       | 'file'          |         |                   |      |         |     |     |\n| previewFile           | Customize preview file logic                                                                                                                                                        | (file: File \\| Blob) => Promise&lt;dataURL: string>                                                                                                          | -               |         |                   |      |         |     |     |\n| showUploadList        | Whether to show default upload list, could be an object to specify `showPreviewIcon`, `showRemoveIcon`, `showDownloadIcon`, `removeIcon` and `downloadIcon` individually            | Boolean or { showPreviewIcon?: boolean, showDownloadIcon?: boolean, showRemoveIcon?: boolean, removeIcon?: React.ReactNode, downloadIcon?: React.ReactNode } | true            |         |                   |      |         |     |     |\n| supportServerRender   | Need to be turned on while the server side is rendering                                                                                                                             | boolean                                                                                                                                                      | false           |         |                   |      |         |     |     |\n| withCredentials       | ajax upload with cookie sent                                                                                                                                                        | boolean                                                                                                                                                      | false           |         |                   |      |         |     |     |\n| openFileDialogOnClick | click open file dialog                                                                                                                                                              | boolean                                                                                                                                                      | true            |         |                   |      |         |     |     |\n| onChange              | A callback function, can be executed when uploading state is changing, see [onChange](#onChange)                                                                                    | Function                                                                                                                                                     | -               |         |                   |      |         |     |     |\n| onPreview             | A callback function, will be executed when file link or preview icon is clicked                                                                                                     | Function(file)                                                                                                                                               | -               |         |                   |      |         |     |     |\n| onRemove              | A callback function, will be executed when removing file button is clicked, remove event will be prevented when return value is `false` or a Promise which resolve(false) or reject | Function(file): \\`boolean                                                                                                                                    | Promise\\`       | -       |                   |      |         |     |     |\n| onDownload            | Click the method to download the file, pass the method to perform the method logic, do not pass the default jump to the new TAB.                                                    | Function(file): void                                                                                                                                         | Jump to new TAB |         |                   |      |         |     |     |\n| transformFile         | Customize transform file before request                                                                                                                                             | Function(file): \\`string                                                                                                                                     | Blob            | File    | Promise&lt;string | Blob | File>\\` | -   |     |\n| iconRender            | custom show icon                                                                                                                                                                    | (file: UploadFile, listType?: UploadListType) => React.ReactNode                                                                                             | -               |         |                   |      |         |     |     |"
    ],
    "DatePicker": [
      "| Property              | Description                                                                                                                                                            | Type                                       | Default                                            | Version |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------ | -------------------------------------------------- | ------- |\n| defaultValue          | to set default date, if start time or end time is null or undefined, the date range will be an open interval                                                           | [moment](http://momentjs.com/)             | -                                                  |         |\n| defaultPickerValue    | to set default picker date                                                                                                                                             | [moment](http://momentjs.com/)             | -                                                  |         |\n| disabledTime          | to specify the time that cannot be selected                                                                                                                            | function(date)                             | -                                                  |         |\n| format                | to set the date format, refer to [moment.js](http://momentjs.com/). When an array is provided, all values are used for parsing and first value is used for formatting. | string \\| string\\[]                        | \"YYYY-MM-DD\"                                       |         |\n| renderExtraFooter     | render extra footer in panel                                                                                                                                           | (mode) => React.ReactNode                  | -                                                  |         |\n| showTime              | to provide an additional time selection                                                                                                                                | object\\|boolean                            | [TimePicker Options](/components/time-picker/#API) |         |\n| showTime.defaultValue | to set default time of selected date, [demo](#components-date-picker-demo-disabled-date)                                                                               | [moment](http://momentjs.com/)             | moment()                                           |         |\n| showToday             | whether to show \"Today\" button                                                                                                                                         | boolean                                    | true                                               |         |\n| value                 | to set date                                                                                                                                                            | [moment](http://momentjs.com/)             | -                                                  |         |\n| onChange              | a callback function, can be executed when the selected time is changing                                                                                                | function(date: moment, dateString: string) | -                                                  |         |\n| onOk                  | callback when click ok button                                                                                                                                          | function()                                 | -                                                  |         |\n| onPanelChange         | Callback function for panel changing                                                                                                                                   | function(value, mode)                      | -                                                  |         |"
    ],
    "DatePicker.MonthPicker": [
      "| Property           | Description                                                             | Type                                       | Default   | Version |\n| ------------------ | ----------------------------------------------------------------------- | ------------------------------------------ | --------- | ------- |\n| defaultValue       | to set default date                                                     | [moment](http://momentjs.com/)             | -         |         |\n| defaultPickerValue | to set default picker date                                              | [moment](http://momentjs.com/)             | -         |         |\n| format             | to set the date format, refer to [moment.js](http://momentjs.com/)      | string                                     | \"YYYY-MM\" |         |\n| monthCellRender    | Custom month cell content render method                                 | function(date, locale): ReactNode          | -         |         |\n| renderExtraFooter  | render extra footer in panel                                            | () => React.ReactNode                      | -         |         |\n| value              | to set date                                                             | [moment](http://momentjs.com/)             | -         |         |\n| onChange           | a callback function, can be executed when the selected time is changing | function(date: moment, dateString: string) | -         |         |"
    ],
    "DatePicker.WeekPicker": [
      "| Property           | Description                                                             | Type                                       | Default   | Version |\n| ------------------ | ----------------------------------------------------------------------- | ------------------------------------------ | --------- | ------- |\n| defaultValue       | to set default date                                                     | [moment](http://momentjs.com/)             | -         |         |\n| defaultPickerValue | to set default picker date                                              | [moment](http://momentjs.com/)             | -         |         |\n| format             | to set the date format, refer to [moment.js](http://momentjs.com/)      | string                                     | \"YYYY-wo\" |         |\n| value              | to set date                                                             | [moment](http://momentjs.com/)             | -         |         |\n| onChange           | a callback function, can be executed when the selected time is changing | function(date: moment, dateString: string) | -         |         |\n| renderExtraFooter  | render extra footer in panel                                            | (mode) => React.ReactNode                  | -         |         |"
    ],
    "DatePicker.RangePicker": [
      "| Property              | Description                                                                                                                                                            | Type                                                                                                                     | Default                                            | Version |     |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------- | ------- | --- |\n| allowEmpty            | Allow start or end input leave empty                                                                                                                                   | \\[boolean, boolean]                                                                                                      | \\[false, false]                                    |         |     |\n| defaultValue          | to set default date                                                                                                                                                    | \\[[moment](http://momentjs.com/), [moment](http://momentjs.com/)]                                                        | -                                                  |         |     |\n| defaultPickerValue    | to set default picker date                                                                                                                                             | \\[[moment](http://momentjs.com/), [moment](http://momentjs.com/)]                                                        | -                                                  |         |     |\n| disabled              | disable start or end                                                                                                                                                   | [boolean, boolean]                                                                                                       | -                                                  |         |     |\n| disabledTime          | to specify the time that cannot be selected                                                                                                                            | function(dates: \\[moment, moment], partial: \\`'start'                                                                    | 'end'\\`)                                           | -       |     |\n| format                | to set the date format, refer to [moment.js](http://momentjs.com/). When an array is provided, all values are used for parsing and first value is used for formatting. | string \\| string\\[]                                                                                                      | \"YYYY-MM-DD HH:mm:ss\"                              |         |     |\n| ranges                | preseted ranges for quick selection                                                                                                                                    | { \\[range: string]: [moment](http://momentjs.com/)\\[] } \\| { \\[range: string]: () => [moment](http://momentjs.com/)\\[] } | -                                                  |         |     |\n| renderExtraFooter     | render extra footer in panel                                                                                                                                           | () => React.ReactNode                                                                                                    | -                                                  |         |     |\n| separator             | set separator between inputs                                                                                                                                           | string                                                                                                                   | '~'                                                |         |     |\n| showTime              | to provide an additional time selection                                                                                                                                | object\\|boolean                                                                                                          | [TimePicker Options](/components/time-picker/#API) |         |     |\n| showTime.defaultValue | to set default time of selected date, [demo](#components-date-picker-demo-disabled-date)                                                                               | [moment](http://momentjs.com/)\\[]                                                                                        | \\[moment(), moment()]                              |         |     |\n| value                 | to set date                                                                                                                                                            | \\[[moment](http://momentjs.com/), [moment](http://momentjs.com/)]                                                        | -                                                  |         |     |\n| onCalendarChange      | a callback function, can be executed when the start time or the end time of the range is changing                                                                      | function(dates: \\[moment, moment], dateStrings: \\[string, string])                                                       | -                                                  |         |     |\n| onChange              | a callback function, can be executed when the selected time is changing                                                                                                | function(dates: \\[moment, moment], dateStrings: \\[string, string])                                                       | -                                                  |         |     |"
    ],
    "Form": [
      "| Property           | Description                                                                                                                                                    | Type                                                                                                | Default      |\n| ------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- | ------------ |\n| component          | Set the Form rendering element. Do not create a DOM node for `false`                                                                                           | ComponentType \\| false                                                                              | form         |\n| colon              | Configure the default value of `colon` for Form.Item. Indicates whether the colon after the label is displayed (only effective when prop layout is horizontal) | boolean                                                                                             | true         |\n| fields             | Control of form fields through state management (such as redux). Not recommended for non-strong demand. View [example](#components-form-demo-global-state)     | [FieldData](#FieldData)\\[]                                                                          | -            |\n| form               | Form control instance created by `Form.useForm()`. Automatically created when not provided                                                                     | [FormInstance](#FormInstance)                                                                       | -            |\n| hideRequiredMark   | Hide required mark for all form items                                                                                                                          | boolean                                                                                             | false        |\n| initialValues      | Set value by Form initialization or reset                                                                                                                      | object                                                                                              | -            |\n| labelAlign         | text align of label of all items                                                                                                                               | `left` \\| `right`                                                                                   | `right`      |\n| labelCol           | label layout, like `<Col>` component. Set `span` `offset` value like `{span: 3, offset: 12}` or `sm: {span: 3, offset: 12}`                                    | [object](https://ant.design/components/grid/#Col)                                                   | -            |\n| layout             | Form layout                                                                                                                                                    | `horizontal` \\| `vertical` \\| `inline`                                                              | `horizontal` |\n| name               | Form name. Will be the prefix of Field `id`                                                                                                                    | string                                                                                              | -            |\n| scrollToFirstError | Auto scroll to first failed field when submit                                                                                                                  | false                                                                                               | -            |\n| size               | Set field component size (antd components only)                                                                                                                | `small` \\| `middle` \\| `large`                                                                      | -            |\n| validateMessages   | Validation prompt template, description [see below](#validateMessages)                                                                                         | [ValidateMessages](https://github.com/react-component/field-form/blob/master/src/utils/messages.ts) | -            |\n| wrapperCol         | The layout for input controls, same as `labelCol`                                                                                                              | [object](https://ant.design/components/grid/#Col)                                                   | -            |\n| onFinish           | Trigger after submitting the form and verifying data successfully                                                                                              | Function(values)                                                                                    | -            |\n| onFinishFailed     | Trigger after submitting the form and verifying data failed                                                                                                    | Function({ values, errorFields, outOfDate })                                                        | -            |\n| onFieldsChange     | Trigger when field updated                                                                                                                                     | Function(changedFields, allFields)                                                                  | -            |\n| onValuesChange     | Trigger when value updated                                                                                                                                     | Function(changedValues, allValues)                                                                  | -            |"
    ],
    "Form.Item": [
      "| Property          | Description                                                                                                                                                                                                    | Type                                        | Default  | Version |\n| ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | -------- | ------- |\n| colon             | Used with `label`, whether to display `:` after label text.                                                                                                                                                    | boolean                                     | true     |         |\n| dependencies      | Set the dependency field. See [below](#dependencies)                                                                                                                                                           | [NamePath](#NamePath)\\[]                    | -        |         |\n| extra             | The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time                                                                                   | string\\|ReactNode                           | -        |         |\n| getValueFromEvent | Specify how to get value from event or other onChange arguments                                                                                                                                                | (..args: any\\[]) => any                     | -        |         |\n| hasFeedback       | Used with `validateStatus`, this option specifies the validation status icon. Recommended to be used only with `Input`                                                                                         | boolean                                     | false    |         |\n| help              | The prompt message. If not provided, the prompt message will be generated by the validation rule.                                                                                                              | string\\|ReactNode                           | -        |         |\n| htmlFor           | Set sub label `htmlFor`                                                                                                                                                                                        | string                                      | -        |         |\n| noStyle           | No style for `true`, used as a pure field control                                                                                                                                                              | boolean                                     | false    |         |\n| label             | Label text                                                                                                                                                                                                     | string\\|ReactNode                           | -        |         |\n| labelAlign        | text align of label                                                                                                                                                                                            | `left` \\| `right`                           | `right`  |         |\n| labelCol          | The layout of label. You can set `span` `offset` to something like `{span: 3, offset: 12}` or `sm: {span: 3, offset: 12}` same as with `<Col>`. You can set `labelCol` on Form. If both exists, use Item first | [object](/components/grid/#Col)             | -        |         |\n| name              | Field name, support array                                                                                                                                                                                      | [NamePath](#NamePath)                       | -        |         |\n| normalize         | Normalize value from component value before passing to Form instance                                                                                                                                           | (value, prevValue, prevValues) => any       | -        |         |\n| required          | Whether provided or not, it will be generated by the validation rule                                                                                                                                           | boolean                                     | false    |         |\n| rules             | Rules for field validation. Click [here](#components-form-demo-basic) to see an example                                                                                                                        | [Rule](#Rule)\\[]                            | -        |         |\n| shouldUpdate      | Custom field update logic. See [below](#shouldUpdate)                                                                                                                                                          | boolean \\| (prevValue, curValue) => boolean | false    |         |\n| trigger           | When to collect the value of children node                                                                                                                                                                     | string                                      | onChange |         |\n| validateFirst     | Whether stop validate on first rule of error for this field                                                                                                                                                    | boolean                                     | false    |         |\n| validateStatus    | The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating'                                                                             | string                                      | -        |         |\n| validateTrigger   | When to validate the value of children node                                                                                                                                                                    | string \\| string\\[]                         | onChange |         |\n| valuePropName     | Props of children node, for example, the prop of Switch is 'checked'                                                                                                                                           | string                                      | 'value'  |         |\n| wrapperCol        | The layout for input controls, same as `labelCol`. You can set `wrapperCol` on Form. If both exists, use Item first                                                                                            | [object](/components/grid/#Col)             | -        |         |"
    ],
    "Table": [
      "| Property          | Description                                                                                                                                                         | Type                                                                                                                                                | Default                                                                                                                                                            |\n| ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| tableLayout       | [table-layout](https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout) attribute of table element                                                            | - \\| `auto` \\| `fixed`                                                                                                                              | -<hr />`fixed` when header/columns are fixed, or using `column.ellipsis`                                                                                           |\n| bordered          | Whether to show all table borders                                                                                                                                   | boolean                                                                                                                                             | `false`                                                                                                                                                            |\n| columns           | Columns of table                                                                                                                                                    | [ColumnProps](#Column)\\[]                                                                                                                           | -                                                                                                                                                                  |\n| components        | Override default table elements                                                                                                                                     | [TableComponents](https://git.io/fANxz)                                                                                                             | -                                                                                                                                                                  |\n| dataSource        | Data record array to be displayed                                                                                                                                   | any\\[]                                                                                                                                              | -                                                                                                                                                                  |\n| expandable        | Config expandable content                                                                                                                                           | [expandable](#expandable)                                                                                                                           | -                                                                                                                                                                  |\n| footer            | Table footer renderer                                                                                                                                               | Function(currentPageData)                                                                                                                           | -                                                                                                                                                                  |\n| loading           | Loading status of table                                                                                                                                             | boolean\\|[object](https://ant.design/components/spin-cn/#API) ([more](https://github.com/ant-design/ant-design/issues/4544#issuecomment-271533135)) | `false`                                                                                                                                                            |\n| locale            | i18n text including filter, sort, empty text, etc                                                                                                                   | object                                                                                                                                              | filterConfirm: 'Ok' <br> filterReset: 'Reset' <br> emptyText: 'No Data' <br> [Default](https://github.com/ant-design/ant-design/issues/575#issuecomment-159169511) |\n| pagination        | Config of pagination. You can ref table pagination [config](#pagination) or full [`pagination`](/components/pagination/) document, hide it by setting it to `false` | object                                                                                                                                              | -                                                                                                                                                                  |\n| rowClassName      | Row's className                                                                                                                                                     | Function(record, index):string                                                                                                                      | -                                                                                                                                                                  |\n| rowKey            | Row's unique key, could be a string or function that returns a string                                                                                               | string\\|Function(record):string                                                                                                                     | `key`                                                                                                                                                              |\n| rowSelection      | Row selection [config](#rowSelection)                                                                                                                               | object                                                                                                                                              | null                                                                                                                                                               |\n| scroll            | Whether the table can be scrollable, [config](#scroll)                                                                                                              | object                                                                                                                                              | -                                                                                                                                                                  |\n| showHeader        | Whether to show table header                                                                                                                                        | boolean                                                                                                                                             | `true`                                                                                                                                                             |\n| size              | Size of table                                                                                                                                                       | `default` \\| `middle` \\| `small`                                                                                                                    | `default`                                                                                                                                                          |\n| summary           | Summary content                                                                                                                                                     | (currentData) => ReactNode                                                                                                                          | -                                                                                                                                                                  |\n| title             | Table title renderer                                                                                                                                                | Function(currentPageData)                                                                                                                           | -                                                                                                                                                                  |\n| onChange          | Callback executed when pagination, filters or sorter is changed                                                                                                     | Function(pagination, filters, sorter, extra: { currentDataSource: \\[] })                                                                            | -                                                                                                                                                                  |\n| onHeaderRow       | Set props on per header row                                                                                                                                         | Function(column, index)                                                                                                                             | -                                                                                                                                                                  |\n| onRow             | Set props on per row                                                                                                                                                | Function(record, index)                                                                                                                             | -                                                                                                                                                                  |\n| getPopupContainer | the render container of dropdowns in table                                                                                                                          | (triggerNode) => HTMLElement                                                                                                                        | `() => TableHtmlElement`                                                                                                                                           |\n| sortDirections    | supported sort way, could be `'ascend'`, `'descend'`                                                                                                                | Array                                                                                                                                               | `['ascend', 'descend']`                                                                                                                                            |\n| showSorterTooltip | header show next sorter direction tooltip                                                                                                                           | boolean                                                                                                                                             | `true`                                                                                                                                                             |"
    ],
    "Table.ColumnGroup": [
      "| Property | Description               | Type              | Default |\n| -------- | ------------------------- | ----------------- | ------- |\n| title    | Title of the column group | string\\|ReactNode | -       |"
    ],
    "Table.Column": [
      "| Property                      | Description                                                                                                                                                                                                 | Type                                                                                       | Default                 |     |\n| ----------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | ----------------------- | --- |\n| align                         | specify which way that column is aligned                                                                                                                                                                    | `left` \\| `right` \\| `center`                                                              | `left`                  |     |\n| ellipsis                      | ellipsis cell content, not working with sorter and filters for now.<br />tableLayout would be `fixed` when `ellipsis` is true.                                                                              | boolean                                                                                    | false                   |     |\n| className                     | className of this column                                                                                                                                                                                    | string                                                                                     | -                       |     |\n| colSpan                       | Span of this column's title                                                                                                                                                                                 | number                                                                                     | -                       |     |\n| dataIndex                     | Display field of the data record, support nest path by string array                                                                                                                                         | string \\| string\\[]                                                                        | -                       |     |\n| defaultFilteredValue          | Default filtered values                                                                                                                                                                                     | string\\[]                                                                                  | -                       |     |\n| defaultSortOrder              | Default order of sorted values                                                                                                                                                                              | `ascend` \\| `descend`                                                                      | -                       |     |\n| filterDropdown                | Customized filter overlay                                                                                                                                                                                   | React.ReactNode \\| (props: [FilterDropdownProps](https://git.io/fjP5h)) => React.ReactNode | -                       |     |\n| filterDropdownVisible         | Whether `filterDropdown` is visible                                                                                                                                                                         | boolean                                                                                    | -                       |     |\n| filtered                      | Whether the `dataSource` is filtered                                                                                                                                                                        | boolean                                                                                    | `false`                 |     |\n| filteredValue                 | Controlled filtered value, filter icon will highlight                                                                                                                                                       | string\\[]                                                                                  | -                       |     |\n| filterIcon                    | Customized filter icon                                                                                                                                                                                      | ReactNode\\|(filtered: boolean) => ReactNode                                                | `false`                 |     |\n| filterMultiple                | Whether multiple filters can be selected                                                                                                                                                                    | boolean                                                                                    | `true`                  |     |\n| filters                       | Filter menu config                                                                                                                                                                                          | object\\[]                                                                                  | -                       |     |\n| fixed                         | (IE not support) Set column to be fixed: `true`(same as left) `'left'` `'right'`                                                                                                                            | boolean\\|string                                                                            | `false`                 |     |\n| key                           | Unique key of this column, you can ignore this prop if you've set a unique `dataIndex`                                                                                                                      | string                                                                                     | -                       |     |\n| render                        | Renderer of the table cell. The return value should be a ReactNode, or an object for [colSpan/rowSpan config](#components-table-demo-colspan-rowspan)                                                       | Function(text, record, index) {}                                                           | -                       |     |\n| sorter                        | Sort function for local sort, see [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)'s compareFunction. If you need sort buttons only, set to `true` | Function\\|boolean                                                                          | -                       |     |\n| sortOrder                     | Order of sorted values: `'ascend'` `'descend'` `false`                                                                                                                                                      | boolean\\|string                                                                            | -                       |     |\n| sortDirections                | supported sort way, override `sortDirections` in `Table`, could be `'ascend'`, `'descend'`                                                                                                                  | Array                                                                                      | `['ascend', 'descend']` |     |\n| title                         | Title of this column                                                                                                                                                                                        | ReactNode\\|({ sortOrder, sortColumn, filters }) => ReactNode                               | -                       |     |\n| width                         | Width of this column ([width not working?](https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241))                                                                                   | string\\|number                                                                             | -                       |     |\n| onCell                        | Set props on per cell                                                                                                                                                                                       | Function(record, rowIndex)                                                                 | -                       |     |\n| onFilter                      | Callback executed when the confirm filter button is clicked                                                                                                                                                 | Function                                                                                   | -                       |     |\n| onFilterDropdownVisibleChange | Callback executed when `filterDropdownVisible` is changed                                                                                                                                                   | function(visible) {}                                                                       | -                       |     |\n| onHeaderCell                  | Set props on per header cell                                                                                                                                                                                | Function(column)                                                                           | -                       |     |\n| showSorterTooltip             | header show next sorter direction tooltip, override `showSorterTooltip` in table                                                                                                                            | boolean                                                                                    | `true`                  |     |"
    ]
  }
}